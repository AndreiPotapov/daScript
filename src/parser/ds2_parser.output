Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 59 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 510 conflicts: 2 shift/reduce
State 512 conflicts: 2 shift/reduce
State 527 conflicts: 1 shift/reduce
State 551 conflicts: 1 shift/reduce
State 618 conflicts: 1 shift/reduce
State 662 conflicts: 1 shift/reduce
State 889 conflicts: 2 shift/reduce
State 906 conflicts: 1 shift/reduce
State 1002 conflicts: 1 shift/reduce
State 1308 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: "begin of code block" expressions "end of code block"
  217                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  218 expr_call_pipe: expr expr_full_block_assumed_piped
  219               | expression_keyword expr_full_block_assumed_piped

  220 expression_any: "end of expression"
  221               | expr_pipe
  222               | expr_keyword
  223               | expr_assign_pipe
  224               | expr_assign "end of expression"
  225               | expression_delete "end of expression"
  226               | expression_let
  227               | expression_while_loop
  228               | expression_unsafe
  229               | expression_with
  230               | expression_with_alias
  231               | expression_for_loop
  232               | expression_break "end of expression"
  233               | expression_continue "end of expression"
  234               | expression_return
  235               | expression_yield
  236               | expression_if_then_else
  237               | expression_try_catch
  238               | expression_label "end of expression"
  239               | expression_goto "end of expression"
  240               | "pass" "end of expression"

  241 expressions: %empty
  242            | expressions expression_any
  243            | expressions error

  244 expr_keyword: "keyword" expr expression_block

  245 optional_expr_list: %empty
  246                   | expr_list

  247 optional_expr_list_in_braces: %empty
  248                             | '(' optional_expr_list ')'

  249 type_declaration_no_options_list: type_declaration
  250                                 | type_declaration_no_options_list "end of expression" type_declaration

  251 $@7: %empty

  252 $@8: %empty

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  254 $@9: %empty

  255 $@10: %empty

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  257 expr_pipe: expr_assign " <|" expr_block
  258          | "@ <|" expr_block
  259          | "@@ <|" expr_block
  260          | "$ <|" expr_block
  261          | expr_call_pipe

  262 name_in_namespace: "name"
  263                  | "name" "::" "name"
  264                  | "::" "name"

  265 expression_delete: "delete" expr
  266                  | "delete" "explicit" expr

  267 $@11: %empty

  268 $@12: %empty

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12
  270                     | structure_type_declaration

  271 expr_new: "new" new_type_declaration
  272         | "new" new_type_declaration '(' ')'
  273         | "new" new_type_declaration '(' expr_list ')'
  274         | "new" new_type_declaration '(' make_struct_single ')'
  275         | "new" make_decl

  276 expression_break: "break"

  277 expression_continue: "continue"

  278 expression_return_no_pipe: "return"
  279                          | "return" expr_list
  280                          | "return" "<-" expr_list

  281 expression_return: expression_return_no_pipe "end of expression"
  282                  | "return" expr_pipe
  283                  | "return" "<-" expr_pipe

  284 expression_yield_no_pipe: "yield" expr
  285                         | "yield" "<-" expr

  286 expression_yield: expression_yield_no_pipe "end of expression"
  287                 | "yield" expr_pipe
  288                 | "yield" "<-" expr_pipe

  289 expression_try_catch: "try" expression_block "recover" expression_block

  290 kwd_let_var_or_nothing: "let"
  291                       | "var"
  292                       | %empty

  293 kwd_let: "let"
  294        | "var"

  295 optional_in_scope: "inscope"
  296                  | %empty

  297 tuple_expansion: "name"
  298                | tuple_expansion ',' "name"

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  300                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  301 expression_let: kwd_let optional_in_scope let_variable_declaration
  302               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  303 $@13: %empty

  304 $@14: %empty

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  306 $@15: %empty

  307 $@16: %empty

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  309 $@17: %empty

  310 $@18: %empty

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  312 $@19: %empty

  313 $@20: %empty

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  315 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  316               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  317               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  318 expr_list: expr
  319          | expr_list ',' expr

  320 block_or_simple_block: expression_block
  321                      | "=>" expr
  322                      | "=>" "<-" expr

  323 block_or_lambda: '$'
  324                | '@'
  325                | '@' '@'

  326 capture_entry: '&' "name"
  327              | '=' "name"
  328              | "<-" "name"
  329              | ":=" "name"

  330 capture_list: capture_entry
  331             | capture_list ',' capture_entry

  332 optional_capture_list: %empty
  333                      | '[' '[' capture_list ']' ']'

  334 expr_block: expression_block
  335           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  336 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  337 $@21: %empty

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  339 expr_numeric_const: "integer constant"
  340                   | "unsigned integer constant"
  341                   | "long integer constant"
  342                   | "unsigned long integer constant"
  343                   | "unsigned int8 constant"
  344                   | "floating point constant"
  345                   | "double constant"

  346 expr_assign: expr
  347            | expr '=' expr
  348            | expr "<-" expr
  349            | expr ":=" expr
  350            | expr "&=" expr
  351            | expr "|=" expr
  352            | expr "^=" expr
  353            | expr "&&=" expr
  354            | expr "||=" expr
  355            | expr "^^=" expr
  356            | expr "+=" expr
  357            | expr "-=" expr
  358            | expr "*=" expr
  359            | expr "/=" expr
  360            | expr "%=" expr
  361            | expr "<<=" expr
  362            | expr ">>=" expr
  363            | expr "<<<=" expr
  364            | expr ">>>=" expr

  365 expr_assign_pipe_right: "@ <|" expr_block
  366                       | "@@ <|" expr_block
  367                       | "$ <|" expr_block
  368                       | expr_call_pipe

  369 expr_assign_pipe: expr '=' expr_assign_pipe_right
  370                 | expr "<-" expr_assign_pipe_right
  371                 | expr "&=" expr_assign_pipe_right
  372                 | expr "|=" expr_assign_pipe_right
  373                 | expr "^=" expr_assign_pipe_right
  374                 | expr "&&=" expr_assign_pipe_right
  375                 | expr "||=" expr_assign_pipe_right
  376                 | expr "^^=" expr_assign_pipe_right
  377                 | expr "+=" expr_assign_pipe_right
  378                 | expr "-=" expr_assign_pipe_right
  379                 | expr "*=" expr_assign_pipe_right
  380                 | expr "/=" expr_assign_pipe_right
  381                 | expr "%=" expr_assign_pipe_right
  382                 | expr "<<=" expr_assign_pipe_right
  383                 | expr ">>=" expr_assign_pipe_right
  384                 | expr "<<<=" expr_assign_pipe_right
  385                 | expr ">>>=" expr_assign_pipe_right

  386 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  387                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  388 expr_method_call: expr "->" "name" '(' ')'
  389                 | expr "->" "name" '(' expr_list ')'

  390 func_addr_name: name_in_namespace
  391               | "$i" '(' expr ')'

  392 func_addr_expr: '@' '@' func_addr_name

  393 $@22: %empty

  394 $@23: %empty

  395 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  396 $@24: %empty

  397 $@25: %empty

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  399 expr_field: expr '.' "name"
  400           | expr '.' '.' "name"
  401           | expr '.' "name" '(' ')'
  402           | expr '.' "name" '(' expr_list ')'

  403 $@26: %empty

  404 $@27: %empty

  405 expr_field: expr '.' $@26 error $@27

  406 expr_call: name_in_namespace '(' ')'
  407          | name_in_namespace '(' make_struct_single ')'
  408          | name_in_namespace '(' expr_list ')'
  409          | basic_type_declaration '(' ')'
  410          | basic_type_declaration '(' expr_list ')'

  411 expr: "null"
  412     | name_in_namespace
  413     | expr_numeric_const
  414     | expr_reader
  415     | string_builder
  416     | make_decl
  417     | "true"
  418     | "false"
  419     | expr_field
  420     | expr_mtag
  421     | '!' expr
  422     | '~' expr
  423     | '+' expr
  424     | '-' expr
  425     | expr "<<" expr
  426     | expr ">>" expr
  427     | expr "<<<" expr
  428     | expr ">>>" expr
  429     | expr '+' expr
  430     | expr '-' expr
  431     | expr '*' expr
  432     | expr '/' expr
  433     | expr '%' expr
  434     | expr '<' expr
  435     | expr '>' expr
  436     | expr "==" expr
  437     | expr "!=" expr
  438     | expr "<=" expr
  439     | expr ">=" expr
  440     | expr '&' expr
  441     | expr '|' expr
  442     | expr '^' expr
  443     | expr "&&" expr
  444     | expr "||" expr
  445     | expr "^^" expr
  446     | expr ".." expr
  447     | "++" expr
  448     | "--" expr
  449     | expr "++"
  450     | expr "--"
  451     | '(' expr_list optional_comma ')'
  452     | expr '[' expr ']'
  453     | expr '.' '[' expr ']'
  454     | expr "?[" expr ']'
  455     | expr '.' "?[" expr ']'
  456     | expr "?." "name"
  457     | expr '.' "?." "name"
  458     | func_addr_expr
  459     | expr_call
  460     | '*' expr
  461     | "deref" '(' expr ')'
  462     | "addr" '(' expr ')'
  463     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  464     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  465     | expr "??" expr
  466     | expr '?' expr ':' expr

  467 $@28: %empty

  468 $@29: %empty

  469 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr "is" basic_type_declaration
  471     | expr "is" "name"
  472     | expr "as" "name"

  473 $@30: %empty

  474 $@31: %empty

  475 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr "as" basic_type_declaration
  477     | expr '?' "as" "name"

  478 $@32: %empty

  479 $@33: %empty

  480 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr '?' "as" basic_type_declaration
  482     | expr_type_info
  483     | expr_type_decl
  484     | expr_cast
  485     | expr_new
  486     | expr_method_call
  487     | expr_named_call
  488     | expr_full_block
  489     | expr "<|" expr
  490     | expr "|>" expr
  491     | expr "|>" basic_type_declaration
  492     | name_in_namespace "name"
  493     | "unsafe" '(' expr ')'
  494     | expression_keyword

  495 expr_mtag: "$$" '(' expr ')'
  496          | "$i" '(' expr ')'
  497          | "$v" '(' expr ')'
  498          | "$b" '(' expr ')'
  499          | "$a" '(' expr ')'
  500          | "..."
  501          | "$c" '(' expr ')' '(' ')'
  502          | "$c" '(' expr ')' '(' expr_list ')'
  503          | expr '.' "$f" '(' expr ')'
  504          | expr "?." "$f" '(' expr ')'
  505          | expr '.' '.' "$f" '(' expr ')'
  506          | expr '.' "?." "$f" '(' expr ')'
  507          | expr "as" "$f" '(' expr ')'
  508          | expr '?' "as" "$f" '(' expr ')'
  509          | expr "is" "$f" '(' expr ')'
  510          | '@' '@' "$c" '(' expr ')'

  511 optional_field_annotation: %empty
  512                          | '[' '[' annotation_argument_list ']' ']'

  513 optional_override: %empty
  514                  | "override"
  515                  | "sealed"

  516 optional_constant: %empty
  517                  | "const"

  518 optional_public_or_private_member_variable: %empty
  519                                           | "public"
  520                                           | "private"

  521 optional_static_member_variable: %empty
  522                                | "static"

  523 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  524 struct_variable_declaration_list: %empty

  525 $@34: %empty

  526 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  527 $@35: %empty

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  529 $@36: %empty

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  531                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  532 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  533                              | "$a" '(' expr ')'

  534 function_argument_list: function_argument_declaration
  535                       | function_argument_list "end of expression" function_argument_declaration

  536 tuple_type: type_declaration
  537           | "name" ':' type_declaration

  538 tuple_type_list: tuple_type
  539                | tuple_type_list "end of expression" tuple_type

  540 tuple_alias_type_list: %empty
  541                      | tuple_alias_type_list "end of expression"
  542                      | tuple_alias_type_list tuple_type "end of expression"

  543 variant_type: "name" ':' type_declaration

  544 variant_type_list: variant_type
  545                  | variant_type_list "end of expression" variant_type

  546 variant_alias_type_list: %empty
  547                        | variant_alias_type_list "end of expression"
  548                        | variant_alias_type_list variant_type "end of expression"

  549 copy_or_move: '='
  550             | "<-"

  551 variable_declaration: variable_name_with_pos_list
  552                     | variable_name_with_pos_list '&'
  553                     | variable_name_with_pos_list ':' type_declaration
  554                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  555                     | variable_name_with_pos_list copy_or_move expr
  556                     | variable_name_with_pos_list copy_or_move expr_pipe

  557 copy_or_move_or_clone: '='
  558                      | "<-"
  559                      | ":="

  560 optional_ref: %empty
  561             | '&'

  562 let_variable_name_with_pos_list: "name"
  563                                | "$i" '(' expr ')'
  564                                | "name" "aka" "name"
  565                                | let_variable_name_with_pos_list ',' "name"
  566                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  570                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  572 global_variable_declaration_list: %empty

  573 $@37: %empty

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  575 optional_shared: %empty
  576                | "shared"

  577 optional_public_or_private_variable: %empty
  578                                    | "private"
  579                                    | "public"

  580 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  581 $@38: %empty

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  583 enum_list: %empty
  584          | enum_list "end of expression"
  585          | enum_list "name" "end of expression"
  586          | enum_list "name" '=' expr "end of expression"

  587 optional_public_or_private_alias: %empty
  588                                 | "private"
  589                                 | "public"

  590 $@39: %empty

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  592 alias_list: single_alias "end of expression"
  593           | alias_list single_alias "end of expression"

  594 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  595 $@40: %empty

  596 alias_declaration: "typedef" $@40 single_alias "end of expression"

  597 optional_public_or_private_enum: %empty
  598                                | "private"
  599                                | "public"

  600 enum_name: "name"

  601 $@41: %empty

  602 $@42: %empty

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  604 $@43: %empty

  605 $@44: %empty

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  607 optional_structure_parent: %empty
  608                          | ':' name_in_namespace

  609 optional_sealed: %empty
  610                | "sealed"

  611 structure_name: optional_sealed "name" optional_structure_parent

  612 class_or_struct: "class"
  613                | "struct"

  614 optional_public_or_private_structure: %empty
  615                                     | "private"
  616                                     | "public"

  617 optional_struct_variable_declaration_list: %empty
  618                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  619 $@45: %empty

  620 $@46: %empty

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  622 variable_name_with_pos_list: "name"
  623                            | "$i" '(' expr ')'
  624                            | "name" "aka" "name"
  625                            | variable_name_with_pos_list ',' "name"
  626                            | variable_name_with_pos_list ',' "name" "aka" "name"

  627 basic_type_declaration: "bool"
  628                       | "string"
  629                       | "int"
  630                       | "int8"
  631                       | "int16"
  632                       | "int64"
  633                       | "int2"
  634                       | "int3"
  635                       | "int4"
  636                       | "uint"
  637                       | "uint8"
  638                       | "uint16"
  639                       | "uint64"
  640                       | "uint2"
  641                       | "uint3"
  642                       | "uint4"
  643                       | "float"
  644                       | "float2"
  645                       | "float3"
  646                       | "float4"
  647                       | "void"
  648                       | "range"
  649                       | "urange"
  650                       | "range64"
  651                       | "urange64"
  652                       | "double"
  653                       | "bitfield"

  654 enum_basic_type_declaration: "int"
  655                            | "int8"
  656                            | "int16"
  657                            | "uint"
  658                            | "uint8"
  659                            | "uint16"

  660 structure_type_declaration: name_in_namespace

  661 auto_type_declaration: "auto"
  662                      | "auto" '(' "name" ')'
  663                      | "$t" '(' expr ')'

  664 bitfield_bits: "name"
  665              | bitfield_bits "end of expression" "name"

  666 bitfield_alias_bits: %empty
  667                    | bitfield_alias_bits "end of expression"
  668                    | bitfield_alias_bits "name" "end of expression"

  669 $@47: %empty

  670 $@48: %empty

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  672 table_type_pair: type_declaration
  673                | type_declaration "end of expression" type_declaration

  674 dim_list: '[' expr ']'
  675         | dim_list '[' expr ']'

  676 type_declaration_no_options: basic_type_declaration
  677                            | auto_type_declaration
  678                            | bitfield_type_declaration
  679                            | structure_type_declaration
  680                            | type_declaration_no_options dim_list
  681                            | type_declaration_no_options '[' ']'

  682 $@49: %empty

  683 $@50: %empty

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  685                            | "typedecl" '(' expr ')'
  686                            | '$' name_in_namespace '(' optional_expr_list ')'

  687 $@51: %empty

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  689                            | type_declaration_no_options '-' '[' ']'
  690                            | type_declaration_no_options "explicit"
  691                            | type_declaration_no_options "const"
  692                            | type_declaration_no_options '-' "const"
  693                            | type_declaration_no_options '&'
  694                            | type_declaration_no_options '-' '&'
  695                            | type_declaration_no_options '#'
  696                            | type_declaration_no_options "implicit"
  697                            | type_declaration_no_options '-' '#'
  698                            | type_declaration_no_options "==" "const"
  699                            | type_declaration_no_options "==" '&'
  700                            | type_declaration_no_options '?'

  701 $@52: %empty

  702 $@53: %empty

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  704                            | type_declaration_no_options "??"

  705 $@54: %empty

  706 $@55: %empty

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  708 $@56: %empty

  709 $@57: %empty

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  711 $@58: %empty

  712 $@59: %empty

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  714                            | "block"

  715 $@60: %empty

  716 $@61: %empty

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  718 $@62: %empty

  719 $@63: %empty

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  721                            | "function"

  722 $@64: %empty

  723 $@65: %empty

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  725 $@66: %empty

  726 $@67: %empty

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  728                            | "lambda"

  729 $@68: %empty

  730 $@69: %empty

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  732 $@70: %empty

  733 $@71: %empty

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  735 $@72: %empty

  736 $@73: %empty

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  738 $@74: %empty

  739 $@75: %empty

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  741 type_declaration: type_declaration_no_options
  742                 | type_declaration '|' type_declaration_no_options
  743                 | type_declaration '|' '#'

  744 $@76: %empty

  745 $@77: %empty

  746 $@78: %empty

  747 $@79: %empty

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  749 $@80: %empty

  750 $@81: %empty

  751 $@82: %empty

  752 $@83: %empty

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  754 $@84: %empty

  755 $@85: %empty

  756 $@86: %empty

  757 $@87: %empty

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  759 make_decl: make_struct_decl
  760          | make_dim_decl
  761          | make_table_decl
  762          | array_comprehension
  763          | make_tuple_call

  764 make_struct_fields: "name" copy_or_move expr
  765                   | "name" ":=" expr
  766                   | make_struct_fields ',' "name" copy_or_move expr
  767                   | make_struct_fields ',' "name" ":=" expr
  768                   | "$f" '(' expr ')' copy_or_move expr
  769                   | "$f" '(' expr ')' ":=" expr
  770                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  772 make_struct_single: make_struct_fields

  773 $@88: %empty

  774 $@89: %empty

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_single ')'

  776 $@90: %empty

  777 $@91: %empty

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_single ')'

  779 $@92: %empty

  780 $@93: %empty

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_single ')'

  782 $@94: %empty

  783 $@95: %empty

  784 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95

  785 make_map_tuple: expr "=>" expr
  786               | expr

  787 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  788 $@96: %empty

  789 $@97: %empty

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_single ')'

  791 make_dim_decl: '[' expr_list optional_comma ']'
  792              | "array" '(' expr_list optional_comma ')'

  793 $@98: %empty

  794 $@99: %empty

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'
  796              | "fixed_array" '(' expr_list optional_comma ')'

  797 $@100: %empty

  798 $@101: %empty

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

  800 expr_map_tuple_list: make_map_tuple
  801                    | expr_map_tuple_list ',' make_map_tuple

  802 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  803                | "table" '(' expr_map_tuple_list optional_comma ')'
  804                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  806 array_comprehension_where: %empty
  807                          | "end of expression" "where" expr

  808 optional_comma: %empty
  809               | ','

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  811                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 421
    '#' (35) 695 697 743
    '$' (36) 20 323 686 688
    '%' (37) 35 42 145 433
    '&' (38) 153 326 440 552 561 693 694 699
    '(' (40) 100 107 113 120 121 248 272 273 274 299 300 315 316 317 386 387 388 389 391 401 402 406 407 408 409 410 451 461 462 463 464 493 495 496 497 498 499 501 502 503 504 505 506 507 508 509 510 533 563 623 662 663 685 686 688 768 769 770 771 775 778 781 787 790 792 795 796 799 803 804 805
    ')' (41) 100 107 113 120 121 248 272 273 274 299 300 315 316 317 386 387 388 389 391 401 402 406 407 408 409 410 451 461 462 463 464 493 495 496 497 498 499 501 502 503 504 505 506 507 508 509 510 533 563 623 662 663 685 686 688 768 769 770 771 775 778 781 787 790 792 795 796 799 803 804 805
    '*' (42) 143 431 460
    '+' (43) 141 423 429
    ',' (44) 51 89 102 116 298 319 331 387 565 566 625 626 766 767 770 771 801 809
    '-' (45) 142 424 430 689 692 694 697
    '.' (46) 43 170 172 173 399 400 401 402 405 453 455 457 503 505 506
    '/' (47) 44 144 432
    ':' (58) 53 54 123 299 466 537 543 553 554 567 568 569 606 608
    "end of expression" (59) 15 16 74 220 224 225 232 233 238 239 240 250 281 286 299 300 317 526 528 531 535 539 541 542 545 547 548 567 568 570 584 585 586 592 593 596 665 667 668 673 805 807 810 811
    '<' (60) 146 253 256 269 305 308 311 314 316 317 395 398 434 463 464 469 475 480 671 684 688 703 707 710 713 717 720 724 727 731 734 737 740 775 778 781 784 790 795 799 804 805
    '=' (61) 81 93 94 95 96 97 98 100 327 347 369 549 557 586 591
    '>' (62) 147 253 256 269 305 308 311 314 316 317 395 398 435 463 464 469 475 480 671 684 688 703 707 710 713 717 720 724 727 731 734 737 740 775 778 781 784 790 795 799 804 805
    '?' (63) 182 183 466 477 480 481 508 700
    '@' (64) 324 325 392 395 398 510
    '[' (91) 118 168 333 386 387 452 453 512 531 674 675 681 689 791 810
    ']' (93) 118 168 169 333 386 387 452 453 454 455 512 531 674 675 681 689 791 810
    '^' (94) 155 442
    "begin of code block" (123) 216 217 580 594 603 606 618 748 753 758 802 811
    '|' (124) 154 441 742 743
    "end of code block" (125) 216 217 580 594 603 606 618 748 753 758 802 811
    '~' (126) 126 422
    error (256) 243 405
    "lexer error" (258)
    "struct" (259) 613 775
    "class" (260) 612 778
    "let" (261) 290 293
    "def" (262) 209 528 530
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 810 811
    "recover" (268) 289
    "true" (269) 86 97 417
    "false" (270) 87 98 418
    "new" (271) 271 272 273 274 275
    "typeinfo" (272) 315 316 317
    "type" (273) 91 314 469 475 480 684
    "in" (274) 76 92 810 811
    "is" (275) 178 180 469 470 471 509
    "as" (276) 46 179 181 182 183 472 475 476 477 480 481 507 508
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 707 792 795
    "return" (280) 278 279 280 282 283
    "null" (281) 411
    "break" (282) 276
    "try" (283) 289
    "options" (284) 36
    "table" (285) 710 803 804 805
    "expect" (286) 49
    "const" (287) 517 691 692 698
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 603 606
    "finally" (291) 217
    "delete" (292) 176 265 266
    "deref" (293) 461
    "typedef" (294) 594 596
    "typedecl" (295) 685
    "with" (296) 79
    "aka" (297) 564 566 624 626
    "assume" (298) 81
    "cast" (299) 305
    "override" (300) 514
    "abstract" (301) 528
    "upcast" (302) 308
    "iterator" (303) 713
    "var" (304) 291 294
    "addr" (305) 462
    "continue" (306) 277
    "where" (307) 807
    "pass" (308) 240
    "reinterpret" (309) 311
    "module" (310) 22
    "public" (311) 18 48 212 519 579 589 599 616
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 696
    "explicit" (315) 266 690
    "shared" (316) 576
    "private" (317) 19 105 211 520 578 588 598 615
    "smart_ptr" (318) 703
    "unsafe" (319) 77 493
    "inscope" (320) 295
    "static" (321) 522
    "fixed_array" (322) 796 799
    "default" (323) 784
    "bool" (324) 184 627
    "void" (325) 647
    "string" (326) 185 628
    "auto" (327) 661 662
    "int" (328) 186 629 654
    "int2" (329) 187 633
    "int3" (330) 188 634
    "int4" (331) 189 635
    "uint" (332) 190 636 657
    "bitfield" (333) 653 671 758
    "uint2" (334) 191 640
    "uint3" (335) 192 641
    "uint4" (336) 193 642
    "float" (337) 194 643
    "float2" (338) 195 644
    "float3" (339) 196 645
    "float4" (340) 197 646
    "range" (341) 198 648
    "urange" (342) 199 649
    "range64" (343) 200 650
    "urange64" (344) 201 651
    "block" (345) 714 717 720
    "int64" (346) 202 632
    "uint64" (347) 203 639
    "double" (348) 204 652
    "function" (349) 721 724 727
    "lambda" (350) 728 731 734
    "int8" (351) 205 630 655
    "uint8" (352) 206 637 658
    "int16" (353) 207 631 656
    "uint16" (354) 208 638 659
    "tuple" (355) 737 748 787 790
    "variant" (356) 740 753 781
    "generator" (357) 463 464
    "yield" (358) 284 285 287 288
    "sealed" (359) 515 610
    "+=" (360) 127 356 377
    "-=" (361) 128 357 378
    "/=" (362) 130 359 380
    "*=" (363) 129 358 379
    "%=" (364) 131 360 381
    "&=" (365) 132 350 371
    "|=" (366) 133 351 372
    "^=" (367) 134 352 373
    "<<" (368) 160 425
    ">>" (369) 161 426
    "++" (370) 156 158 447 449
    "--" (371) 157 159 448 450
    "<=" (372) 151 438
    "<<=" (373) 162 361 382
    ">>=" (374) 163 362 383
    ">=" (375) 152 439
    "==" (376) 149 436 698 699
    "!=" (377) 150 437
    "->" (378) 388 389
    "<-" (379) 280 283 285 288 322 328 348 370 550 558
    "??" (380) 177 465 704
    "?." (381) 171 174 456 457 504 506
    "?[" (382) 169 454 455
    "<|" (383) 489
    " <|" (384) 257
    "$ <|" (385) 260 367
    "@ <|" (386) 258 365
    "@@ <|" (387) 259 366
    "|>" (388) 114 490 491
    ":=" (389) 173 175 329 349 559 765 767 769 771
    "<<<" (390) 164 427
    ">>>" (391) 165 428
    "<<<=" (392) 166 363 384
    ">>>=" (393) 167 364 385
    "=>" (394) 321 322 785
    "::" (395) 263 264
    "&&" (396) 110 138 443
    "||" (397) 111 139 444
    "^^" (398) 112 140 445
    "&&=" (399) 135 353 374
    "||=" (400) 136 354 375
    "^^=" (401) 137 355 376
    ".." (402) 148 446
    "$$" (403) 495
    "$i" (404) 391 496 563 623
    "$v" (405) 497
    "$b" (406) 498
    "$a" (407) 499 533
    "$t" (408) 663
    "$c" (409) 501 502 510
    "$f" (410) 503 504 505 506 507 508 509 768 769 770 771
    "..." (411) 500
    "integer constant" <i> (412) 52 53 54 55 84 95 339
    "long integer constant" <i64> (413) 341
    "unsigned integer constant" <ui> (414) 340
    "unsigned long integer constant" <ui64> (415) 342
    "unsigned int8 constant" <ui> (416) 343
    "floating point constant" <fd> (417) 85 96 344
    "double constant" <d> (418) 345
    "name" <s> (419) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 262 263 264 297 298 316 317 326 327 328 329 388 389 399 400 401 402 456 457 471 472 477 492 537 543 562 564 565 566 585 586 591 600 611 622 624 625 626 662 664 665 668 748 753 758 764 765 766 767
    "keyword" <s> (420) 39 244 253
    "type function" <s> (421) 40 256
    "start of the string" (422) 27 31
    STRING_CHARACTER <ch> (423) 23 25 32 33
    STRING_CHARACTER_ESC (424) 24 26
    "end of the string" (425) 27 31
    "{" (426) 30
    "}" (427) 30
    "end of failed eader macro" (428)
    ";}}" (429)
    ";}]" (430)
    ";]]" (431)
    ",]]" (432)
    ",}]" (433)
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (215)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (216)
        on left: 17 18 19
        on right: 22
    module_name <s> (217)
        on left: 20 21
        on right: 22
    module_declaration (218)
        on left: 22
        on right: 2
    character_sequence <s> (219)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (220)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (221)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (222)
        on left: 31
        on right: 415
    reader_character_sequence (223)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (224)
        on left: 35
        on right: 16 414
    $@1 (225)
        on left: 34
        on right: 35
    options_declaration (226)
        on left: 36
        on right: 9
    require_declaration (227)
        on left: 37
        on right: 8
    keyword_or_name <s> (228)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (229)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (230)
        on left: 45 46
        on right: 37
    is_public_module <b> (231)
        on left: 47 48
        on right: 45 46
    expect_declaration (232)
        on left: 49
        on right: 7
    expect_list (233)
        on left: 50 51
        on right: 49 51
    expect_error (234)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (235)
        on left: 54
        on right: 238
    expression_goto <pExpression> (236)
        on left: 55 56
        on right: 239
    elif_or_static_elif <b> (237)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (238)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (239)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (240)
        on left: 64 66
        on right: 74
    $@2 (241)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (242)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (243)
        on left: 72 74
        on right: 236
    $@3 (244)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (245)
        on left: 76
        on right: 231
    $@4 (246)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (247)
        on left: 77
        on right: 228
    expression_while_loop <pExpression> (248)
        on left: 78
        on right: 227
    expression_with <pExpression> (249)
        on left: 79
        on right: 229
    expression_with_alias <pExpression> (250)
        on left: 81
        on right: 230
    $@5 (251)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (252)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (253)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (254)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (255)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (256)
        on left: 101 102
        on right: 36 102 107 512
    annotation_declaration_name <s> (257)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (258)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (259)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (260)
        on left: 115 116
        on right: 116 118 531
    optional_annotation_list <faList> (261)
        on left: 117 118
        on right: 209 335 336 338 528 530 603 606 621
    optional_function_argument_list <pVarDeclList> (262)
        on left: 119 120 121
        on right: 213 335 336 338 398 720 727 734
    optional_function_type <pTypeDecl> (263)
        on left: 122 123
        on right: 213 335 336 338 398 720 727 734
    function_name <s> (264)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (265)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (266)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (267)
        on left: 213
        on right: 215 528 530
    function_declaration <pFuncDecl> (268)
        on left: 215
        on right: 209
    $@6 (269)
        on left: 214
        on right: 215
    expression_block <pExpression> (270)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 244 289 320 334 338 530
    expr_call_pipe <pExpression> (271)
        on left: 218 219
        on right: 261 368
    expression_any <pExpression> (272)
        on left: 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
        on right: 242
    expressions <pExpression> (273)
        on left: 241 242 243
        on right: 216 217 242 243
    expr_keyword <pExpression> (274)
        on left: 244
        on right: 222
    optional_expr_list <pExpression> (275)
        on left: 245 246
        on right: 248 686 688
    optional_expr_list_in_braces <pExpression> (276)
        on left: 247 248
        on right: 256
    type_declaration_no_options_list <pTypeDeclList> (277)
        on left: 249 250
        on right: 250 253 256 688
    expression_keyword <pExpression> (278)
        on left: 253 256
        on right: 219 494
    $@7 (279)
        on left: 251
        on right: 253
    $@8 (280)
        on left: 252
        on right: 253
    $@9 (281)
        on left: 254
        on right: 256
    $@10 (282)
        on left: 255
        on right: 256
    expr_pipe <pExpression> (283)
        on left: 257 258 259 260 261
        on right: 221 282 283 287 288 556 569 571
    name_in_namespace <s> (284)
        on left: 262 263 264
        on right: 35 103 315 316 317 386 387 390 406 407 408 412 492 608 660 686 688
    expression_delete <pExpression> (285)
        on left: 265 266
        on right: 225
    new_type_declaration <pTypeDecl> (286)
        on left: 269 270
        on right: 271 272 273 274
    $@11 (287)
        on left: 267
        on right: 269
    $@12 (288)
        on left: 268
        on right: 269
    expr_new <pExpression> (289)
        on left: 271 272 273 274 275
        on right: 485
    expression_break <pExpression> (290)
        on left: 276
        on right: 70 232
    expression_continue <pExpression> (291)
        on left: 277
        on right: 71 233
    expression_return_no_pipe <pExpression> (292)
        on left: 278 279 280
        on right: 68 281
    expression_return <pExpression> (293)
        on left: 281 282 283
        on right: 234
    expression_yield_no_pipe <pExpression> (294)
        on left: 284 285
        on right: 69 286
    expression_yield <pExpression> (295)
        on left: 286 287 288
        on right: 235
    expression_try_catch <pExpression> (296)
        on left: 289
        on right: 237
    kwd_let_var_or_nothing <b> (297)
        on left: 290 291 292
        on right: 532
    kwd_let <b> (298)
        on left: 293 294
        on right: 301 302 580 582
    optional_in_scope <b> (299)
        on left: 295 296
        on right: 301 302
    tuple_expansion <pNameList> (300)
        on left: 297 298
        on right: 298 299 300
    tuple_expansion_variable_declaration <pVarDecl> (301)
        on left: 299 300
        on right: 302
    expression_let <pExpression> (302)
        on left: 301 302
        on right: 226
    expr_cast <pExpression> (303)
        on left: 305 308 311
        on right: 484
    $@13 (304)
        on left: 303
        on right: 305
    $@14 (305)
        on left: 304
        on right: 305
    $@15 (306)
        on left: 306
        on right: 308
    $@16 (307)
        on left: 307
        on right: 308
    $@17 (308)
        on left: 309
        on right: 311
    $@18 (309)
        on left: 310
        on right: 311
    expr_type_decl <pExpression> (310)
        on left: 314
        on right: 483
    $@19 (311)
        on left: 312
        on right: 314
    $@20 (312)
        on left: 313
        on right: 314
    expr_type_info <pExpression> (313)
        on left: 315 316 317
        on right: 482
    expr_list <pExpression> (314)
        on left: 318 319
        on right: 76 246 273 279 280 319 387 389 402 408 410 451 502 787 791 792 795 796 799 810 811
    block_or_simple_block <pExpression> (315)
        on left: 320 321 322
        on right: 335 336
    block_or_lambda <i> (316)
        on left: 323 324 325
        on right: 335 336 338
    capture_entry <pCapt> (317)
        on left: 326 327 328 329
        on right: 330 331
    capture_list <pCaptList> (318)
        on left: 330 331
        on right: 331 333
    optional_capture_list <pCaptList> (319)
        on left: 332 333
        on right: 335 336 338 463 464
    expr_block <pExpression> (320)
        on left: 334 335
        on right: 257 258 259 260 365 366 367
    expr_full_block <pExpression> (321)
        on left: 336
        on right: 488
    expr_full_block_assumed_piped <pExpression> (322)
        on left: 338
        on right: 218 219
    $@21 (323)
        on left: 337
        on right: 338
    expr_numeric_const <pExpression> (324)
        on left: 339 340 341 342 343 344 345
        on right: 413
    expr_assign <pExpression> (325)
        on left: 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364
        on right: 224 257
    expr_assign_pipe_right <pExpression> (326)
        on left: 365 366 367 368
        on right: 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385
    expr_assign_pipe <pExpression> (327)
        on left: 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385
        on right: 223
    expr_named_call <pExpression> (328)
        on left: 386 387
        on right: 487
    expr_method_call <pExpression> (329)
        on left: 388 389
        on right: 486
    func_addr_name <pExpression> (330)
        on left: 390 391
        on right: 392 395 398
    func_addr_expr <pExpression> (331)
        on left: 392 395 398
        on right: 458
    $@22 (332)
        on left: 393
        on right: 395
    $@23 (333)
        on left: 394
        on right: 395
    $@24 (334)
        on left: 396
        on right: 398
    $@25 (335)
        on left: 397
        on right: 398
    expr_field <pExpression> (336)
        on left: 399 400 401 402 405
        on right: 419
    $@26 (337)
        on left: 403
        on right: 405
    $@27 (338)
        on left: 404
        on right: 405
    expr_call <pExpression> (339)
        on left: 406 407 408 409 410
        on right: 459
    expr <pExpression> (340)
        on left: 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 469 470 471 472 475 476 477 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494
        on right
    $@28 (341)
        on left: 467
        on right: 469
    $@29 (342)
        on left: 468
        on right: 469
    $@30 (343)
        on left: 473
        on right: 475
    $@31 (344)
        on left: 474
        on right: 475
    $@32 (345)
        on left: 478
        on right: 480
    $@33 (346)
        on left: 479
        on right: 480
    expr_mtag <pExpression> (347)
        on left: 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510
        on right: 420
    optional_field_annotation <aaList> (348)
        on left: 511 512
        on right: 523 532 574 582
    optional_override <i> (349)
        on left: 513 514 515
        on right: 523 530
    optional_constant <b> (350)
        on left: 516 517
        on right: 528 530
    optional_public_or_private_member_variable <b> (351)
        on left: 518 519 520
        on right: 523 528 530
    optional_static_member_variable <b> (352)
        on left: 521 522
        on right: 523 530
    structure_variable_declaration <pVarDecl> (353)
        on left: 523
        on right: 526
    struct_variable_declaration_list <pVarDeclList> (354)
        on left: 524 526 528 530 531
        on right: 526 528 530 531 618
    $@34 (355)
        on left: 525
        on right: 526
    $@35 (356)
        on left: 527
        on right: 528
    $@36 (357)
        on left: 529
        on right: 530
    function_argument_declaration <pVarDecl> (358)
        on left: 532 533
        on right: 534 535
    function_argument_list <pVarDeclList> (359)
        on left: 534 535
        on right: 121 535
    tuple_type <pVarDecl> (360)
        on left: 536 537
        on right: 538 539 542
    tuple_type_list <pVarDeclList> (361)
        on left: 538 539
        on right: 539 737
    tuple_alias_type_list <pVarDeclList> (362)
        on left: 540 541 542
        on right: 541 542 748
    variant_type <pVarDecl> (363)
        on left: 543
        on right: 544 545 548
    variant_type_list <pVarDeclList> (364)
        on left: 544 545
        on right: 545 740
    variant_alias_type_list <pVarDeclList> (365)
        on left: 546 547 548
        on right: 547 548 753
    copy_or_move <b> (366)
        on left: 549 550
        on right: 554 555 556 764 766 768 770
    variable_declaration <pVarDecl> (367)
        on left: 551 552 553 554 555 556
        on right: 523 532
    copy_or_move_or_clone <i> (368)
        on left: 557 558 559
        on right: 299 300 568 569 570 571
    optional_ref <b> (369)
        on left: 560 561
        on right: 300 570 571
    let_variable_name_with_pos_list <pNameWithPosList> (370)
        on left: 562 563 564 565 566
        on right: 565 566 567 568 569 570 571
    let_variable_declaration <pVarDecl> (371)
        on left: 567 568 569 570 571
        on right: 301 574 582
    global_variable_declaration_list <pVarDeclList> (372)
        on left: 572 574
        on right: 574 580
    $@37 (373)
        on left: 573
        on right: 574
    optional_shared <b> (374)
        on left: 575 576
        on right: 22 580 582
    optional_public_or_private_variable <b> (375)
        on left: 577 578 579
        on right: 580 582
    global_let (376)
        on left: 580 582
        on right: 5
    $@38 (377)
        on left: 581
        on right: 582
    enum_list <pEnum> (378)
        on left: 583 584 585 586
        on right: 584 585 586 603 606
    optional_public_or_private_alias <b> (379)
        on left: 587 588 589
        on right: 591 748 753 758
    single_alias (380)
        on left: 591
        on right: 592 593 596
    $@39 (381)
        on left: 590
        on right: 591
    alias_list (382)
        on left: 592 593
        on right: 593 594
    alias_declaration (383)
        on left: 594 596
        on right: 10
    $@40 (384)
        on left: 595
        on right: 596
    optional_public_or_private_enum <b> (385)
        on left: 597 598 599
        on right: 603 606
    enum_name <pEnum> (386)
        on left: 600
        on right: 603 606
    enum_declaration (387)
        on left: 603 606
        on right: 4
    $@41 (388)
        on left: 601
        on right: 603
    $@42 (389)
        on left: 602
        on right: 603
    $@43 (390)
        on left: 604
        on right: 606
    $@44 (391)
        on left: 605
        on right: 606
    optional_structure_parent <s> (392)
        on left: 607 608
        on right: 611
    optional_sealed <b> (393)
        on left: 609 610
        on right: 611
    structure_name <pStructure> (394)
        on left: 611
        on right: 621
    class_or_struct <b> (395)
        on left: 612 613
        on right: 621
    optional_public_or_private_structure <b> (396)
        on left: 614 615 616
        on right: 621
    optional_struct_variable_declaration_list <pVarDeclList> (397)
        on left: 617 618
        on right: 621
    structure_declaration (398)
        on left: 621
        on right: 3
    $@45 (399)
        on left: 619
        on right: 621
    $@46 (400)
        on left: 620
        on right: 621
    variable_name_with_pos_list <pNameWithPosList> (401)
        on left: 622 623 624 625 626
        on right: 76 551 552 553 554 555 556 625 626 810 811
    basic_type_declaration <type> (402)
        on left: 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653
        on right: 409 410 470 476 481 491 676
    enum_basic_type_declaration <type> (403)
        on left: 654 655 656 657 658 659
        on right: 606
    structure_type_declaration <pTypeDecl> (404)
        on left: 660
        on right: 270 679
    auto_type_declaration <pTypeDecl> (405)
        on left: 661 662 663
        on right: 677
    bitfield_bits <pNameList> (406)
        on left: 664 665
        on right: 665 671
    bitfield_alias_bits <pNameList> (407)
        on left: 666 667 668
        on right: 667 668 758
    bitfield_type_declaration <pTypeDecl> (408)
        on left: 671
        on right: 678
    $@47 (409)
        on left: 669
        on right: 671
    $@48 (410)
        on left: 670
        on right: 671
    table_type_pair <aTypePair> (411)
        on left: 672 673
        on right: 710
    dim_list <pTypeDecl> (412)
        on left: 674 675
        on right: 675 680
    type_declaration_no_options <pTypeDecl> (413)
        on left: 676 677 678 679 680 681 684 685 686 688 689 690 691 692 693 694 695 696 697 698 699 700 703 704 707 710 713 714 717 720 721 724 727 728 731 734 737 740
        on right: 299 305 308 311 395 463 464 469 567 568 569 680 681 689 690 691 692 693 694 695 696 697 698 699 700 704 741 742 775 778 781 784 790 795 799 804 805
    $@49 (414)
        on left: 682
        on right: 684
    $@50 (415)
        on left: 683
        on right: 684
    $@51 (416)
        on left: 687
        on right: 688
    $@52 (417)
        on left: 701
        on right: 703
    $@53 (418)
        on left: 702
        on right: 703
    $@54 (419)
        on left: 705
        on right: 707
    $@55 (420)
        on left: 706
        on right: 707
    $@56 (421)
        on left: 708
        on right: 710
    $@57 (422)
        on left: 709
        on right: 710
    $@58 (423)
        on left: 711
        on right: 713
    $@59 (424)
        on left: 712
        on right: 713
    $@60 (425)
        on left: 715
        on right: 717
    $@61 (426)
        on left: 716
        on right: 717
    $@62 (427)
        on left: 718
        on right: 720
    $@63 (428)
        on left: 719
        on right: 720
    $@64 (429)
        on left: 722
        on right: 724
    $@65 (430)
        on left: 723
        on right: 724
    $@66 (431)
        on left: 725
        on right: 727
    $@67 (432)
        on left: 726
        on right: 727
    $@68 (433)
        on left: 729
        on right: 731
    $@69 (434)
        on left: 730
        on right: 731
    $@70 (435)
        on left: 732
        on right: 734
    $@71 (436)
        on left: 733
        on right: 734
    $@72 (437)
        on left: 735
        on right: 737
    $@73 (438)
        on left: 736
        on right: 737
    $@74 (439)
        on left: 738
        on right: 740
    $@75 (440)
        on left: 739
        on right: 740
    type_declaration <pTypeDecl> (441)
        on left: 741 742 743
        on right: 123 249 250 269 314 475 480 536 537 543 553 554 591 672 673 684 703 707 713 717 724 731 742 743
    tuple_alias_declaration (442)
        on left: 748
        on right: 12
    $@76 (443)
        on left: 744
        on right: 748
    $@77 (444)
        on left: 745
        on right: 748
    $@78 (445)
        on left: 746
        on right: 748
    $@79 (446)
        on left: 747
        on right: 748
    variant_alias_declaration (447)
        on left: 753
        on right: 11
    $@80 (448)
        on left: 749
        on right: 753
    $@81 (449)
        on left: 750
        on right: 753
    $@82 (450)
        on left: 751
        on right: 753
    $@83 (451)
        on left: 752
        on right: 753
    bitfield_alias_declaration (452)
        on left: 758
        on right: 13
    $@84 (453)
        on left: 754
        on right: 758
    $@85 (454)
        on left: 755
        on right: 758
    $@86 (455)
        on left: 756
        on right: 758
    $@87 (456)
        on left: 757
        on right: 758
    make_decl <pExpression> (457)
        on left: 759 760 761 762 763
        on right: 275 416
    make_struct_fields <pMakeStruct> (458)
        on left: 764 765 766 767 768 769 770 771
        on right: 386 387 766 767 770 771 772
    make_struct_single <pExpression> (459)
        on left: 772
        on right: 274 407 775 778 781 790
    make_struct_decl <pExpression> (460)
        on left: 775 778 781 784
        on right: 759
    $@88 (461)
        on left: 773
        on right: 775
    $@89 (462)
        on left: 774
        on right: 775
    $@90 (463)
        on left: 776
        on right: 778
    $@91 (464)
        on left: 777
        on right: 778
    $@92 (465)
        on left: 779
        on right: 781
    $@93 (466)
        on left: 780
        on right: 781
    $@94 (467)
        on left: 782
        on right: 784
    $@95 (468)
        on left: 783
        on right: 784
    make_map_tuple <pExpression> (469)
        on left: 785 786
        on right: 800 801 811
    make_tuple_call <pExpression> (470)
        on left: 787 790
        on right: 763
    $@96 (471)
        on left: 788
        on right: 790
    $@97 (472)
        on left: 789
        on right: 790
    make_dim_decl <pExpression> (473)
        on left: 791 792 795 796 799
        on right: 760
    $@98 (474)
        on left: 793
        on right: 795
    $@99 (475)
        on left: 794
        on right: 795
    $@100 (476)
        on left: 797
        on right: 799
    $@101 (477)
        on left: 798
        on right: 799
    expr_map_tuple_list <pExpression> (478)
        on left: 800 801
        on right: 801 802 803 804 805
    make_table_decl <pExpression> (479)
        on left: 802 803 804 805
        on right: 761
    array_comprehension_where <pExpression> (480)
        on left: 806 807
        on right: 810 811
    optional_comma <b> (481)
        on left: 808 809
        on right: 451 787 791 792 795 796 799 802 803 804 805
    array_comprehension <pExpression> (482)
        on left: 810 811
        on right: 762


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  293 kwd_let: "let" .

    $default  reduce using rule 293 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  594 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  596                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 595 ($@40)

    $@40  go to state 49


State 8

  294 kwd_let: "var" .

    $default  reduce using rule 294 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  758 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  748 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  753 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  603 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  606                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  621 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  580 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  582           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 575 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  594 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  596 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 575 (optional_shared)

    optional_shared  go to state 93


State 53

  589 optional_public_or_private_alias: "public" .

    $default  reduce using rule 589 (optional_public_or_private_alias)


State 54

  588 optional_public_or_private_alias: "private" .

    $default  reduce using rule 588 (optional_public_or_private_alias)


State 55

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 754 ($@84)

    $@84  go to state 94


State 56

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 744 ($@76)

    $@76  go to state 95


State 57

  753 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 749 ($@80)

    $@80  go to state 96


State 58

  264 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 262 (name_in_namespace)]
    $default  reduce using rule 262 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  613 class_or_struct: "struct" .

    $default  reduce using rule 613 (class_or_struct)


State 73

  612 class_or_struct: "class" .

    $default  reduce using rule 612 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  603 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  606                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 597 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  621 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 614 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  576 optional_shared: "shared" .

    $default  reduce using rule 576 (optional_shared)


State 78

  580 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  582           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 577 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  591 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  592 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  593 alias_list: alias_list . single_alias "end of expression"
  594 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 587 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  596 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  264 name_in_namespace: "::" "name" .

    $default  reduce using rule 264 (name_in_namespace)


State 98

  263 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  599 optional_public_or_private_enum: "public" .

    $default  reduce using rule 599 (optional_public_or_private_enum)


State 114

  598 optional_public_or_private_enum: "private" .

    $default  reduce using rule 598 (optional_public_or_private_enum)


State 115

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  606                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  616 optional_public_or_private_structure: "public" .

    $default  reduce using rule 616 (optional_public_or_private_structure)


State 117

  615 optional_public_or_private_structure: "private" .

    $default  reduce using rule 615 (optional_public_or_private_structure)


State 118

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 619 ($@45)

    $@45  go to state 159


State 119

  579 optional_public_or_private_variable: "public" .

    $default  reduce using rule 579 (optional_public_or_private_variable)


State 120

  578 optional_public_or_private_variable: "private" .

    $default  reduce using rule 578 (optional_public_or_private_variable)


State 121

  580 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  582           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 581 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  591 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 590 ($@39)

    $@39  go to state 174


State 137

  592 alias_list: single_alias "end of expression" .

    $default  reduce using rule 592 (alias_list)


State 138

  594 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 594 (alias_declaration)


State 139

  593 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  596 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 596 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 755 ($@85)

    $@85  go to state 176


State 145

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 745 ($@77)

    $@77  go to state 177


State 146

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 750 ($@81)

    $@81  go to state 178


State 147

  263 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 263 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  600 enum_name: "name" .

    $default  reduce using rule 600 (enum_name)


State 158

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  606                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 609 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  580 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 572 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    '['  shift, and go to state 218

    $default  reduce using rule 511 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  591 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  593 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 593 (alias_list)


State 176

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 226


State 177

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 227


State 178

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 285


State 212

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 601 ($@41)

    $@41  go to state 286


State 213

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 287
    "uint"    shift, and go to state 288
    "int8"    shift, and go to state 289
    "uint8"   shift, and go to state 290
    "int16"   shift, and go to state 291
    "uint16"  shift, and go to state 292

    enum_basic_type_declaration  go to state 293


State 214

  610 optional_sealed: "sealed" .

    $default  reduce using rule 610 (optional_sealed)


State 215

  611 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 620 ($@46)

    $@46  go to state 295


State 217

  574 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  580 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 296

    $default  reduce using rule 573 ($@37)

    $@37  go to state 297


State 218

  512 optional_field_annotation: '[' . '[' annotation_argument_list ']' ']'

    '['  shift, and go to state 298


State 219

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 756 ($@86)

    $@86  go to state 352


State 227

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 746 ($@78)

    $@78  go to state 353


State 228

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 751 ($@82)

    $@82  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    '['   shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 511 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: "begin of code block" . expressions "end of code block"
  217                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 241 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 583 (enum_list)

    enum_list  go to state 370


State 287

  654 enum_basic_type_declaration: "int" .

    $default  reduce using rule 654 (enum_basic_type_declaration)


State 288

  657 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 657 (enum_basic_type_declaration)


State 289

  655 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 655 (enum_basic_type_declaration)


State 290

  658 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 658 (enum_basic_type_declaration)


State 291

  656 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 656 (enum_basic_type_declaration)


State 292

  659 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 293

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 371


State 294

  611 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 607 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 374

    $default  reduce using rule 617 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  580 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 580 (global_let)


State 297

  574 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    '['  shift, and go to state 218

    $default  reduce using rule 511 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  512 optional_field_annotation: '[' '[' . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 377


State 299

  563 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  562 let_variable_name_with_pos_list: "name" .
  564                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 562 (let_variable_name_with_pos_list)


State 301

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  566                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  567 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  568                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  569                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  570                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 560 (optional_ref)

    optional_ref  go to state 383


State 302

  582 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 582 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  684 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 384


State 305

  707 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 385


State 306

  710 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 386


State 307

  685 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  713 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 388


State 309

  703 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 389


State 310

  627 basic_type_declaration: "bool" .

    $default  reduce using rule 627 (basic_type_declaration)


State 311

  647 basic_type_declaration: "void" .

    $default  reduce using rule 647 (basic_type_declaration)


State 312

  628 basic_type_declaration: "string" .

    $default  reduce using rule 628 (basic_type_declaration)


State 313

  661 auto_type_declaration: "auto" .
  662                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    $default  reduce using rule 661 (auto_type_declaration)


State 314

  629 basic_type_declaration: "int" .

    $default  reduce using rule 629 (basic_type_declaration)


State 315

  633 basic_type_declaration: "int2" .

    $default  reduce using rule 633 (basic_type_declaration)


State 316

  634 basic_type_declaration: "int3" .

    $default  reduce using rule 634 (basic_type_declaration)


State 317

  635 basic_type_declaration: "int4" .

    $default  reduce using rule 635 (basic_type_declaration)


State 318

  636 basic_type_declaration: "uint" .

    $default  reduce using rule 636 (basic_type_declaration)


State 319

  653 basic_type_declaration: "bitfield" .
  671 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 391

    $default  reduce using rule 653 (basic_type_declaration)


State 320

  640 basic_type_declaration: "uint2" .

    $default  reduce using rule 640 (basic_type_declaration)


State 321

  641 basic_type_declaration: "uint3" .

    $default  reduce using rule 641 (basic_type_declaration)


State 322

  642 basic_type_declaration: "uint4" .

    $default  reduce using rule 642 (basic_type_declaration)


State 323

  643 basic_type_declaration: "float" .

    $default  reduce using rule 643 (basic_type_declaration)


State 324

  644 basic_type_declaration: "float2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 325

  645 basic_type_declaration: "float3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 326

  646 basic_type_declaration: "float4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 327

  648 basic_type_declaration: "range" .

    $default  reduce using rule 648 (basic_type_declaration)


State 328

  649 basic_type_declaration: "urange" .

    $default  reduce using rule 649 (basic_type_declaration)


State 329

  650 basic_type_declaration: "range64" .

    $default  reduce using rule 650 (basic_type_declaration)


State 330

  651 basic_type_declaration: "urange64" .

    $default  reduce using rule 651 (basic_type_declaration)


State 331

  714 type_declaration_no_options: "block" .
  717                            | "block" . '<' $@60 type_declaration '>' $@61
  720                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 392

    $default  reduce using rule 714 (type_declaration_no_options)


State 332

  632 basic_type_declaration: "int64" .

    $default  reduce using rule 632 (basic_type_declaration)


State 333

  639 basic_type_declaration: "uint64" .

    $default  reduce using rule 639 (basic_type_declaration)


State 334

  652 basic_type_declaration: "double" .

    $default  reduce using rule 652 (basic_type_declaration)


State 335

  721 type_declaration_no_options: "function" .
  724                            | "function" . '<' $@64 type_declaration '>' $@65
  727                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 393

    $default  reduce using rule 721 (type_declaration_no_options)


State 336

  728 type_declaration_no_options: "lambda" .
  731                            | "lambda" . '<' $@68 type_declaration '>' $@69
  734                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 394

    $default  reduce using rule 728 (type_declaration_no_options)


State 337

  630 basic_type_declaration: "int8" .

    $default  reduce using rule 630 (basic_type_declaration)


State 338

  637 basic_type_declaration: "uint8" .

    $default  reduce using rule 637 (basic_type_declaration)


State 339

  631 basic_type_declaration: "int16" .

    $default  reduce using rule 631 (basic_type_declaration)


State 340

  638 basic_type_declaration: "uint16" .

    $default  reduce using rule 638 (basic_type_declaration)


State 341

  737 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 395


State 342

  740 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 396


State 343

  663 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  686 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  688                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  660 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 660 (structure_type_declaration)


State 346

  676 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 676 (type_declaration_no_options)


State 347

  679 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 679 (type_declaration_no_options)


State 348

  677 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 677 (type_declaration_no_options)


State 349

  678 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 678 (type_declaration_no_options)


State 350

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  741 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 741 (type_declaration)

    dim_list  go to state 409


State 351

  591 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 591 (single_alias)


State 352

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 666 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 540 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 546 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  533 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  532 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 417
    "var"  shift, and go to state 418

    $default  reduce using rule 292 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 419


State 365

  534 function_argument_list: function_argument_declaration .

    $default  reduce using rule 534 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  535 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 420
    ')'                  shift, and go to state 421


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 422


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: "begin of code block" expressions . "end of code block"
  217                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 423
    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 426
    "if"                              shift, and go to state 427
    "static_if"                       shift, and go to state 428
    "for"                             shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 436
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "try"                             shift, and go to state 439
    "table"                           shift, and go to state 440
    "delete"                          shift, and go to state 441
    "deref"                           shift, and go to state 442
    "with"                            shift, and go to state 443
    "assume"                          shift, and go to state 444
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "pass"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 451
    "goto"                            shift, and go to state 452
    "unsafe"                          shift, and go to state 453
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 480
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    "end of code block"               shift, and go to state 484
    "end of expression"               shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder             go to state 495
    expr_reader                go to state 496
    expression_label           go to state 497
    expression_goto            go to state 498
    if_or_static_if            go to state 499
    expression_if_one_liner    go to state 500
    expression_if_then_else    go to state 501
    expression_for_loop        go to state 502
    expression_unsafe          go to state 503
    expression_while_loop      go to state 504
    expression_with            go to state 505
    expression_with_alias      go to state 506
    expr_call_pipe             go to state 507
    expression_any             go to state 508
    expr_keyword               go to state 509
    expression_keyword         go to state 510
    expr_pipe                  go to state 511
    name_in_namespace          go to state 512
    expression_delete          go to state 513
    expr_new                   go to state 514
    expression_break           go to state 515
    expression_continue        go to state 516
    expression_return_no_pipe  go to state 517
    expression_return          go to state 518
    expression_yield_no_pipe   go to state 519
    expression_yield           go to state 520
    expression_try_catch       go to state 521
    kwd_let                    go to state 522
    expression_let             go to state 523
    expr_cast                  go to state 524
    expr_type_decl             go to state 525
    expr_type_info             go to state 526
    block_or_lambda            go to state 527
    expr_full_block            go to state 528
    expr_numeric_const         go to state 529
    expr_assign                go to state 530
    expr_assign_pipe           go to state 531
    expr_named_call            go to state 532
    expr_method_call           go to state 533
    func_addr_expr             go to state 534
    expr_field                 go to state 535
    expr_call                  go to state 536
    expr                       go to state 537
    expr_mtag                  go to state 538
    basic_type_declaration     go to state 539
    make_decl                  go to state 540
    make_struct_decl           go to state 541
    make_tuple_call            go to state 542
    make_dim_decl              go to state 543
    make_table_decl            go to state 544
    array_comprehension        go to state 545


State 370

  584 enum_list: enum_list . "end of expression"
  585          | enum_list . "name" "end of expression"
  586          | enum_list . "name" '=' expr "end of expression"
  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 546
    "end of expression"  shift, and go to state 547

    $default  reduce using rule 602 ($@42)

    $@42  go to state 548


State 371

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 604 ($@43)

    $@43  go to state 549


State 372

  608 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 550


State 373

  611 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 611 (structure_name)


State 374

  618 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 524 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 551


State 375

  621 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 621 (structure_declaration)


State 376

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 552


State 377

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  512 optional_field_annotation: '[' '[' annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 553


State 378

  563 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 557
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 379

  564 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 558


State 380

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  566                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 559


State 381

  567 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  568                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  569                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 560


State 382

  561 optional_ref: '&' .

    $default  reduce using rule 561 (optional_ref)


State 383

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  571                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 564


State 384

  684 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 682 ($@49)

    $@49  go to state 565


State 385

  707 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 705 ($@54)

    $@54  go to state 566


State 386

  710 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 708 ($@56)

    $@56  go to state 567


State 387

  685 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 568
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 388

  713 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 711 ($@58)

    $@58  go to state 569


State 389

  703 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 701 ($@52)

    $@52  go to state 570


State 390

  662 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 571


State 391

  671 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 669 ($@47)

    $@47  go to state 572


State 392

  717 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  720                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 718 ($@62)
    '>'       reduce using rule 718 ($@62)
    '('       reduce using rule 718 ($@62)
    $default  reduce using rule 715 ($@60)

    $@60  go to state 573
    $@62  go to state 574


State 393

  724 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  727                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 725 ($@66)
    '>'       reduce using rule 725 ($@66)
    '('       reduce using rule 725 ($@66)
    $default  reduce using rule 722 ($@64)

    $@64  go to state 575
    $@66  go to state 576


State 394

  731 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  734                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 732 ($@70)
    '>'       reduce using rule 732 ($@70)
    '('       reduce using rule 732 ($@70)
    $default  reduce using rule 729 ($@68)

    $@68  go to state 577
    $@70  go to state 578


State 395

  737 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 735 ($@72)

    $@72  go to state 579


State 396

  740 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 738 ($@74)

    $@74  go to state 580


State 397

  663 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 581
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 398

  686 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  688                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 582
    '('  shift, and go to state 583


State 399

  691 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 691 (type_declaration_no_options)


State 400

  696 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 696 (type_declaration_no_options)


State 401

  690 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 690 (type_declaration_no_options)


State 402

  698 type_declaration_no_options: type_declaration_no_options "==" . "const"
  699                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 584
    '&'      shift, and go to state 585


State 403

  704 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 404

  700 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 405

  693 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 406

  689 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  692                            | type_declaration_no_options '-' . "const"
  694                            | type_declaration_no_options '-' . '&'
  697                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 586
    '&'      shift, and go to state 587
    '['      shift, and go to state 588
    '#'      shift, and go to state 589


State 407

  674 dim_list: '[' . expr ']'
  681 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    ']'                               shift, and go to state 590
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 591
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 408

  695 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 409

  675 dim_list: dim_list . '[' expr ']'
  680 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 592

    '['       [reduce using rule 680 (type_declaration_no_options)]
    $default  reduce using rule 680 (type_declaration_no_options)


State 410

  742 type_declaration: type_declaration '|' . type_declaration_no_options
  743                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 593

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 594


State 411

  667 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  668                    | bitfield_alias_bits . "name" "end of expression"
  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 595
    "end of expression"  shift, and go to state 596

    $default  reduce using rule 757 ($@87)

    $@87  go to state 597


State 412

  541 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  542                      | tuple_alias_type_list . tuple_type "end of expression"
  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 304
    "array"              shift, and go to state 305
    "table"              shift, and go to state 306
    "typedecl"           shift, and go to state 307
    "iterator"           shift, and go to state 308
    "smart_ptr"          shift, and go to state 309
    "bool"               shift, and go to state 310
    "void"               shift, and go to state 311
    "string"             shift, and go to state 312
    "auto"               shift, and go to state 313
    "int"                shift, and go to state 314
    "int2"               shift, and go to state 315
    "int3"               shift, and go to state 316
    "int4"               shift, and go to state 317
    "uint"               shift, and go to state 318
    "bitfield"           shift, and go to state 319
    "uint2"              shift, and go to state 320
    "uint3"              shift, and go to state 321
    "uint4"              shift, and go to state 322
    "float"              shift, and go to state 323
    "float2"             shift, and go to state 324
    "float3"             shift, and go to state 325
    "float4"             shift, and go to state 326
    "range"              shift, and go to state 327
    "urange"             shift, and go to state 328
    "range64"            shift, and go to state 329
    "urange64"           shift, and go to state 330
    "block"              shift, and go to state 331
    "int64"              shift, and go to state 332
    "uint64"             shift, and go to state 333
    "double"             shift, and go to state 334
    "function"           shift, and go to state 335
    "lambda"             shift, and go to state 336
    "int8"               shift, and go to state 337
    "uint8"              shift, and go to state 338
    "int16"              shift, and go to state 339
    "uint16"             shift, and go to state 340
    "tuple"              shift, and go to state 341
    "variant"            shift, and go to state 342
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 343
    "name"               shift, and go to state 598
    "end of expression"  shift, and go to state 599
    '$'                  shift, and go to state 344

    $default  reduce using rule 747 ($@79)

    name_in_namespace            go to state 345
    tuple_type                   go to state 600
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 601
    $@79                         go to state 602


State 413

  547 variant_alias_type_list: variant_alias_type_list . "end of expression"
  548                        | variant_alias_type_list . variant_type "end of expression"
  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 603
    "end of expression"  shift, and go to state 604

    $default  reduce using rule 752 ($@83)

    variant_type  go to state 605
    $@83          go to state 606


State 414

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 415

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 416

  533 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 607
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 417

  290 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 290 (kwd_let_var_or_nothing)


State 418

  291 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 291 (kwd_let_var_or_nothing)


State 419

  532 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 608
    "name"  shift, and go to state 609

    variable_declaration         go to state 610
    variable_name_with_pos_list  go to state 611


State 420

  535 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 362
    '['   shift, and go to state 218

    $default  reduce using rule 511 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 612


State 421

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 422

  123 optional_function_type: ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 123 (optional_function_type)


State 423

  243 expressions: expressions error .

    $default  reduce using rule 243 (expressions)


State 424

  775 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_single ')'

    '<'  shift, and go to state 613


State 425

  778 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_single ')'

    '<'  shift, and go to state 614


State 426

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 615
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 427

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 428

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 429

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 616


State 430

  417 expr: "true" .

    $default  reduce using rule 417 (expr)


State 431

  418 expr: "false" .

    $default  reduce using rule 418 (expr)


State 432

  271 expr_new: "new" . new_type_declaration
  272         | "new" . new_type_declaration '(' ')'
  273         | "new" . new_type_declaration '(' expr_list ')'
  274         | "new" . new_type_declaration '(' make_struct_single ')'
  275         | "new" . make_decl

    "struct"               shift, and go to state 424
    "class"                shift, and go to state 425
    "array"                shift, and go to state 435
    "table"                shift, and go to state 440
    "fixed_array"          shift, and go to state 454
    "default"              shift, and go to state 455
    "tuple"                shift, and go to state 457
    "variant"              shift, and go to state 458
    "::"                   shift, and go to state 58
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 483
    '<'                    shift, and go to state 617
    '['                    shift, and go to state 491

    name_in_namespace           go to state 345
    new_type_declaration        go to state 618
    structure_type_declaration  go to state 619
    make_decl                   go to state 620
    make_struct_decl            go to state 541
    make_tuple_call             go to state 542
    make_dim_decl               go to state 543
    make_table_decl             go to state 544
    array_comprehension         go to state 545


State 433

  315 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  316               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  317               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 621


State 434

  314 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 622


State 435

  792 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  795              | "array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 623
    '('  shift, and go to state 624


State 436

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list
  282 expression_return: "return" . expr_pipe
  283                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 625
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 626
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 627
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 629
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 437

  411 expr: "null" .

    $default  reduce using rule 411 (expr)


State 438

  276 expression_break: "break" .

    $default  reduce using rule 276 (expression_break)


State 439

  289 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 630


State 440

  803 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  804                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 631
    '('  shift, and go to state 632


State 441

  265 expression_delete: "delete" . expr
  266                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "explicit"                        shift, and go to state 633
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 634
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 442

  461 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 635


State 443

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 636
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 444

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 637


State 445

  305 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 638


State 446

  308 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 639


State 447

  462 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 640


State 448

  277 expression_continue: "continue" .

    $default  reduce using rule 277 (expression_continue)


State 449

  240 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 641


State 450

  311 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 642


State 451

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 643


State 452

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 644
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 645
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 453

   77 expression_unsafe: "unsafe" . expression_block
  493 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 284
    '('                    shift, and go to state 646

    expression_block  go to state 647


State 454

  796 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  799              | "fixed_array" . '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 648
    '('  shift, and go to state 649


State 455

  784 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95

    '<'  shift, and go to state 650


State 456

  653 basic_type_declaration: "bitfield" .

    $default  reduce using rule 653 (basic_type_declaration)


State 457

  787 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  790                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_single ')'

    '<'  shift, and go to state 651
    '('  shift, and go to state 652


State 458

  781 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_single ')'

    '<'  shift, and go to state 653


State 459

  463 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  464     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 654


State 460

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr
  287 expression_yield: "yield" . expr_pipe
  288                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 655
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 656
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 657
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 461

  447 expr: "++" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 658
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 462

  448 expr: "--" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 659
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 463

  260 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 663


State 464

  258 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 664


State 465

  259 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 665


State 466

  495 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 666


State 467

  496 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 667


State 468

  497 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 668


State 469

  498 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 669


State 470

  499 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 670


State 471

  501 expr_mtag: "$c" . '(' expr ')' '(' ')'
  502          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 671


State 472

  500 expr_mtag: "..." .

    $default  reduce using rule 500 (expr_mtag)


State 473

  339 expr_numeric_const: "integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 474

  341 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 475

  340 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 476

  342 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 477

  343 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 478

  344 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 479

  345 expr_numeric_const: "double constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 480

  244 expr_keyword: "keyword" . expr expression_block
  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '<'                               shift, and go to state 672
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 673
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 481

  256 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 674


State 482

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 675


State 483

  802 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  811 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 676
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 678
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    expr_map_tuple_list     go to state 679
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 484

  216 expression_block: "begin of code block" expressions "end of code block" .
  217                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 680

    $default  reduce using rule 216 (expression_block)


State 485

  220 expression_any: "end of expression" .

    $default  reduce using rule 220 (expression_any)


State 486

  424 expr: '-' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 681
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 487

  423 expr: '+' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 682
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 488

  460 expr: '*' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 683
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 489

  422 expr: '~' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 684
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 490

  421 expr: '!' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 685
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 491

  791 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 687
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 492

  451 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 689
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 493

  323 block_or_lambda: '$' .

    $default  reduce using rule 323 (block_or_lambda)


State 494

  324 block_or_lambda: '@' .
  325                | '@' . '@'
  392 func_addr_expr: '@' . '@' func_addr_name
  395               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  398               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  510 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 690

    $default  reduce using rule 324 (block_or_lambda)


State 495

  415 expr: string_builder .

    $default  reduce using rule 415 (expr)


State 496

  414 expr: expr_reader .

    $default  reduce using rule 414 (expr)


State 497

  238 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 691


State 498

  239 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 692


State 499

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 693
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 500

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 694


State 501

  236 expression_any: expression_if_then_else .

    $default  reduce using rule 236 (expression_any)


State 502

  231 expression_any: expression_for_loop .

    $default  reduce using rule 231 (expression_any)


State 503

  228 expression_any: expression_unsafe .

    $default  reduce using rule 228 (expression_any)


State 504

  227 expression_any: expression_while_loop .

    $default  reduce using rule 227 (expression_any)


State 505

  229 expression_any: expression_with .

    $default  reduce using rule 229 (expression_any)


State 506

  230 expression_any: expression_with_alias .

    $default  reduce using rule 230 (expression_any)


State 507

  261 expr_pipe: expr_call_pipe .

    $default  reduce using rule 261 (expr_pipe)


State 508

  242 expressions: expressions expression_any .

    $default  reduce using rule 242 (expressions)


State 509

  222 expression_any: expr_keyword .

    $default  reduce using rule 222 (expression_any)


State 510

  219 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  494 expr: expression_keyword .

    '$'  shift, and go to state 493
    '@'  shift, and go to state 660

    '$'       [reduce using rule 494 (expr)]
    '@'       [reduce using rule 494 (expr)]
    $default  reduce using rule 494 (expr)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 696


State 511

  221 expression_any: expr_pipe .

    $default  reduce using rule 221 (expression_any)


State 512

  386 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  387                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  406 expr_call: name_in_namespace . '(' ')'
  407          | name_in_namespace . '(' make_struct_single ')'
  408          | name_in_namespace . '(' expr_list ')'
  412 expr: name_in_namespace .
  492     | name_in_namespace . "name"

    "name"  shift, and go to state 697
    '('     shift, and go to state 698

    "name"    [reduce using rule 412 (expr)]
    '('       [reduce using rule 412 (expr)]
    $default  reduce using rule 412 (expr)


State 513

  225 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 699


State 514

  485 expr: expr_new .

    $default  reduce using rule 485 (expr)


State 515

   70 expression_if_one_liner: expression_break .
  232 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 700

    $default  reduce using rule 70 (expression_if_one_liner)


State 516

   71 expression_if_one_liner: expression_continue .
  233 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 701

    $default  reduce using rule 71 (expression_if_one_liner)


State 517

   68 expression_if_one_liner: expression_return_no_pipe .
  281 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 702

    $default  reduce using rule 68 (expression_if_one_liner)


State 518

  234 expression_any: expression_return .

    $default  reduce using rule 234 (expression_any)


State 519

   69 expression_if_one_liner: expression_yield_no_pipe .
  286 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 703

    $default  reduce using rule 69 (expression_if_one_liner)


State 520

  235 expression_any: expression_yield .

    $default  reduce using rule 235 (expression_any)


State 521

  237 expression_any: expression_try_catch .

    $default  reduce using rule 237 (expression_any)


State 522

  301 expression_let: kwd_let . optional_in_scope let_variable_declaration
  302               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 704

    $default  reduce using rule 296 (optional_in_scope)

    optional_in_scope  go to state 705


State 523

  226 expression_any: expression_let .

    $default  reduce using rule 226 (expression_any)


State 524

  484 expr: expr_cast .

    $default  reduce using rule 484 (expr)


State 525

  483 expr: expr_type_decl .

    $default  reduce using rule 483 (expr)


State 526

  482 expr: expr_type_info .

    $default  reduce using rule 482 (expr)


State 527

  336 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 117 (optional_annotation_list)]
    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 706


State 528

  488 expr: expr_full_block .

    $default  reduce using rule 488 (expr)


State 529

  413 expr: expr_numeric_const .

    $default  reduce using rule 413 (expr)


State 530

  224 expression_any: expr_assign . "end of expression"
  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 707
    "end of expression"  shift, and go to state 708


State 531

  223 expression_any: expr_assign_pipe .

    $default  reduce using rule 223 (expression_any)


State 532

  487 expr: expr_named_call .

    $default  reduce using rule 487 (expr)


State 533

  486 expr: expr_method_call .

    $default  reduce using rule 486 (expr)


State 534

  458 expr: func_addr_expr .

    $default  reduce using rule 458 (expr)


State 535

  419 expr: expr_field .

    $default  reduce using rule 419 (expr)


State 536

  459 expr: expr_call .

    $default  reduce using rule 459 (expr)


State 537

   67 expression_if_one_liner: expr .
  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  369 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  370                 | expr . "<-" expr_assign_pipe_right
  371                 | expr . "&=" expr_assign_pipe_right
  372                 | expr . "|=" expr_assign_pipe_right
  373                 | expr . "^=" expr_assign_pipe_right
  374                 | expr . "&&=" expr_assign_pipe_right
  375                 | expr . "||=" expr_assign_pipe_right
  376                 | expr . "^^=" expr_assign_pipe_right
  377                 | expr . "+=" expr_assign_pipe_right
  378                 | expr . "-=" expr_assign_pipe_right
  379                 | expr . "*=" expr_assign_pipe_right
  380                 | expr . "/=" expr_assign_pipe_right
  381                 | expr . "%=" expr_assign_pipe_right
  382                 | expr . "<<=" expr_assign_pipe_right
  383                 | expr . ">>=" expr_assign_pipe_right
  384                 | expr . "<<<=" expr_assign_pipe_right
  385                 | expr . ">>>=" expr_assign_pipe_right
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "+="    shift, and go to state 711
    "-="    shift, and go to state 712
    "/="    shift, and go to state 713
    "*="    shift, and go to state 714
    "%="    shift, and go to state 715
    "&="    shift, and go to state 716
    "|="    shift, and go to state 717
    "^="    shift, and go to state 718
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    "<<="   shift, and go to state 724
    ">>="   shift, and go to state 725
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "<-"    shift, and go to state 730
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    ":="    shift, and go to state 736
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "<<<="  shift, and go to state 739
    ">>>="  shift, and go to state 740
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    "&&="   shift, and go to state 744
    "||="   shift, and go to state 745
    "^^="   shift, and go to state 746
    ".."    shift, and go to state 747
    '='     shift, and go to state 748
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761
    '$'     shift, and go to state 493
    '@'     shift, and go to state 660

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 538

  420 expr: expr_mtag .

    $default  reduce using rule 420 (expr)


State 539

  409 expr_call: basic_type_declaration . '(' ')'
  410          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 763


State 540

  416 expr: make_decl .

    $default  reduce using rule 416 (expr)


State 541

  759 make_decl: make_struct_decl .

    $default  reduce using rule 759 (make_decl)


State 542

  763 make_decl: make_tuple_call .

    $default  reduce using rule 763 (make_decl)


State 543

  760 make_decl: make_dim_decl .

    $default  reduce using rule 760 (make_decl)


State 544

  761 make_decl: make_table_decl .

    $default  reduce using rule 761 (make_decl)


State 545

  762 make_decl: array_comprehension .

    $default  reduce using rule 762 (make_decl)


State 546

  585 enum_list: enum_list "name" . "end of expression"
  586          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 764
    '='                  shift, and go to state 765


State 547

  584 enum_list: enum_list "end of expression" .

    $default  reduce using rule 584 (enum_list)


State 548

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 766


State 549

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 583 (enum_list)

    enum_list  go to state 767


State 550

  608 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 608 (optional_structure_parent)


State 551

  526 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  528                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  530                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  531                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  618 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 768
    '['                  shift, and go to state 769

    "def"     reduce using rule 117 (optional_annotation_list)
    '['       [reduce using rule 525 ($@34)]
    $default  reduce using rule 525 ($@34)

    optional_annotation_list  go to state 770
    $@34                      go to state 771


State 552

  574 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 574 (global_variable_declaration_list)


State 553

  512 optional_field_annotation: '[' '[' annotation_argument_list ']' . ']'

    ']'  shift, and go to state 772


State 554

  493 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 646


State 555

  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 672


State 556

  494 expr: expression_keyword .

    $default  reduce using rule 494 (expr)


State 557

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  563 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 773


State 558

  564 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 564 (let_variable_name_with_pos_list)


State 559

  565 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  566                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 774

    $default  reduce using rule 565 (let_variable_name_with_pos_list)


State 560

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  568                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 399
    "implicit"           shift, and go to state 400
    "explicit"           shift, and go to state 401
    "=="                 shift, and go to state 402
    "<-"                 shift, and go to state 561
    "??"                 shift, and go to state 403
    ":="                 shift, and go to state 562
    "end of expression"  shift, and go to state 775
    '='                  shift, and go to state 563
    '?'                  shift, and go to state 404
    '&'                  shift, and go to state 405
    '-'                  shift, and go to state 406
    '['                  shift, and go to state 407
    '#'                  shift, and go to state 408

    copy_or_move_or_clone  go to state 776
    dim_list               go to state 409


State 561

  558 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 558 (copy_or_move_or_clone)


State 562

  559 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 559 (copy_or_move_or_clone)


State 563

  557 copy_or_move_or_clone: '=' .

    $default  reduce using rule 557 (copy_or_move_or_clone)


State 564

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  571                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 777
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 778
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 565

  684 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 779


State 566

  707 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 780


State 567

  710 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 781
    type_declaration_no_options  go to state 350
    type_declaration             go to state 782


State 568

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  685 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 783


State 569

  713 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 784


State 570

  703 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 785


State 571

  662 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 786


State 572

  671 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 787

    bitfield_bits  go to state 788


State 573

  717 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 789


State 574

  720 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 790


State 575

  724 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 791


State 576

  727 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 792


State 577

  731 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 793


State 578

  734 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 794


State 579

  737 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 598
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 795
    tuple_type_list              go to state 796
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 601


State 580

  740 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 603

    variant_type       go to state 797
    variant_type_list  go to state 798


State 581

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  663 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 799


State 582

  688 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 687 ($@51)

    $@51  go to state 800


State 583

  686 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 495
    expr_reader             go to state 496
    optional_expr_list      go to state 801
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 802
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 584

  698 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 585

  699 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 586

  692 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 692 (type_declaration_no_options)


State 587

  694 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 588

  689 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 803


State 589

  697 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 697 (type_declaration_no_options)


State 590

  681 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 681 (type_declaration_no_options)


State 591

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  674 dim_list: '[' expr . ']'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 804


State 592

  675 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 805
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 593

  743 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 743 (type_declaration)


State 594

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  742 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 742 (type_declaration)

    dim_list  go to state 409


State 595

  668 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 806


State 596

  667 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 667 (bitfield_alias_bits)


State 597

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 807


State 598

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  537 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 808

    $default  reduce using rule 262 (name_in_namespace)


State 599

  541 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 541 (tuple_alias_type_list)


State 600

  542 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 809


State 601

  536 tuple_type: type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 536 (tuple_type)


State 602

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 810


State 603

  543 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 811


State 604

  547 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 547 (variant_alias_type_list)


State 605

  548 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 812


State 606

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 813


State 607

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  533 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 814


State 608

  623 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 815


State 609

  622 variable_name_with_pos_list: "name" .
  624                            | "name" . "aka" "name"

    "aka"  shift, and go to state 816

    $default  reduce using rule 622 (variable_name_with_pos_list)


State 610

  532 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 532 (function_argument_declaration)


State 611

  551 variable_declaration: variable_name_with_pos_list .
  552                     | variable_name_with_pos_list . '&'
  553                     | variable_name_with_pos_list . ':' type_declaration
  554                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  555                     | variable_name_with_pos_list . copy_or_move expr
  556                     | variable_name_with_pos_list . copy_or_move expr_pipe
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 817
    ','   shift, and go to state 818
    '='   shift, and go to state 819
    ':'   shift, and go to state 820
    '&'   shift, and go to state 821

    $default  reduce using rule 551 (variable_declaration)

    copy_or_move  go to state 822


State 612

  535 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 535 (function_argument_list)


State 613

  775 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_single ')'

    $default  reduce using rule 773 ($@88)

    $@88  go to state 823


State 614

  778 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_single ')'

    $default  reduce using rule 776 ($@90)

    $@90  go to state 824


State 615

   78 expression_while_loop: "while" expr . expression_block
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 709
    "as"                   shift, and go to state 710
    "<<"                   shift, and go to state 719
    ">>"                   shift, and go to state 720
    "++"                   shift, and go to state 721
    "--"                   shift, and go to state 722
    "<="                   shift, and go to state 723
    ">="                   shift, and go to state 726
    "=="                   shift, and go to state 727
    "!="                   shift, and go to state 728
    "->"                   shift, and go to state 729
    "??"                   shift, and go to state 731
    "?."                   shift, and go to state 732
    "?["                   shift, and go to state 733
    "<|"                   shift, and go to state 734
    "|>"                   shift, and go to state 735
    "<<<"                  shift, and go to state 737
    ">>>"                  shift, and go to state 738
    "&&"                   shift, and go to state 741
    "||"                   shift, and go to state 742
    "^^"                   shift, and go to state 743
    ".."                   shift, and go to state 747
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 749
    '|'                    shift, and go to state 750
    '^'                    shift, and go to state 751
    '&'                    shift, and go to state 752
    '<'                    shift, and go to state 753
    '>'                    shift, and go to state 754
    '-'                    shift, and go to state 755
    '+'                    shift, and go to state 756
    '*'                    shift, and go to state 757
    '/'                    shift, and go to state 758
    '%'                    shift, and go to state 759
    '.'                    shift, and go to state 760
    '['                    shift, and go to state 761

    expression_block  go to state 825


State 616

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 608
    "name"  shift, and go to state 609

    variable_name_with_pos_list  go to state 826


State 617

  269 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 267 ($@11)

    $@11  go to state 827


State 618

  271 expr_new: "new" new_type_declaration .
  272         | "new" new_type_declaration . '(' ')'
  273         | "new" new_type_declaration . '(' expr_list ')'
  274         | "new" new_type_declaration . '(' make_struct_single ')'

    '('  shift, and go to state 828

    '('       [reduce using rule 271 (expr_new)]
    $default  reduce using rule 271 (expr_new)


State 619

  270 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 270 (new_type_declaration)


State 620

  275 expr_new: "new" make_decl .

    $default  reduce using rule 275 (expr_new)


State 621

  315 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  316               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  317               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 829


State 622

  314 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 312 ($@19)

    $@19  go to state 830


State 623

  795 make_dim_decl: "array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 793 ($@98)

    $@98  go to state 831


State 624

  792 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 832
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 625

  280 expression_return_no_pipe: "return" "<-" . expr_list
  283 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 833
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 834
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 629
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 626

  282 expression_return: "return" expr_pipe .

    $default  reduce using rule 282 (expression_return)


State 627

  279 expression_return_no_pipe: "return" expr_list .
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 835

    $default  reduce using rule 279 (expression_return_no_pipe)


State 628

  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 707


State 629

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  318 expr_list: expr .
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "+="    shift, and go to state 836
    "-="    shift, and go to state 837
    "/="    shift, and go to state 838
    "*="    shift, and go to state 839
    "%="    shift, and go to state 840
    "&="    shift, and go to state 841
    "|="    shift, and go to state 842
    "^="    shift, and go to state 843
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    "<<="   shift, and go to state 844
    ">>="   shift, and go to state 845
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "<-"    shift, and go to state 846
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    ":="    shift, and go to state 736
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "<<<="  shift, and go to state 847
    ">>>="  shift, and go to state 848
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    "&&="   shift, and go to state 849
    "||="   shift, and go to state 850
    "^^="   shift, and go to state 851
    ".."    shift, and go to state 747
    '='     shift, and go to state 852
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761
    '$'     shift, and go to state 493
    '@'     shift, and go to state 660

    " <|"     reduce using rule 346 (expr_assign)
    $default  reduce using rule 318 (expr_list)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 630

  289 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 853


State 631

  804 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 854


State 632

  803 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 678
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    expr_map_tuple_list     go to state 855
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 633

  266 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 856
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 634

  265 expression_delete: "delete" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 265 (expression_delete)


State 635

  461 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 857
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 636

   79 expression_with: "with" expr . expression_block
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 709
    "as"                   shift, and go to state 710
    "<<"                   shift, and go to state 719
    ">>"                   shift, and go to state 720
    "++"                   shift, and go to state 721
    "--"                   shift, and go to state 722
    "<="                   shift, and go to state 723
    ">="                   shift, and go to state 726
    "=="                   shift, and go to state 727
    "!="                   shift, and go to state 728
    "->"                   shift, and go to state 729
    "??"                   shift, and go to state 731
    "?."                   shift, and go to state 732
    "?["                   shift, and go to state 733
    "<|"                   shift, and go to state 734
    "|>"                   shift, and go to state 735
    "<<<"                  shift, and go to state 737
    ">>>"                  shift, and go to state 738
    "&&"                   shift, and go to state 741
    "||"                   shift, and go to state 742
    "^^"                   shift, and go to state 743
    ".."                   shift, and go to state 747
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 749
    '|'                    shift, and go to state 750
    '^'                    shift, and go to state 751
    '&'                    shift, and go to state 752
    '<'                    shift, and go to state 753
    '>'                    shift, and go to state 754
    '-'                    shift, and go to state 755
    '+'                    shift, and go to state 756
    '*'                    shift, and go to state 757
    '/'                    shift, and go to state 758
    '%'                    shift, and go to state 759
    '.'                    shift, and go to state 760
    '['                    shift, and go to state 761

    expression_block  go to state 858


State 637

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 859


State 638

  305 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 303 ($@13)

    $@13  go to state 860


State 639

  308 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 306 ($@15)

    $@15  go to state 861


State 640

  462 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 862
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 641

  240 expression_any: "pass" "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 642

  311 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 309 ($@17)

    $@17  go to state 863


State 643

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 864


State 644

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 865


State 645

   56 expression_goto: "goto" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 56 (expression_goto)


State 646

  493 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 866
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 647

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 648

  799 make_dim_decl: "fixed_array" '<' . $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 797 ($@100)

    $@100  go to state 867


State 649

  796 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 868
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 650

  784 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95

    $default  reduce using rule 782 ($@94)

    $@94  go to state 869


State 651

  790 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_single ')'

    $default  reduce using rule 788 ($@96)

    $@96  go to state 870


State 652

  787 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 871
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 653

  781 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_single ')'

    $default  reduce using rule 779 ($@92)

    $@92  go to state 872


State 654

  463 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  464     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 873


State 655

  285 expression_yield_no_pipe: "yield" "<-" . expr
  288 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 874
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 875
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 656

  287 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 287 (expression_yield)


State 657

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  284 expression_yield_no_pipe: "yield" expr .
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "+="    shift, and go to state 836
    "-="    shift, and go to state 837
    "/="    shift, and go to state 838
    "*="    shift, and go to state 839
    "%="    shift, and go to state 840
    "&="    shift, and go to state 841
    "|="    shift, and go to state 842
    "^="    shift, and go to state 843
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    "<<="   shift, and go to state 844
    ">>="   shift, and go to state 845
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "<-"    shift, and go to state 846
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    ":="    shift, and go to state 736
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "<<<="  shift, and go to state 847
    ">>>="  shift, and go to state 848
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    "&&="   shift, and go to state 849
    "||="   shift, and go to state 850
    "^^="   shift, and go to state 851
    ".."    shift, and go to state 747
    '='     shift, and go to state 852
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761
    '$'     shift, and go to state 493
    '@'     shift, and go to state 660

    " <|"     reduce using rule 346 (expr_assign)
    $default  reduce using rule 284 (expression_yield_no_pipe)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 658

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  447     | "++" expr .
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 447 (expr)


State 659

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  448     | "--" expr .
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 448 (expr)


State 660

  324 block_or_lambda: '@' .
  325                | '@' . '@'

    '@'  shift, and go to state 876

    $default  reduce using rule 324 (block_or_lambda)


State 661

  334 expr_block: expression_block .

    $default  reduce using rule 334 (expr_block)


State 662

  335 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 117 (optional_annotation_list)]
    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 877


State 663

  260 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 664

  258 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 665

  259 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 666

  495 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 878
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 667

  496 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 879
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 668

  497 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 880
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 669

  498 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 881
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 670

  499 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 882
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 671

  501 expr_mtag: "$c" '(' . expr ')' '(' ')'
  502          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 883
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 672

  253 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 251 ($@7)

    $@7  go to state 884


State 673

  244 expr_keyword: "keyword" expr . expression_block
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 709
    "as"                   shift, and go to state 710
    "<<"                   shift, and go to state 719
    ">>"                   shift, and go to state 720
    "++"                   shift, and go to state 721
    "--"                   shift, and go to state 722
    "<="                   shift, and go to state 723
    ">="                   shift, and go to state 726
    "=="                   shift, and go to state 727
    "!="                   shift, and go to state 728
    "->"                   shift, and go to state 729
    "??"                   shift, and go to state 731
    "?."                   shift, and go to state 732
    "?["                   shift, and go to state 733
    "<|"                   shift, and go to state 734
    "|>"                   shift, and go to state 735
    "<<<"                  shift, and go to state 737
    ">>>"                  shift, and go to state 738
    "&&"                   shift, and go to state 741
    "||"                   shift, and go to state 742
    "^^"                   shift, and go to state 743
    ".."                   shift, and go to state 747
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 749
    '|'                    shift, and go to state 750
    '^'                    shift, and go to state 751
    '&'                    shift, and go to state 752
    '<'                    shift, and go to state 753
    '>'                    shift, and go to state 754
    '-'                    shift, and go to state 755
    '+'                    shift, and go to state 756
    '*'                    shift, and go to state 757
    '/'                    shift, and go to state 758
    '%'                    shift, and go to state 759
    '.'                    shift, and go to state 760
    '['                    shift, and go to state 761

    expression_block  go to state 885


State 674

  256 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 254 ($@9)

    $@9  go to state 886


State 675

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 887
    "{"                   shift, and go to state 888

    character_sequence  go to state 889


State 676

  811 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 608
    "name"  shift, and go to state 609

    variable_name_with_pos_list  go to state 890


State 677

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  785 make_map_tuple: expr . "=>" expr
  786               | expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "=>"   shift, and go to state 891
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 786 (make_map_tuple)


State 678

  800 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 800 (expr_map_tuple_list)


State 679

  801 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  802 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 892

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 893


State 680

  217 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 894


State 681

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  424 expr: '-' expr .
  425     | expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 424 (expr)


State 682

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  423 expr: '+' expr .
  425     | expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 423 (expr)


State 683

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  460     | '*' expr .
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 460 (expr)


State 684

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  422 expr: '~' expr .
  425     | expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 422 (expr)


State 685

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  421 expr: '!' expr .
  425     | expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 421 (expr)


State 686

  810 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 608
    "name"  shift, and go to state 609

    variable_name_with_pos_list  go to state 895


State 687

  319 expr_list: expr_list . ',' expr
  791 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 897


State 688

  318 expr_list: expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 318 (expr_list)


State 689

  319 expr_list: expr_list . ',' expr
  451 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 898


State 690

  325 block_or_lambda: '@' '@' .
  392 func_addr_expr: '@' '@' . func_addr_name
  395               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  398               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  510 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 899
    "$c"    shift, and go to state 900
    "name"  shift, and go to state 59
    '<'     shift, and go to state 901

    $default  reduce using rule 325 (block_or_lambda)

    name_in_namespace  go to state 902
    func_addr_name     go to state 903


State 691

  238 expression_any: expression_label "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 692

  239 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 239 (expression_any)


State 693

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 709
    "as"                   shift, and go to state 710
    "<<"                   shift, and go to state 719
    ">>"                   shift, and go to state 720
    "++"                   shift, and go to state 721
    "--"                   shift, and go to state 722
    "<="                   shift, and go to state 723
    ">="                   shift, and go to state 726
    "=="                   shift, and go to state 727
    "!="                   shift, and go to state 728
    "->"                   shift, and go to state 729
    "??"                   shift, and go to state 731
    "?."                   shift, and go to state 732
    "?["                   shift, and go to state 733
    "<|"                   shift, and go to state 734
    "|>"                   shift, and go to state 735
    "<<<"                  shift, and go to state 737
    ">>>"                  shift, and go to state 738
    "&&"                   shift, and go to state 741
    "||"                   shift, and go to state 742
    "^^"                   shift, and go to state 743
    ".."                   shift, and go to state 747
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 749
    '|'                    shift, and go to state 750
    '^'                    shift, and go to state 751
    '&'                    shift, and go to state 752
    '<'                    shift, and go to state 753
    '>'                    shift, and go to state 754
    '-'                    shift, and go to state 755
    '+'                    shift, and go to state 756
    '*'                    shift, and go to state 757
    '/'                    shift, and go to state 758
    '%'                    shift, and go to state 759
    '.'                    shift, and go to state 760
    '['                    shift, and go to state 761

    expression_block  go to state 904


State 694

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 905


State 695

  338 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 337 ($@21)

    $@21  go to state 906


State 696

  219 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 219 (expr_call_pipe)


State 697

  492 expr: name_in_namespace "name" .

    $default  reduce using rule 492 (expr)


State 698

  386 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  387                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  406 expr_call: name_in_namespace '(' . ')'
  407          | name_in_namespace '(' . make_struct_single ')'
  408          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 909
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 910
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 911
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_fields      go to state 912
    make_struct_single      go to state 913
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 699

  225 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 700

  232 expression_any: expression_break "end of expression" .

    $default  reduce using rule 232 (expression_any)


State 701

  233 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 233 (expression_any)


State 702

  281 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 281 (expression_return)


State 703

  286 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 286 (expression_yield)


State 704

  295 optional_in_scope: "inscope" .

    $default  reduce using rule 295 (optional_in_scope)


State 705

  301 expression_let: kwd_let optional_in_scope . let_variable_declaration
  302               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300
    '('     shift, and go to state 914

    tuple_expansion_variable_declaration  go to state 915
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 916


State 706

  336 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 917

    $default  reduce using rule 332 (optional_capture_list)

    optional_capture_list  go to state 918


State 707

  257 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 919


State 708

  224 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 709

  469 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr "is" . basic_type_declaration
  471     | expr "is" . "name"
  509 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 920
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 921
    "name"      shift, and go to state 922

    basic_type_declaration  go to state 923


State 710

  472 expr: expr "as" . "name"
  475     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  476     | expr "as" . basic_type_declaration
  507 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 924
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 925
    "name"      shift, and go to state 926

    basic_type_declaration  go to state 927


State 711

  356 expr_assign: expr "+=" . expr
  377 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 932
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 933
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 712

  357 expr_assign: expr "-=" . expr
  378 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 934
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 935
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 713

  359 expr_assign: expr "/=" . expr
  380 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 936
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 937
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 714

  358 expr_assign: expr "*=" . expr
  379 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 938
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 939
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 715

  360 expr_assign: expr "%=" . expr
  381 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 940
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 941
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 716

  350 expr_assign: expr "&=" . expr
  371 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 942
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 943
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 717

  351 expr_assign: expr "|=" . expr
  372 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 944
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 945
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 718

  352 expr_assign: expr "^=" . expr
  373 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 946
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 947
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 719

  425 expr: expr "<<" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 948
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 720

  426 expr: expr ">>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 949
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 721

  449 expr: expr "++" .

    $default  reduce using rule 449 (expr)


State 722

  450 expr: expr "--" .

    $default  reduce using rule 450 (expr)


State 723

  438 expr: expr "<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 950
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 724

  361 expr_assign: expr "<<=" . expr
  382 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 951
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 952
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 725

  362 expr_assign: expr ">>=" . expr
  383 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 953
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 954
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 726

  439 expr: expr ">=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 955
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 727

  436 expr: expr "==" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 956
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 728

  437 expr: expr "!=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 957
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 729

  388 expr_method_call: expr "->" . "name" '(' ')'
  389                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 958


State 730

  348 expr_assign: expr "<-" . expr
  370 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 959
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 960
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 731

  465 expr: expr "??" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 961
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 732

  456 expr: expr "?." . "name"
  504 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 962
    "name"  shift, and go to state 963


State 733

  454 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 964
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 734

  489 expr: expr "<|" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 965
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 735

  490 expr: expr "|>" . expr
  491     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 966
    expr_mtag               go to state 538
    basic_type_declaration  go to state 967
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 736

  349 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 968
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 737

  427 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 969
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 738

  428 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 970
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 739

  363 expr_assign: expr "<<<=" . expr
  384 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 971
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 972
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 740

  364 expr_assign: expr ">>>=" . expr
  385 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 973
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 974
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 741

  443 expr: expr "&&" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 975
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 742

  444 expr: expr "||" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 976
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 743

  445 expr: expr "^^" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 977
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 744

  353 expr_assign: expr "&&=" . expr
  374 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 978
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 979
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 745

  354 expr_assign: expr "||=" . expr
  375 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 980
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 981
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 746

  355 expr_assign: expr "^^=" . expr
  376 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 982
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 983
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 747

  446 expr: expr ".." . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 984
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 748

  347 expr_assign: expr '=' . expr
  369 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 928
    "@ <|"                            shift, and go to state 929
    "@@ <|"                           shift, and go to state 930
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 931
    expression_keyword      go to state 510
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign_pipe_right  go to state 985
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 986
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 749

  466 expr: expr '?' . expr ':' expr
  477     | expr '?' . "as" "name"
  480     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr '?' . "as" basic_type_declaration
  508 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "as"                              shift, and go to state 987
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 988
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 750

  441 expr: expr '|' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 989
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 751

  442 expr: expr '^' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 990
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 752

  440 expr: expr '&' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 991
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 753

  434 expr: expr '<' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 992
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 754

  435 expr: expr '>' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 993
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 755

  430 expr: expr '-' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 994
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 756

  429 expr: expr '+' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 995
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 757

  431 expr: expr '*' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 996
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 758

  432 expr: expr '/' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 997
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 759

  433 expr: expr '%' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 998
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 760

  399 expr_field: expr '.' . "name"
  400           | expr '.' . '.' "name"
  401           | expr '.' . "name" '(' ')'
  402           | expr '.' . "name" '(' expr_list ')'
  405           | expr '.' . $@26 error $@27
  453 expr: expr '.' . '[' expr ']'
  455     | expr '.' . "?[" expr ']'
  457     | expr '.' . "?." "name"
  503 expr_mtag: expr '.' . "$f" '(' expr ')'
  505          | expr '.' . '.' "$f" '(' expr ')'
  506          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 999
    "?["    shift, and go to state 1000
    "$f"    shift, and go to state 1001
    "name"  shift, and go to state 1002
    '.'     shift, and go to state 1003
    '['     shift, and go to state 1004

    $default  reduce using rule 403 ($@26)

    $@26  go to state 1005


State 761

  452 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1006
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 762

  218 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 218 (expr_call_pipe)


State 763

  409 expr_call: basic_type_declaration '(' . ')'
  410          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1007
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1008
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 764

  585 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 585 (enum_list)


State 765

  586 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1009
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 766

  603 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 603 (enum_declaration)


State 767

  584 enum_list: enum_list . "end of expression"
  585          | enum_list . "name" "end of expression"
  586          | enum_list . "name" '=' expr "end of expression"
  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 546
    "end of expression"  shift, and go to state 547

    $default  reduce using rule 605 ($@44)

    $@44  go to state 1010


State 768

  618 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 618 (optional_struct_variable_declaration_list)


State 769

  118 optional_annotation_list: '[' . annotation_list ']'
  531 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1011
    name_in_namespace             go to state 70


State 770

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  530                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1012


State 771

  526 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    '['  shift, and go to state 218

    $default  reduce using rule 511 (optional_field_annotation)

    optional_field_annotation       go to state 1013
    structure_variable_declaration  go to state 1014


State 772

  512 optional_field_annotation: '[' '[' annotation_argument_list ']' ']' .

    $default  reduce using rule 512 (optional_field_annotation)


State 773

  563 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 563 (let_variable_name_with_pos_list)


State 774

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1015


State 775

  567 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 567 (let_variable_declaration)


State 776

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 1016
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1017
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 777

  571 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 571 (let_variable_declaration)


State 778

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "+="                 shift, and go to state 836
    "-="                 shift, and go to state 837
    "/="                 shift, and go to state 838
    "*="                 shift, and go to state 839
    "%="                 shift, and go to state 840
    "&="                 shift, and go to state 841
    "|="                 shift, and go to state 842
    "^="                 shift, and go to state 843
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    "<<="                shift, and go to state 844
    ">>="                shift, and go to state 845
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "<-"                 shift, and go to state 846
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    ":="                 shift, and go to state 736
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "<<<="               shift, and go to state 847
    ">>>="               shift, and go to state 848
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    "&&="                shift, and go to state 849
    "||="                shift, and go to state 850
    "^^="                shift, and go to state 851
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1018
    '='                  shift, and go to state 852
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761
    '$'                  shift, and go to state 493
    '@'                  shift, and go to state 660

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 779

  684 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1019


State 780

  707 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1020


State 781

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1021


State 782

  672 table_type_pair: type_declaration .
  673                | type_declaration . "end of expression" type_declaration
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1022
    '|'                  shift, and go to state 410

    $default  reduce using rule 672 (table_type_pair)


State 783

  685 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 685 (type_declaration_no_options)


State 784

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1023


State 785

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1024


State 786

  662 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 662 (auto_type_declaration)


State 787

  664 bitfield_bits: "name" .

    $default  reduce using rule 664 (bitfield_bits)


State 788

  665 bitfield_bits: bitfield_bits . "end of expression" "name"
  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1025
    '>'                  shift, and go to state 1026


State 789

  717 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1027


State 790

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1028


State 791

  724 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1029


State 792

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1030


State 793

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1031


State 794

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1032


State 795

  538 tuple_type_list: tuple_type .

    $default  reduce using rule 538 (tuple_type_list)


State 796

  539 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1033
    '>'                  shift, and go to state 1034


State 797

  544 variant_type_list: variant_type .

    $default  reduce using rule 544 (variant_type_list)


State 798

  545 variant_type_list: variant_type_list . "end of expression" variant_type
  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1035
    '>'                  shift, and go to state 1036


State 799

  663 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 663 (auto_type_declaration)


State 800

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1037
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1038


State 801

  686 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1039


State 802

  246 optional_expr_list: expr_list .
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 835

    $default  reduce using rule 246 (optional_expr_list)


State 803

  689 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 689 (type_declaration_no_options)


State 804

  674 dim_list: '[' expr ']' .

    $default  reduce using rule 674 (dim_list)


State 805

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  675 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 1040


State 806

  668 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 668 (bitfield_alias_bits)


State 807

  758 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 758 (bitfield_alias_declaration)


State 808

  537 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1041


State 809

  542 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 542 (tuple_alias_type_list)


State 810

  748 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 748 (tuple_alias_declaration)


State 811

  543 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1042


State 812

  548 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 548 (variant_alias_type_list)


State 813

  753 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 753 (variant_alias_declaration)


State 814

  533 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 533 (function_argument_declaration)


State 815

  623 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1043
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 816

  624 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1044


State 817

  550 copy_or_move: "<-" .

    $default  reduce using rule 550 (copy_or_move)


State 818

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  626                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1045


State 819

  549 copy_or_move: '=' .

    $default  reduce using rule 549 (copy_or_move)


State 820

  553 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  554                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1046


State 821

  552 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 552 (variable_declaration)


State 822

  555 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  556                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expr_call_pipe          go to state 507
    expression_keyword      go to state 510
    expr_pipe               go to state 1047
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_assign             go to state 628
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1048
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 823

  775 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_single ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1049


State 824

  778 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_single ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1050


State 825

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 826

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1051
    ','   shift, and go to state 818


State 827

  269 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1052


State 828

  272 expr_new: "new" new_type_declaration '(' . ')'
  273         | "new" new_type_declaration '(' . expr_list ')'
  274         | "new" new_type_declaration '(' . make_struct_single ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1053
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1054
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_fields      go to state 912
    make_struct_single      go to state 1055
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 829

  315 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  316               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  317               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '<'                               shift, and go to state 1056
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1057
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 830

  314 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1058


State 831

  795 make_dim_decl: "array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1059


State 832

  319 expr_list: expr_list . ',' expr
  792 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1060


State 833

  283 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 283 (expression_return)


State 834

  280 expression_return_no_pipe: "return" "<-" expr_list .
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 835

    $default  reduce using rule 280 (expression_return_no_pipe)


State 835

  319 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1061
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 836

  356 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1062
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 837

  357 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1063
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 838

  359 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1064
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 839

  358 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1065
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 840

  360 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1066
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 841

  350 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1067
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 842

  351 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1068
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 843

  352 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1069
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 844

  361 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1070
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 845

  362 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1071
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 846

  348 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1072
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 847

  363 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1073
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 848

  364 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1074
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 849

  353 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1075
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 850

  354 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1076
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 851

  355 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1077
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 852

  347 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1078
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 853

  289 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1079


State 854

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  804 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 399
    "implicit"           shift, and go to state 400
    "explicit"           shift, and go to state 401
    "=="                 shift, and go to state 402
    "??"                 shift, and go to state 403
    "end of expression"  shift, and go to state 1080
    '?'                  shift, and go to state 404
    '&'                  shift, and go to state 405
    '>'                  shift, and go to state 1081
    '-'                  shift, and go to state 406
    '['                  shift, and go to state 407
    '#'                  shift, and go to state 408

    dim_list  go to state 409


State 855

  801 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  803 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 892

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1082


State 856

  266 expression_delete: "delete" "explicit" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 266 (expression_delete)


State 857

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  461     | "deref" '(' expr . ')'
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1083


State 858

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 859

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1084


State 860

  305 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1085


State 861

  308 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1086


State 862

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  462     | "addr" '(' expr . ')'
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1087


State 863

  311 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1088


State 864

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 865

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 866

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  493     | "unsafe" '(' expr . ')'
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1089


State 867

  799 make_dim_decl: "fixed_array" '<' $@100 . type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1090


State 868

  319 expr_list: expr_list . ',' expr
  796 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1091


State 869

  784 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1092


State 870

  790 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_single ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1093


State 871

  319 expr_list: expr_list . ',' expr
  787 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1094


State 872

  781 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_single ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1095


State 873

  463 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  464     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1096
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 874

  288 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 288 (expression_yield)


State 875

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  285 expression_yield_no_pipe: "yield" "<-" expr .
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "+="    shift, and go to state 836
    "-="    shift, and go to state 837
    "/="    shift, and go to state 838
    "*="    shift, and go to state 839
    "%="    shift, and go to state 840
    "&="    shift, and go to state 841
    "|="    shift, and go to state 842
    "^="    shift, and go to state 843
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    "<<="   shift, and go to state 844
    ">>="   shift, and go to state 845
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "<-"    shift, and go to state 846
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    ":="    shift, and go to state 736
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "<<<="  shift, and go to state 847
    ">>>="  shift, and go to state 848
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    "&&="   shift, and go to state 849
    "||="   shift, and go to state 850
    "^^="   shift, and go to state 851
    ".."    shift, and go to state 747
    '='     shift, and go to state 852
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761
    '$'     shift, and go to state 493
    '@'     shift, and go to state 660

    " <|"     reduce using rule 346 (expr_assign)
    $default  reduce using rule 285 (expression_yield_no_pipe)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 876

  325 block_or_lambda: '@' '@' .

    $default  reduce using rule 325 (block_or_lambda)


State 877

  335 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 917

    $default  reduce using rule 332 (optional_capture_list)

    optional_capture_list  go to state 1097


State 878

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$$" '(' expr . ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1098


State 879

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$i" '(' expr . ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1099


State 880

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  497 expr_mtag: "$v" '(' expr . ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1100


State 881

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$b" '(' expr . ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1101


State 882

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$a" '(' expr . ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1102


State 883

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$c" '(' expr . ')' '(' ')'
  502          | "$c" '(' expr . ')' '(' expr_list ')'
  503          | expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1103


State 884

  253 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1104
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1038


State 885

  244 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 244 (expr_keyword)


State 886

  256 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1105
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1038


State 887

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 888

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1106
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 889

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 890

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1107
    ','   shift, and go to state 818


State 891

  785 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1108
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 892

  801 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  809 optional_comma: ',' .

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 809 (optional_comma)

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 1109
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 893

  802 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1110


State 894

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 241 (expressions)

    expressions  go to state 1111


State 895

  625 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  626                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  810 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1112
    ','   shift, and go to state 818


State 896

  319 expr_list: expr_list ',' . expr
  809 optional_comma: ',' .

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 809 (optional_comma)

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1061
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 897

  791 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1113


State 898

  451 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1114


State 899

  391 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1115


State 900

  510 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1116


State 901

  395 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  398               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 396 ($@24)
    '>'       reduce using rule 396 ($@24)
    '('       reduce using rule 396 ($@24)
    $default  reduce using rule 393 ($@22)

    $@22  go to state 1117
    $@24  go to state 1118


State 902

  390 func_addr_name: name_in_namespace .

    $default  reduce using rule 390 (func_addr_name)


State 903

  392 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 392 (func_addr_expr)


State 904

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1119
    "elif"         shift, and go to state 1120
    "static_elif"  shift, and go to state 1121

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1122
    expression_else      go to state 1123


State 905

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1124
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 906

  338 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 117 (optional_annotation_list)]
    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 1125


State 907

  768 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  769                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1126


State 908

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  764 make_struct_fields: "name" . copy_or_move expr
  765                   | "name" . ":=" expr

    "<-"  shift, and go to state 817
    ":="  shift, and go to state 1127
    "::"  shift, and go to state 98
    '='   shift, and go to state 819

    $default  reduce using rule 262 (name_in_namespace)

    copy_or_move  go to state 1128


State 909

  386 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  791 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 687
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_fields      go to state 1129
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 910

  406 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 406 (expr_call)


State 911

  319 expr_list: expr_list . ',' expr
  387 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  408 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1130
    ')'  shift, and go to state 1131


State 912

  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  772 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1132

    $default  reduce using rule 772 (make_struct_single)


State 913

  407 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1133


State 914

  299 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  300                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1134

    tuple_expansion  go to state 1135


State 915

  302 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 302 (expression_let)


State 916

  301 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 301 (expression_let)


State 917

  333 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1136


State 918

  336 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1137


State 919

  257 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 920

  469 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1138


State 921

  509 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1139


State 922

  471 expr: expr "is" "name" .

    $default  reduce using rule 471 (expr)


State 923

  470 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 470 (expr)


State 924

  475 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1140


State 925

  507 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1141


State 926

  472 expr: expr "as" "name" .

    $default  reduce using rule 472 (expr)


State 927

  476 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 476 (expr)


State 928

  367 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 1142


State 929

  365 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 1143


State 930

  366 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 284
    '$'                    shift, and go to state 493
    '@'                    shift, and go to state 660

    expression_block  go to state 661
    block_or_lambda   go to state 662
    expr_block        go to state 1144


State 931

  368 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 368 (expr_assign_pipe_right)


State 932

  377 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 933

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "+=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 934

  378 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 935

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "-=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 936

  380 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 937

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "/=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 938

  379 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 939

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "*=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 940

  381 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 941

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "%=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 942

  371 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 943

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "&=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 944

  372 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 945

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "|=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 946

  373 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 947

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "^=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 948

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  425     | expr "<<" expr .
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '-'   shift, and go to state 755
    '+'   shift, and go to state 756
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 425 (expr)


State 949

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  426     | expr ">>" expr .
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '-'   shift, and go to state 755
    '+'   shift, and go to state 756
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 426 (expr)


State 950

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  438     | expr "<=" expr .
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 438 (expr)


State 951

  382 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 952

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "<<=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 953

  383 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 954

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr ">>=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 955

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  439     | expr ">=" expr .
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 439 (expr)


State 956

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  436     | expr "==" expr .
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 436 (expr)


State 957

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  437     | expr "!=" expr .
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 437 (expr)


State 958

  388 expr_method_call: expr "->" "name" . '(' ')'
  389                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1145


State 959

  370 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 960

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "<-" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 961

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  465     | expr "??" expr .
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 465 (expr)


State 962

  504 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1146


State 963

  456 expr: expr "?." "name" .

    $default  reduce using rule 456 (expr)


State 964

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  454     | expr "?[" expr . ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 1147


State 965

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  489     | expr "<|" expr .
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 489 (expr)


State 966

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  490     | expr "|>" expr .
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 729
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 490 (expr)


State 967

  409 expr_call: basic_type_declaration . '(' ')'
  410          | basic_type_declaration . '(' expr_list ')'
  491 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 763

    $default  reduce using rule 491 (expr)


State 968

  349 expr_assign: expr ":=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 349 (expr_assign)


State 969

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  427     | expr "<<<" expr .
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '-'   shift, and go to state 755
    '+'   shift, and go to state 756
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 427 (expr)


State 970

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  428     | expr ">>>" expr .
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '-'   shift, and go to state 755
    '+'   shift, and go to state 756
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 428 (expr)


State 971

  384 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 972

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "<<<=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 973

  385 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 974

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr ">>>=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 975

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  443     | expr "&&" expr .
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 443 (expr)


State 976

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  444     | expr "||" expr .
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "^^"   shift, and go to state 743
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 444 (expr)


State 977

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  445     | expr "^^" expr .
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 445 (expr)


State 978

  374 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 979

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "&&=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 980

  375 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 981

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "||=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 982

  376 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 983

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "^^=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 984

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  446     | expr ".." expr .
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    ".."  error (nonassociative)

    $default  reduce using rule 446 (expr)


State 985

  369 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 986

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr '=' expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    '$'    shift, and go to state 493
    '@'    shift, and go to state 660

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 987

  477 expr: expr '?' "as" . "name"
  480     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  481     | expr '?' "as" . basic_type_declaration
  508 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1148
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1149
    "name"      shift, and go to state 1150

    basic_type_declaration  go to state 1151


State 988

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  466     | expr '?' expr . ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    ':'    shift, and go to state 1152
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761


State 989

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  441     | expr '|' expr .
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 441 (expr)


State 990

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  442     | expr '^' expr .
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 442 (expr)


State 991

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  440     | expr '&' expr .
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 440 (expr)


State 992

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  434     | expr '<' expr .
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 434 (expr)


State 993

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  435     | expr '>' expr .
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 435 (expr)


State 994

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  430     | expr '-' expr .
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 430 (expr)


State 995

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  429     | expr '+' expr .
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '*'   shift, and go to state 757
    '/'   shift, and go to state 758
    '%'   shift, and go to state 759
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 429 (expr)


State 996

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  431     | expr '*' expr .
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 431 (expr)


State 997

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  432     | expr '/' expr .
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 432 (expr)


State 998

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  433     | expr '%' expr .
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 709
    "as"  shift, and go to state 710
    "++"  shift, and go to state 721
    "--"  shift, and go to state 722
    "->"  shift, and go to state 729
    "??"  shift, and go to state 731
    "?."  shift, and go to state 732
    "?["  shift, and go to state 733
    "<|"  shift, and go to state 734
    "|>"  shift, and go to state 735
    '.'   shift, and go to state 760
    '['   shift, and go to state 761

    $default  reduce using rule 433 (expr)


State 999

  457 expr: expr '.' "?." . "name"
  506 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1153
    "name"  shift, and go to state 1154


State 1000

  455 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1155
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1001

  503 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1156


State 1002

  399 expr_field: expr '.' "name" .
  401           | expr '.' "name" . '(' ')'
  402           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1157

    '('       [reduce using rule 399 (expr_field)]
    $default  reduce using rule 399 (expr_field)


State 1003

  400 expr_field: expr '.' '.' . "name"
  505 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1158
    "name"  shift, and go to state 1159


State 1004

  453 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1160
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1005

  405 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1161


State 1006

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  452     | expr '[' expr . ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 1162


State 1007

  409 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 409 (expr_call)


State 1008

  319 expr_list: expr_list . ',' expr
  410 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 835
    ')'  shift, and go to state 1163


State 1009

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  586 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1164
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761


State 1010

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1165


State 1011

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  531 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1166


State 1012

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  530                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1167
    "private"  shift, and go to state 1168

    $default  reduce using rule 518 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1169


State 1013

  523 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1170

    $default  reduce using rule 521 (optional_static_member_variable)

    optional_static_member_variable  go to state 1171


State 1014

  526 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1172


State 1015

  566 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 566 (let_variable_name_with_pos_list)


State 1016

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 569 (let_variable_declaration)


State 1017

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "+="                 shift, and go to state 836
    "-="                 shift, and go to state 837
    "/="                 shift, and go to state 838
    "*="                 shift, and go to state 839
    "%="                 shift, and go to state 840
    "&="                 shift, and go to state 841
    "|="                 shift, and go to state 842
    "^="                 shift, and go to state 843
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    "<<="                shift, and go to state 844
    ">>="                shift, and go to state 845
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "<-"                 shift, and go to state 846
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    ":="                 shift, and go to state 736
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "<<<="               shift, and go to state 847
    ">>>="               shift, and go to state 848
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    "&&="                shift, and go to state 849
    "||="                shift, and go to state 850
    "^^="                shift, and go to state 851
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1173
    '='                  shift, and go to state 852
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761
    '$'                  shift, and go to state 493
    '@'                  shift, and go to state 660

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 1018

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 570 (let_variable_declaration)


State 1019

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 683 ($@50)

    $@50  go to state 1174


State 1020

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 706 ($@55)

    $@55  go to state 1175


State 1021

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 709 ($@57)

    $@57  go to state 1176


State 1022

  673 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1177


State 1023

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 712 ($@59)

    $@59  go to state 1178


State 1024

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 702 ($@53)

    $@53  go to state 1179


State 1025

  665 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1180


State 1026

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 670 ($@48)

    $@48  go to state 1181


State 1027

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 716 ($@61)

    $@61  go to state 1182


State 1028

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1183


State 1029

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 723 ($@65)

    $@65  go to state 1184


State 1030

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1185


State 1031

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 730 ($@69)

    $@69  go to state 1186


State 1032

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1187


State 1033

  539 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 598
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1188
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 601


State 1034

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 736 ($@73)

    $@73  go to state 1189


State 1035

  545 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 603

    variant_type  go to state 1190


State 1036

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 739 ($@75)

    $@75  go to state 1191


State 1037

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1192
    '>'                  shift, and go to state 1193


State 1038

  249 type_declaration_no_options_list: type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 249 (type_declaration_no_options_list)


State 1039

  686 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1040

  675 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 675 (dim_list)


State 1041

  537 tuple_type: "name" ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 537 (tuple_type)


State 1042

  543 variant_type: "name" ':' type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 543 (variant_type)


State 1043

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  623 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1194


State 1044

  624 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 624 (variable_name_with_pos_list)


State 1045

  625 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  626                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1195

    $default  reduce using rule 625 (variable_name_with_pos_list)


State 1046

  553 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  554                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 817
    '='   shift, and go to state 819
    '|'   shift, and go to state 410

    $default  reduce using rule 553 (variable_declaration)

    copy_or_move  go to state 1196


State 1047

  556 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 556 (variable_declaration)


State 1048

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr .
  347            | expr . '=' expr
  348            | expr . "<-" expr
  349            | expr . ":=" expr
  350            | expr . "&=" expr
  351            | expr . "|=" expr
  352            | expr . "^=" expr
  353            | expr . "&&=" expr
  354            | expr . "||=" expr
  355            | expr . "^^=" expr
  356            | expr . "+=" expr
  357            | expr . "-=" expr
  358            | expr . "*=" expr
  359            | expr . "/=" expr
  360            | expr . "%=" expr
  361            | expr . "<<=" expr
  362            | expr . ">>=" expr
  363            | expr . "<<<=" expr
  364            | expr . ">>>=" expr
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  555 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "+="    shift, and go to state 836
    "-="    shift, and go to state 837
    "/="    shift, and go to state 838
    "*="    shift, and go to state 839
    "%="    shift, and go to state 840
    "&="    shift, and go to state 841
    "|="    shift, and go to state 842
    "^="    shift, and go to state 843
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    "<<="   shift, and go to state 844
    ">>="   shift, and go to state 845
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "<-"    shift, and go to state 846
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    ":="    shift, and go to state 736
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "<<<="  shift, and go to state 847
    ">>>="  shift, and go to state 848
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    "&&="   shift, and go to state 849
    "||="   shift, and go to state 850
    "^^="   shift, and go to state 851
    ".."    shift, and go to state 747
    '='     shift, and go to state 852
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761
    '$'     shift, and go to state 493
    '@'     shift, and go to state 660

    " <|"     reduce using rule 346 (expr_assign)
    $default  reduce using rule 555 (variable_declaration)

    block_or_lambda                go to state 695
    expr_full_block_assumed_piped  go to state 762


State 1049

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_single ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1197
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1050

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_single ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1198
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1051

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1199
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1052

  269 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1200


State 1053

  272 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 272 (expr_new)


State 1054

  273 expr_new: "new" new_type_declaration '(' expr_list . ')'
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 835
    ')'  shift, and go to state 1201


State 1055

  274 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1202


State 1056

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  317               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1203


State 1057

  315 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1204


State 1058

  314 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1205


State 1059

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1206
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1060

  792 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1207


State 1061

  319 expr_list: expr_list ',' expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 319 (expr_list)


State 1062

  356 expr_assign: expr "+=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 356 (expr_assign)


State 1063

  357 expr_assign: expr "-=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 357 (expr_assign)


State 1064

  359 expr_assign: expr "/=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 359 (expr_assign)


State 1065

  358 expr_assign: expr "*=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 358 (expr_assign)


State 1066

  360 expr_assign: expr "%=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 360 (expr_assign)


State 1067

  350 expr_assign: expr "&=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 350 (expr_assign)


State 1068

  351 expr_assign: expr "|=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 351 (expr_assign)


State 1069

  352 expr_assign: expr "^=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 352 (expr_assign)


State 1070

  361 expr_assign: expr "<<=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 361 (expr_assign)


State 1071

  362 expr_assign: expr ">>=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 362 (expr_assign)


State 1072

  348 expr_assign: expr "<-" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 348 (expr_assign)


State 1073

  363 expr_assign: expr "<<<=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 363 (expr_assign)


State 1074

  364 expr_assign: expr ">>>=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 364 (expr_assign)


State 1075

  353 expr_assign: expr "&&=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 353 (expr_assign)


State 1076

  354 expr_assign: expr "||=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 354 (expr_assign)


State 1077

  355 expr_assign: expr "^^=" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 355 (expr_assign)


State 1078

  347 expr_assign: expr '=' expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 347 (expr_assign)


State 1079

  289 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 289 (expression_try_catch)


State 1080

  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1208


State 1081

  804 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1209


State 1082

  803 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1210


State 1083

  461 expr: "deref" '(' expr ')' .

    $default  reduce using rule 461 (expr)


State 1084

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1211
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1085

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1212
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1086

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1213
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1087

  462 expr: "addr" '(' expr ')' .

    $default  reduce using rule 462 (expr)


State 1088

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1214
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1089

  493 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 493 (expr)


State 1090

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options . '>' $@101 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1215
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1091

  796 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1216


State 1092

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  784 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1217
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1093

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_single ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1218
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1094

  787 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1219


State 1095

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_single ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1220
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1096

  463 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  464     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 917

    $default  reduce using rule 332 (optional_capture_list)

    optional_capture_list  go to state 1221


State 1097

  335 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1222


State 1098

  495 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1099

  496 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1100

  497 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1101

  498 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1102

  499 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1103

  501 expr_mtag: "$c" '(' expr ')' . '(' ')'
  502          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1223


State 1104

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1192
    '>'                  shift, and go to state 1224


State 1105

  250 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1192
    '>'                  shift, and go to state 1225


State 1106

   30 string_builder_body: string_builder_body "{" expr . "}"
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    "}"    shift, and go to state 1226
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761


State 1107

  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1227
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1108

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  785 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 785 (make_map_tuple)


State 1109

  801 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 801 (expr_map_tuple_list)


State 1110

  802 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 802 (make_table_decl)


State 1111

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 423
    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 426
    "if"                              shift, and go to state 427
    "static_if"                       shift, and go to state 428
    "for"                             shift, and go to state 429
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 436
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "try"                             shift, and go to state 439
    "table"                           shift, and go to state 440
    "delete"                          shift, and go to state 441
    "deref"                           shift, and go to state 442
    "with"                            shift, and go to state 443
    "assume"                          shift, and go to state 444
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "pass"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 450
    "label"                           shift, and go to state 451
    "goto"                            shift, and go to state 452
    "unsafe"                          shift, and go to state 453
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 480
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    "end of code block"               shift, and go to state 1228
    "end of expression"               shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder             go to state 495
    expr_reader                go to state 496
    expression_label           go to state 497
    expression_goto            go to state 498
    if_or_static_if            go to state 499
    expression_if_one_liner    go to state 500
    expression_if_then_else    go to state 501
    expression_for_loop        go to state 502
    expression_unsafe          go to state 503
    expression_while_loop      go to state 504
    expression_with            go to state 505
    expression_with_alias      go to state 506
    expr_call_pipe             go to state 507
    expression_any             go to state 508
    expr_keyword               go to state 509
    expression_keyword         go to state 510
    expr_pipe                  go to state 511
    name_in_namespace          go to state 512
    expression_delete          go to state 513
    expr_new                   go to state 514
    expression_break           go to state 515
    expression_continue        go to state 516
    expression_return_no_pipe  go to state 517
    expression_return          go to state 518
    expression_yield_no_pipe   go to state 519
    expression_yield           go to state 520
    expression_try_catch       go to state 521
    kwd_let                    go to state 522
    expression_let             go to state 523
    expr_cast                  go to state 524
    expr_type_decl             go to state 525
    expr_type_info             go to state 526
    block_or_lambda            go to state 527
    expr_full_block            go to state 528
    expr_numeric_const         go to state 529
    expr_assign                go to state 530
    expr_assign_pipe           go to state 531
    expr_named_call            go to state 532
    expr_method_call           go to state 533
    func_addr_expr             go to state 534
    expr_field                 go to state 535
    expr_call                  go to state 536
    expr                       go to state 537
    expr_mtag                  go to state 538
    basic_type_declaration     go to state 539
    make_decl                  go to state 540
    make_struct_decl           go to state 541
    make_tuple_call            go to state 542
    make_dim_decl              go to state 543
    make_table_decl            go to state 544
    array_comprehension        go to state 545


State 1112

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1229
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1113

  791 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 791 (make_dim_decl)


State 1114

  451 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 451 (expr)


State 1115

  391 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1230
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1116

  510 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1231
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1117

  395 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1232


State 1118

  398 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1233


State 1119

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1234


State 1120

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1121

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1122

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1235
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1123

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1124

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1236
    "is"    shift, and go to state 709
    "as"    shift, and go to state 710
    "<<"    shift, and go to state 719
    ">>"    shift, and go to state 720
    "++"    shift, and go to state 721
    "--"    shift, and go to state 722
    "<="    shift, and go to state 723
    ">="    shift, and go to state 726
    "=="    shift, and go to state 727
    "!="    shift, and go to state 728
    "->"    shift, and go to state 729
    "??"    shift, and go to state 731
    "?."    shift, and go to state 732
    "?["    shift, and go to state 733
    "<|"    shift, and go to state 734
    "|>"    shift, and go to state 735
    "<<<"   shift, and go to state 737
    ">>>"   shift, and go to state 738
    "&&"    shift, and go to state 741
    "||"    shift, and go to state 742
    "^^"    shift, and go to state 743
    ".."    shift, and go to state 747
    '?'     shift, and go to state 749
    '|'     shift, and go to state 750
    '^'     shift, and go to state 751
    '&'     shift, and go to state 752
    '<'     shift, and go to state 753
    '>'     shift, and go to state 754
    '-'     shift, and go to state 755
    '+'     shift, and go to state 756
    '*'     shift, and go to state 757
    '/'     shift, and go to state 758
    '%'     shift, and go to state 759
    '.'     shift, and go to state 760
    '['     shift, and go to state 761

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1237


State 1125

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 917

    $default  reduce using rule 332 (optional_capture_list)

    optional_capture_list  go to state 1238


State 1126

  768 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  769                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1239
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1127

  765 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1240
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1128

  764 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1241
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1129

  386 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1132
    ']'  shift, and go to state 1242


State 1130

  319 expr_list: expr_list ',' . expr
  387 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 1243
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1061
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1131

  408 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 408 (expr_call)


State 1132

  766 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  767                   | make_struct_fields ',' . "name" ":=" expr
  770                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1244
    "name"  shift, and go to state 1245


State 1133

  407 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 407 (expr_call)


State 1134

  297 tuple_expansion: "name" .

    $default  reduce using rule 297 (tuple_expansion)


State 1135

  298 tuple_expansion: tuple_expansion . ',' "name"
  299 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  300                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1246
    ')'  shift, and go to state 1247


State 1136

  333 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1248
    ":="  shift, and go to state 1249
    '='   shift, and go to state 1250
    '&'   shift, and go to state 1251

    capture_entry  go to state 1252
    capture_list   go to state 1253


State 1137

  336 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1254


State 1138

  469 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 467 ($@28)

    $@28  go to state 1255


State 1139

  509 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1256
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1140

  475 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 473 ($@30)

    $@30  go to state 1257


State 1141

  507 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1258
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1142

  367 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 367 (expr_assign_pipe_right)


State 1143

  365 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 365 (expr_assign_pipe_right)


State 1144

  366 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 366 (expr_assign_pipe_right)


State 1145

  388 expr_method_call: expr "->" "name" '(' . ')'
  389                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1259
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1260
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1146

  504 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1261
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1147

  454 expr: expr "?[" expr ']' .

    $default  reduce using rule 454 (expr)


State 1148

  480 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1262


State 1149

  508 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1263


State 1150

  477 expr: expr '?' "as" "name" .

    $default  reduce using rule 477 (expr)


State 1151

  481 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 481 (expr)


State 1152

  466 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1264
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1153

  506 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1265


State 1154

  457 expr: expr '.' "?." "name" .

    $default  reduce using rule 457 (expr)


State 1155

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  455     | expr '.' "?[" expr . ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 1266


State 1156

  503 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1267
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1157

  401 expr_field: expr '.' "name" '(' . ')'
  402           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1268
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1269
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1158

  505 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1270


State 1159

  400 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 400 (expr_field)


State 1160

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  453     | expr '.' '[' expr . ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ']'    shift, and go to state 1271


State 1161

  405 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 404 ($@27)

    $@27  go to state 1272


State 1162

  452 expr: expr '[' expr ']' .

    $default  reduce using rule 452 (expr)


State 1163

  410 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 410 (expr_call)


State 1164

  586 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 586 (enum_list)


State 1165

  606 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 606 (enum_declaration)


State 1166

  118 optional_annotation_list: '[' annotation_list ']' .
  531 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1273

    $default  reduce using rule 118 (optional_annotation_list)


State 1167

  519 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 519 (optional_public_or_private_member_variable)


State 1168

  520 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 520 (optional_public_or_private_member_variable)


State 1169

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  530                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1274
    "static"    shift, and go to state 1170

    $default  reduce using rule 521 (optional_static_member_variable)

    optional_static_member_variable  go to state 1275


State 1170

  522 optional_static_member_variable: "static" .

    $default  reduce using rule 522 (optional_static_member_variable)


State 1171

  523 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1276
    "sealed"    shift, and go to state 1277

    $default  reduce using rule 513 (optional_override)

    optional_override  go to state 1278


State 1172

  526 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 526 (struct_variable_declaration_list)


State 1173

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 568 (let_variable_declaration)


State 1174

  684 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 684 (type_declaration_no_options)


State 1175

  707 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 707 (type_declaration_no_options)


State 1176

  710 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 710 (type_declaration_no_options)


State 1177

  673 table_type_pair: type_declaration "end of expression" type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 673 (table_type_pair)


State 1178

  713 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1179

  703 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 703 (type_declaration_no_options)


State 1180

  665 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 665 (bitfield_bits)


State 1181

  671 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 671 (bitfield_type_declaration)


State 1182

  717 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1183

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 719 ($@63)

    $@63  go to state 1279


State 1184

  724 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1185

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 726 ($@67)

    $@67  go to state 1280


State 1186

  731 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1187

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 733 ($@71)

    $@71  go to state 1281


State 1188

  539 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 539 (tuple_type_list)


State 1189

  737 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1190

  545 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 545 (variant_type_list)


State 1191

  740 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 740 (type_declaration_no_options)


State 1192

  250 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1282


State 1193

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1283


State 1194

  623 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 623 (variable_name_with_pos_list)


State 1195

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1284


State 1196

  554 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1285
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1197

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_single ')'

    $default  reduce using rule 774 ($@89)

    $@89  go to state 1286


State 1198

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_single ')'

    $default  reduce using rule 777 ($@91)

    $@91  go to state 1287


State 1199

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  319 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 284
    ','                    shift, and go to state 835

    expression_block  go to state 1288


State 1200

  269 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 268 ($@12)

    $@12  go to state 1289


State 1201

  273 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 273 (expr_new)


State 1202

  274 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 274 (expr_new)


State 1203

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  317               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1290
    '>'                  shift, and go to state 1291


State 1204

  315 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 315 (expr_type_info)


State 1205

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 313 ($@20)

    $@20  go to state 1292


State 1206

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 794 ($@99)

    $@99  go to state 1293


State 1207

  792 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 792 (make_dim_decl)


State 1208

  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"
  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1294
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1209

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 678
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    expr_map_tuple_list     go to state 1295
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1210

  803 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 803 (make_table_decl)


State 1211

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 81 (expression_with_alias)


State 1212

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 304 ($@14)

    $@14  go to state 1296


State 1213

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 307 ($@16)

    $@16  go to state 1297


State 1214

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 310 ($@18)

    $@18  go to state 1298


State 1215

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' . $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 798 ($@101)

    $@101  go to state 1299


State 1216

  796 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 796 (make_dim_decl)


State 1217

  784 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95

    $default  reduce using rule 783 ($@95)

    $@95  go to state 1300


State 1218

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_single ')'

    $default  reduce using rule 789 ($@97)

    $@97  go to state 1301


State 1219

  787 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 787 (make_tuple_call)


State 1220

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_single ')'

    $default  reduce using rule 780 ($@93)

    $@93  go to state 1302


State 1221

  463 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  464     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1303


State 1222

  335 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1304


State 1223

  501 expr_mtag: "$c" '(' expr ')' '(' . ')'
  502          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1305
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1306
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1224

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 252 ($@8)

    $@8  go to state 1307


State 1225

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 255 ($@10)

    $@10  go to state 1308


State 1226

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1227

  319 expr_list: expr_list . ',' expr
  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1309
    ','                  shift, and go to state 835


State 1228

  217 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 217 (expression_block)


State 1229

  319 expr_list: expr_list . ',' expr
  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1310
    ','                  shift, and go to state 835


State 1230

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  391 func_addr_name: "$i" '(' expr . ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1311


State 1231

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  510          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1312


State 1232

  395 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1313
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1233

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1314


State 1234

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1235

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 709
    "as"                   shift, and go to state 710
    "<<"                   shift, and go to state 719
    ">>"                   shift, and go to state 720
    "++"                   shift, and go to state 721
    "--"                   shift, and go to state 722
    "<="                   shift, and go to state 723
    ">="                   shift, and go to state 726
    "=="                   shift, and go to state 727
    "!="                   shift, and go to state 728
    "->"                   shift, and go to state 729
    "??"                   shift, and go to state 731
    "?."                   shift, and go to state 732
    "?["                   shift, and go to state 733
    "<|"                   shift, and go to state 734
    "|>"                   shift, and go to state 735
    "<<<"                  shift, and go to state 737
    ">>>"                  shift, and go to state 738
    "&&"                   shift, and go to state 741
    "||"                   shift, and go to state 742
    "^^"                   shift, and go to state 743
    ".."                   shift, and go to state 747
    "begin of code block"  shift, and go to state 284
    '?'                    shift, and go to state 749
    '|'                    shift, and go to state 750
    '^'                    shift, and go to state 751
    '&'                    shift, and go to state 752
    '<'                    shift, and go to state 753
    '>'                    shift, and go to state 754
    '-'                    shift, and go to state 755
    '+'                    shift, and go to state 756
    '*'                    shift, and go to state 757
    '/'                    shift, and go to state 758
    '%'                    shift, and go to state 759
    '.'                    shift, and go to state 760
    '['                    shift, and go to state 761

    expression_block  go to state 1315


State 1236

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1316


State 1237

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1317


State 1238

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1318


State 1239

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  769                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1319


State 1240

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  765 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 765 (make_struct_fields)


State 1241

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  764 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 764 (make_struct_fields)


State 1242

  386 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1320


State 1243

  387 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  791 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 907
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 908
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 687
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_fields      go to state 1321
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1244

  770 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1322


State 1245

  766 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  767                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 817
    ":="  shift, and go to state 1323
    '='   shift, and go to state 819

    copy_or_move  go to state 1324


State 1246

  298 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1325


State 1247

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  300                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1326
    '&'  shift, and go to state 382

    $default  reduce using rule 560 (optional_ref)

    optional_ref  go to state 1327


State 1248

  328 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1328


State 1249

  329 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1329


State 1250

  327 capture_entry: '=' . "name"

    "name"  shift, and go to state 1330


State 1251

  326 capture_entry: '&' . "name"

    "name"  shift, and go to state 1331


State 1252

  330 capture_list: capture_entry .

    $default  reduce using rule 330 (capture_list)


State 1253

  331 capture_list: capture_list . ',' capture_entry
  333 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1332
    ']'  shift, and go to state 1333


State 1254

  336 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1334
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1335
    block_or_simple_block  go to state 1336


State 1255

  469 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1337


State 1256

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  509          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1338


State 1257

  475 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1339


State 1258

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  507          | expr "as" "$f" '(' expr . ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1340


State 1259

  388 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 388 (expr_method_call)


State 1260

  319 expr_list: expr_list . ',' expr
  389 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 835
    ')'  shift, and go to state 1341


State 1261

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  504          | expr "?." "$f" '(' expr . ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1342


State 1262

  480 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 478 ($@32)

    $@32  go to state 1343


State 1263

  508 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1344
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1264

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  466     | expr '?' expr ':' expr .
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 466 (expr)


State 1265

  506 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1345
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1266

  455 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 455 (expr)


State 1267

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  503          | expr '.' "$f" '(' expr . ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1346


State 1268

  401 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 401 (expr_field)


State 1269

  319 expr_list: expr_list . ',' expr
  402 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 835
    ')'  shift, and go to state 1347


State 1270

  505 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1348
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1271

  453 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 453 (expr)


State 1272

  405 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 405 (expr_field)


State 1273

  531 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 531 (struct_variable_declaration_list)


State 1274

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1349

    $default  reduce using rule 516 (optional_constant)

    optional_constant  go to state 1350


State 1275

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1276
    "sealed"    shift, and go to state 1277

    $default  reduce using rule 513 (optional_override)

    optional_override  go to state 1351


State 1276

  514 optional_override: "override" .

    $default  reduce using rule 514 (optional_override)


State 1277

  515 optional_override: "sealed" .

    $default  reduce using rule 515 (optional_override)


State 1278

  523 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1167
    "private"  shift, and go to state 1168

    $default  reduce using rule 518 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1352


State 1279

  720 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1280

  727 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1281

  734 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1282

  250 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 250 (type_declaration_no_options_list)


State 1283

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 495
    expr_reader             go to state 496
    optional_expr_list      go to state 1353
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 802
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1284

  626 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 626 (variable_name_with_pos_list)


State 1285

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  554 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 554 (variable_declaration)


State 1286

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_single ')'

    '('  shift, and go to state 1354


State 1287

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_single ')'

    '('  shift, and go to state 1355


State 1288

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1289

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 269 (new_type_declaration)


State 1290

  317 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1356


State 1291

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1357
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1292

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 314 (expr_type_decl)


State 1293

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1358


State 1294

  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1359


State 1295

  801 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 892

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1360


State 1296

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1361
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1297

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1362
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1298

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1363
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1299

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1364


State 1300

  784 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 .

    $default  reduce using rule 784 (make_struct_decl)


State 1301

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_single ')'

    '('  shift, and go to state 1365


State 1302

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_single ')'

    '('  shift, and go to state 1366


State 1303

  463 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  464     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1367
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1368
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1304

  335 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1334
    "begin of code block"  shift, and go to state 284

    expression_block       go to state 1335
    block_or_simple_block  go to state 1369


State 1305

  501 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1306

  319 expr_list: expr_list . ',' expr
  502 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 835
    ')'  shift, and go to state 1370


State 1307

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1371
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1308

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1372

    '('       [reduce using rule 247 (optional_expr_list_in_braces)]
    $default  reduce using rule 247 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1373


State 1309

  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 1374
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1310

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1375
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1311

  391 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 391 (func_addr_name)


State 1312

  510 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1313

  395 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 394 ($@23)

    $@23  go to state 1376


State 1314

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1377


State 1315

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1119
    "elif"         shift, and go to state 1120
    "static_elif"  shift, and go to state 1121

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1122
    expression_else      go to state 1378


State 1316

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "return"                          shift, and go to state 1379
    "null"                            shift, and go to state 437
    "break"                           shift, and go to state 438
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "continue"                        shift, and go to state 448
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 1380
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder             go to state 495
    expr_reader                go to state 496
    expression_if_one_liner    go to state 1381
    expression_keyword         go to state 556
    name_in_namespace          go to state 512
    expr_new                   go to state 514
    expression_break           go to state 1382
    expression_continue        go to state 1383
    expression_return_no_pipe  go to state 1384
    expression_yield_no_pipe   go to state 1385
    expr_cast                  go to state 524
    expr_type_decl             go to state 525
    expr_type_info             go to state 526
    block_or_lambda            go to state 527
    expr_full_block            go to state 528
    expr_numeric_const         go to state 529
    expr_named_call            go to state 532
    expr_method_call           go to state 533
    func_addr_expr             go to state 534
    expr_field                 go to state 535
    expr_call                  go to state 536
    expr                       go to state 1386
    expr_mtag                  go to state 538
    basic_type_declaration     go to state 539
    make_decl                  go to state 540
    make_struct_decl           go to state 541
    make_tuple_call            go to state 542
    make_dim_decl              go to state 543
    make_table_decl            go to state 544
    array_comprehension        go to state 545


State 1317

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1318

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1387


State 1319

  768 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  769                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 817
    ":="  shift, and go to state 1388
    '='   shift, and go to state 819

    copy_or_move  go to state 1389


State 1320

  386 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 386 (expr_named_call)


State 1321

  387 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  766 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  767                   | make_struct_fields . ',' "name" ":=" expr
  770                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1132
    ']'  shift, and go to state 1390


State 1322

  770 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1391
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1323

  767 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1392
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1324

  766 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1393
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1325

  298 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 298 (tuple_expansion)


State 1326

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1394


State 1327

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 1395


State 1328

  328 capture_entry: "<-" "name" .

    $default  reduce using rule 328 (capture_entry)


State 1329

  329 capture_entry: ":=" "name" .

    $default  reduce using rule 329 (capture_entry)


State 1330

  327 capture_entry: '=' "name" .

    $default  reduce using rule 327 (capture_entry)


State 1331

  326 capture_entry: '&' "name" .

    $default  reduce using rule 326 (capture_entry)


State 1332

  331 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1248
    ":="  shift, and go to state 1249
    '='   shift, and go to state 1250
    '&'   shift, and go to state 1251

    capture_entry  go to state 1396


State 1333

  333 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1397


State 1334

  321 block_or_simple_block: "=>" . expr
  322                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1398
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1399
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1335

  320 block_or_simple_block: expression_block .

    $default  reduce using rule 320 (block_or_simple_block)


State 1336

  336 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 336 (expr_full_block)


State 1337

  469 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1400
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1338

  509 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1339

  475 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1401


State 1340

  507 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1341

  389 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 389 (expr_method_call)


State 1342

  504 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1343

  480 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1402


State 1344

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  508          | expr '?' "as" "$f" '(' expr . ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1403


State 1345

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  506          | expr '.' "?." "$f" '(' expr . ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1404


State 1346

  503 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1347

  402 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 402 (expr_field)


State 1348

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  505          | expr '.' '.' "$f" '(' expr . ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1405


State 1349

  517 optional_constant: "const" .

    $default  reduce using rule 517 (optional_constant)


State 1350

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 527 ($@35)

    $@35  go to state 1406


State 1351

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1349

    $default  reduce using rule 516 (optional_constant)

    optional_constant  go to state 1407


State 1352

  523 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 608
    "name"  shift, and go to state 609

    variable_declaration         go to state 1408
    variable_name_with_pos_list  go to state 611


State 1353

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1409


State 1354

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_single ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1410

    make_struct_fields  go to state 912
    make_struct_single  go to state 1411


State 1355

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_single ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1410

    make_struct_fields  go to state 912
    make_struct_single  go to state 1412


State 1356

  317 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1413


State 1357

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1414


State 1358

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1415
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1359

  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 677
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_map_tuple          go to state 678
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    expr_map_tuple_list     go to state 1416
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1360

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1417


State 1361

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 305 (expr_cast)


State 1362

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 308 (expr_cast)


State 1363

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 311 (expr_cast)


State 1364

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 1418
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1365

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_single ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1410

    make_struct_fields  go to state 912
    make_struct_single  go to state 1419


State 1366

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_single ')'

    "$f"    shift, and go to state 907
    "name"  shift, and go to state 1410

    make_struct_fields  go to state 912
    make_struct_single  go to state 1420


State 1367

  463 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 463 (expr)


State 1368

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  464     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1421


State 1369

  335 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 335 (expr_block)


State 1370

  502 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1371

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 253 (expression_keyword)


State 1372

  248 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 495
    expr_reader             go to state 496
    optional_expr_list      go to state 1422
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 802
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1373

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 256 (expression_keyword)


State 1374

  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1423

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1424


State 1375

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1423
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1425


State 1376

  395 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 899
    "name"  shift, and go to state 59

    name_in_namespace  go to state 902
    func_addr_name     go to state 1426


State 1377

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 397 ($@25)

    $@25  go to state 1427


State 1378

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1379

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1428
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 627
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1380

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1429
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1430
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1381

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1382

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1383

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1384

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1385

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1386

   67 expression_if_one_liner: expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 67 (expression_if_one_liner)


State 1387

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1431


State 1388

  769 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1432
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1389

  768 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1433
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1390

  387 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1434


State 1391

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1435


State 1392

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 767 (make_struct_fields)


State 1393

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  766 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 766 (make_struct_fields)


State 1394

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  680 type_declaration_no_options: type_declaration_no_options . dim_list
  681                            | type_declaration_no_options . '[' ']'
  689                            | type_declaration_no_options . '-' '[' ']'
  690                            | type_declaration_no_options . "explicit"
  691                            | type_declaration_no_options . "const"
  692                            | type_declaration_no_options . '-' "const"
  693                            | type_declaration_no_options . '&'
  694                            | type_declaration_no_options . '-' '&'
  695                            | type_declaration_no_options . '#'
  696                            | type_declaration_no_options . "implicit"
  697                            | type_declaration_no_options . '-' '#'
  698                            | type_declaration_no_options . "==" "const"
  699                            | type_declaration_no_options . "==" '&'
  700                            | type_declaration_no_options . '?'
  704                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 561
    "??"        shift, and go to state 403
    ":="        shift, and go to state 562
    '='         shift, and go to state 563
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1436
    dim_list               go to state 409


State 1395

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1437
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1396

  331 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 331 (capture_list)


State 1397

  333 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 333 (optional_capture_list)


State 1398

  322 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1438
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1399

  321 block_or_simple_block: "=>" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    ".."  error (nonassociative)

    $default  reduce using rule 321 (block_or_simple_block)


State 1400

  469 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 468 ($@29)

    $@29  go to state 1439


State 1401

  475 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 474 ($@31)

    $@31  go to state 1440


State 1402

  480 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  742 type_declaration: type_declaration . '|' type_declaration_no_options
  743                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1441


State 1403

  508 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1404

  506 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1405

  505 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1406

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1442


State 1407

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 529 ($@36)

    $@36  go to state 1443


State 1408

  523 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 523 (structure_variable_declaration)


State 1409

  688 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1410

  764 make_struct_fields: "name" . copy_or_move expr
  765                   | "name" . ":=" expr

    "<-"  shift, and go to state 817
    ":="  shift, and go to state 1127
    '='   shift, and go to state 819

    copy_or_move  go to state 1128


State 1411

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_single . ')'

    ')'  shift, and go to state 1444


State 1412

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_single . ')'

    ')'  shift, and go to state 1445


State 1413

  317 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1446
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1414

  316 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 316 (expr_type_info)


State 1415

  319 expr_list: expr_list . ',' expr
  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1447


State 1416

  801 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 892

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1448


State 1417

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 804 (make_table_decl)


State 1418

  319 expr_list: expr_list . ',' expr
  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 896

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1449


State 1419

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_single . ')'

    ')'  shift, and go to state 1450


State 1420

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_single . ')'

    ')'  shift, and go to state 1451


State 1421

  464 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 1422

  248 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1452


State 1423

  807 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1453


State 1424

  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1454


State 1425

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1455


State 1426

  395 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 395 (func_addr_expr)


State 1427

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 899
    "name"  shift, and go to state 59

    name_in_namespace  go to state 902
    func_addr_name     go to state 1456


State 1428

  280 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    expr_list               go to state 834
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 688
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1429

  285 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1457
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1430

  284 expression_yield_no_pipe: "yield" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 284 (expression_yield_no_pipe)


State 1431

  338 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 338 (expr_full_block_assumed_piped)


State 1432

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  769 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 769 (make_struct_fields)


State 1433

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 768 (make_struct_fields)


State 1434

  387 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 387 (expr_named_call)


State 1435

  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  771                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 817
    ":="  shift, and go to state 1458
    '='   shift, and go to state 819

    copy_or_move  go to state 1459


State 1436

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1460
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1437

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1461
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761


State 1438

  322 block_or_simple_block: "=>" "<-" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 322 (block_or_simple_block)


State 1439

  469 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 469 (expr)


State 1440

  475 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 475 (expr)


State 1441

  480 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 479 ($@33)

    $@33  go to state 1462


State 1442

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1463


State 1443

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1464


State 1444

  775 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_single ')' .

    $default  reduce using rule 775 (make_struct_decl)


State 1445

  778 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_single ')' .

    $default  reduce using rule 778 (make_struct_decl)


State 1446

  317 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761
    ')'    shift, and go to state 1465


State 1447

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1466


State 1448

  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1467


State 1449

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1468


State 1450

  790 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_single ')' .

    $default  reduce using rule 790 (make_tuple_call)


State 1451

  781 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_single ')' .

    $default  reduce using rule 781 (make_struct_decl)


State 1452

  248 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 248 (optional_expr_list_in_braces)


State 1453

  807 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1469
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1454

  811 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 811 (array_comprehension)


State 1455

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 810 (array_comprehension)


State 1456

  398 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 398 (func_addr_expr)


State 1457

  285 expression_yield_no_pipe: "yield" "<-" expr .
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 285 (expression_yield_no_pipe)


State 1458

  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1470
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1459

  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 424
    "class"                           shift, and go to state 425
    "true"                            shift, and go to state 430
    "false"                           shift, and go to state 431
    "new"                             shift, and go to state 432
    "typeinfo"                        shift, and go to state 433
    "type"                            shift, and go to state 434
    "array"                           shift, and go to state 435
    "null"                            shift, and go to state 437
    "table"                           shift, and go to state 440
    "deref"                           shift, and go to state 442
    "cast"                            shift, and go to state 445
    "upcast"                          shift, and go to state 446
    "addr"                            shift, and go to state 447
    "reinterpret"                     shift, and go to state 450
    "unsafe"                          shift, and go to state 554
    "fixed_array"                     shift, and go to state 454
    "default"                         shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    "begin of code block"             shift, and go to state 483
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494

    string_builder          go to state 495
    expr_reader             go to state 496
    expression_keyword      go to state 556
    name_in_namespace       go to state 512
    expr_new                go to state 514
    expr_cast               go to state 524
    expr_type_decl          go to state 525
    expr_type_info          go to state 526
    block_or_lambda         go to state 527
    expr_full_block         go to state 528
    expr_numeric_const      go to state 529
    expr_named_call         go to state 532
    expr_method_call        go to state 533
    func_addr_expr          go to state 534
    expr_field              go to state 535
    expr_call               go to state 536
    expr                    go to state 1471
    expr_mtag               go to state 538
    basic_type_declaration  go to state 539
    make_decl               go to state 540
    make_struct_decl        go to state 541
    make_tuple_call         go to state 542
    make_dim_decl           go to state 543
    make_table_decl         go to state 544
    array_comprehension     go to state 545


State 1460

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 709
    "as"                 shift, and go to state 710
    "<<"                 shift, and go to state 719
    ">>"                 shift, and go to state 720
    "++"                 shift, and go to state 721
    "--"                 shift, and go to state 722
    "<="                 shift, and go to state 723
    ">="                 shift, and go to state 726
    "=="                 shift, and go to state 727
    "!="                 shift, and go to state 728
    "->"                 shift, and go to state 729
    "??"                 shift, and go to state 731
    "?."                 shift, and go to state 732
    "?["                 shift, and go to state 733
    "<|"                 shift, and go to state 734
    "|>"                 shift, and go to state 735
    "<<<"                shift, and go to state 737
    ">>>"                shift, and go to state 738
    "&&"                 shift, and go to state 741
    "||"                 shift, and go to state 742
    "^^"                 shift, and go to state 743
    ".."                 shift, and go to state 747
    "end of expression"  shift, and go to state 1472
    '?'                  shift, and go to state 749
    '|'                  shift, and go to state 750
    '^'                  shift, and go to state 751
    '&'                  shift, and go to state 752
    '<'                  shift, and go to state 753
    '>'                  shift, and go to state 754
    '-'                  shift, and go to state 755
    '+'                  shift, and go to state 756
    '*'                  shift, and go to state 757
    '/'                  shift, and go to state 758
    '%'                  shift, and go to state 759
    '.'                  shift, and go to state 760
    '['                  shift, and go to state 761


State 1461

  300 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 300 (tuple_expansion_variable_declaration)


State 1462

  480 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 480 (expr)


State 1463

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 528 (struct_variable_declaration_list)


State 1464

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 284

    expression_block  go to state 1473


State 1465

  317 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 317 (expr_type_info)


State 1466

  795 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 795 (make_dim_decl)


State 1467

  805 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 805 (make_table_decl)


State 1468

  799 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')' .

    $default  reduce using rule 799 (make_dim_decl)


State 1469

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  807 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 807 (array_comprehension_where)


State 1470

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 771 (make_struct_fields)


State 1471

  388 expr_method_call: expr . "->" "name" '(' ')'
  389                 | expr . "->" "name" '(' expr_list ')'
  399 expr_field: expr . '.' "name"
  400           | expr . '.' '.' "name"
  401           | expr . '.' "name" '(' ')'
  402           | expr . '.' "name" '(' expr_list ')'
  405           | expr . '.' $@26 error $@27
  425 expr: expr . "<<" expr
  426     | expr . ">>" expr
  427     | expr . "<<<" expr
  428     | expr . ">>>" expr
  429     | expr . '+' expr
  430     | expr . '-' expr
  431     | expr . '*' expr
  432     | expr . '/' expr
  433     | expr . '%' expr
  434     | expr . '<' expr
  435     | expr . '>' expr
  436     | expr . "==" expr
  437     | expr . "!=" expr
  438     | expr . "<=" expr
  439     | expr . ">=" expr
  440     | expr . '&' expr
  441     | expr . '|' expr
  442     | expr . '^' expr
  443     | expr . "&&" expr
  444     | expr . "||" expr
  445     | expr . "^^" expr
  446     | expr . ".." expr
  449     | expr . "++"
  450     | expr . "--"
  452     | expr . '[' expr ']'
  453     | expr . '.' '[' expr ']'
  454     | expr . "?[" expr ']'
  455     | expr . '.' "?[" expr ']'
  456     | expr . "?." "name"
  457     | expr . '.' "?." "name"
  465     | expr . "??" expr
  466     | expr . '?' expr ':' expr
  469     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  470     | expr . "is" basic_type_declaration
  471     | expr . "is" "name"
  472     | expr . "as" "name"
  475     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  476     | expr . "as" basic_type_declaration
  477     | expr . '?' "as" "name"
  480     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  481     | expr . '?' "as" basic_type_declaration
  489     | expr . "<|" expr
  490     | expr . "|>" expr
  491     | expr . "|>" basic_type_declaration
  503 expr_mtag: expr . '.' "$f" '(' expr ')'
  504          | expr . "?." "$f" '(' expr ')'
  505          | expr . '.' '.' "$f" '(' expr ')'
  506          | expr . '.' "?." "$f" '(' expr ')'
  507          | expr . "as" "$f" '(' expr ')'
  508          | expr . '?' "as" "$f" '(' expr ')'
  509          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 709
    "as"   shift, and go to state 710
    "<<"   shift, and go to state 719
    ">>"   shift, and go to state 720
    "++"   shift, and go to state 721
    "--"   shift, and go to state 722
    "<="   shift, and go to state 723
    ">="   shift, and go to state 726
    "=="   shift, and go to state 727
    "!="   shift, and go to state 728
    "->"   shift, and go to state 729
    "??"   shift, and go to state 731
    "?."   shift, and go to state 732
    "?["   shift, and go to state 733
    "<|"   shift, and go to state 734
    "|>"   shift, and go to state 735
    "<<<"  shift, and go to state 737
    ">>>"  shift, and go to state 738
    "&&"   shift, and go to state 741
    "||"   shift, and go to state 742
    "^^"   shift, and go to state 743
    ".."   shift, and go to state 747
    '?'    shift, and go to state 749
    '|'    shift, and go to state 750
    '^'    shift, and go to state 751
    '&'    shift, and go to state 752
    '<'    shift, and go to state 753
    '>'    shift, and go to state 754
    '-'    shift, and go to state 755
    '+'    shift, and go to state 756
    '*'    shift, and go to state 757
    '/'    shift, and go to state 758
    '%'    shift, and go to state 759
    '.'    shift, and go to state 760
    '['    shift, and go to state 761

    $default  reduce using rule 770 (make_struct_fields)


State 1472

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 299 (tuple_expansion_variable_declaration)


State 1473

  530 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 530 (struct_variable_declaration_list)
