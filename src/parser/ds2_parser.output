Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 60 conflicts: 1 shift/reduce
State 376 conflicts: 1 shift/reduce
State 466 conflicts: 1 shift/reduce
State 471 conflicts: 1 shift/reduce
State 571 conflicts: 2 shift/reduce
State 608 conflicts: 1 shift/reduce
State 751 conflicts: 1 shift/reduce
State 761 conflicts: 1 shift/reduce
State 840 conflicts: 2 shift/reduce
State 906 conflicts: 1 shift/reduce
State 1296 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty
   65                          | "else" expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else
   72                        | expression_if_one_liner "if" expr expression_else_one_liner "end of expression"

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 expression_with_alias: "assume" "name" '=' expr

   78 annotation_argument_value: string_constant
   79                          | "name"
   80                          | "integer constant"
   81                          | "floating point constant"
   82                          | "true"
   83                          | "false"

   84 annotation_argument_value_list: annotation_argument_value
   85                               | annotation_argument_value_list ',' annotation_argument_value

   86 annotation_argument_name: "name"
   87                         | "type"
   88                         | "in"

   89 annotation_argument: annotation_argument_name '=' string_constant
   90                    | annotation_argument_name '=' "name"
   91                    | annotation_argument_name '=' "integer constant"
   92                    | annotation_argument_name '=' "floating point constant"
   93                    | annotation_argument_name '=' "true"
   94                    | annotation_argument_name '=' "false"
   95                    | annotation_argument_name
   96                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   97 annotation_argument_list: annotation_argument
   98                         | annotation_argument_list ',' annotation_argument

   99 annotation_declaration_name: name_in_namespace
  100                            | "require"
  101                            | "private"

  102 annotation_declaration_basic: annotation_declaration_name
  103                             | annotation_declaration_name '(' annotation_argument_list ')'

  104 annotation_declaration: annotation_declaration_basic
  105                       | '!' annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration
  109                       | '(' annotation_declaration ')'
  110                       | "|>" annotation_declaration

  111 annotation_list: annotation_declaration
  112                | annotation_list ',' annotation_declaration

  113 optional_annotation_list: %empty
  114                         | '[' annotation_list ']'

  115 optional_function_argument_list: %empty
  116                                | '(' ')'
  117                                | '(' function_argument_list ')'

  118 optional_function_type: %empty
  119                       | ':' type_declaration

  120 function_name: "name"
  121              | "operator" '!'
  122              | "operator" '~'
  123              | "operator" "+="
  124              | "operator" "-="
  125              | "operator" "*="
  126              | "operator" "/="
  127              | "operator" "%="
  128              | "operator" "&="
  129              | "operator" "|="
  130              | "operator" "^="
  131              | "operator" "&&="
  132              | "operator" "||="
  133              | "operator" "^^="
  134              | "operator" "&&"
  135              | "operator" "||"
  136              | "operator" "^^"
  137              | "operator" '+'
  138              | "operator" '-'
  139              | "operator" '*'
  140              | "operator" '/'
  141              | "operator" '%'
  142              | "operator" '<'
  143              | "operator" '>'
  144              | "operator" ".."
  145              | "operator" "=="
  146              | "operator" "!="
  147              | "operator" "<="
  148              | "operator" ">="
  149              | "operator" '&'
  150              | "operator" '|'
  151              | "operator" '^'
  152              | "++" "operator"
  153              | "--" "operator"
  154              | "operator" "++"
  155              | "operator" "--"
  156              | "operator" "<<"
  157              | "operator" ">>"
  158              | "operator" "<<="
  159              | "operator" ">>="
  160              | "operator" "<<<"
  161              | "operator" ">>>"
  162              | "operator" "<<<="
  163              | "operator" ">>>="
  164              | "operator" '[' ']'
  165              | "operator" "?[" ']'
  166              | "operator" '.'
  167              | "operator" "?."
  168              | "operator" '.' "name"
  169              | "operator" '.' "name" ":="
  170              | "operator" "?." "name"
  171              | "operator" ":="
  172              | "operator" "delete"
  173              | "operator" "??"
  174              | "operator" "is"
  175              | "operator" "as"
  176              | "operator" "is" "name"
  177              | "operator" "as" "name"
  178              | "operator" '?' "as"
  179              | "operator" '?' "as" "name"
  180              | "bool"
  181              | "string"
  182              | "int"
  183              | "int2"
  184              | "int3"
  185              | "int4"
  186              | "uint"
  187              | "uint2"
  188              | "uint3"
  189              | "uint4"
  190              | "float"
  191              | "float2"
  192              | "float3"
  193              | "float4"
  194              | "range"
  195              | "urange"
  196              | "range64"
  197              | "urange64"
  198              | "int64"
  199              | "uint64"
  200              | "double"
  201              | "int8"
  202              | "uint8"
  203              | "int16"
  204              | "uint16"

  205 global_function_declaration: optional_annotation_list "def" function_declaration

  206 optional_public_or_private_function: %empty
  207                                    | "private"
  208                                    | "public"

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type

  210 $@2: %empty

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  212 expression_block: "begin of code block" expressions "end of code block"
  213                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  214 expr_call_pipe: expr expr_full_block_assumed_piped
  215               | expression_keyword expr_full_block_assumed_piped

  216 expression_any: "end of expression"
  217               | expr_pipe
  218               | expr_keyword
  219               | expr_assign_pipe
  220               | expr_assign "end of expression"
  221               | expression_delete "end of expression"
  222               | expression_let
  223               | expression_while_loop
  224               | expression_unsafe
  225               | expression_with
  226               | expression_with_alias
  227               | expression_for_loop
  228               | expression_break "end of expression"
  229               | expression_continue "end of expression"
  230               | expression_return
  231               | expression_yield
  232               | expression_if_then_else
  233               | expression_try_catch
  234               | expression_label "end of expression"
  235               | expression_goto "end of expression"
  236               | "pass" "end of expression"

  237 expressions: %empty
  238            | expressions expression_any
  239            | expressions error

  240 expr_keyword: "keyword" expr expression_block

  241 optional_expr_list: %empty
  242                   | expr_list

  243 optional_expr_list_in_braces: %empty
  244                             | '(' optional_expr_list ')'

  245 type_declaration_no_options_list: type_declaration
  246                                 | type_declaration_no_options_list "end of expression" type_declaration

  247 $@3: %empty

  248 $@4: %empty

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr

  250 $@5: %empty

  251 $@6: %empty

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

  253 expr_pipe: expr_assign " <|" expr_block
  254          | "@ <|" expr_block
  255          | "@@ <|" expr_block
  256          | "$ <|" expr_block
  257          | expr_call_pipe

  258 name_in_namespace: "name"
  259                  | "name" "::" "name"
  260                  | "::" "name"

  261 expression_delete: "delete" expr
  262                  | "delete" "explicit" expr

  263 $@7: %empty

  264 $@8: %empty

  265 new_type_declaration: '<' $@7 type_declaration '>' $@8
  266                     | structure_type_declaration

  267 expr_new: "new" new_type_declaration
  268         | "new" new_type_declaration '(' ')'
  269         | "new" new_type_declaration '(' expr_list ')'
  270         | "new" new_type_declaration '(' make_struct_single ')'
  271         | "new" make_decl

  272 expression_break: "break"

  273 expression_continue: "continue"

  274 expression_return_no_pipe: "return"
  275                          | "return" expr_list
  276                          | "return" "<-" expr_list

  277 expression_return: expression_return_no_pipe "end of expression"
  278                  | "return" expr_pipe
  279                  | "return" "<-" expr_pipe

  280 expression_yield_no_pipe: "yield" expr
  281                         | "yield" "<-" expr

  282 expression_yield: expression_yield_no_pipe "end of expression"
  283                 | "yield" expr_pipe
  284                 | "yield" "<-" expr_pipe

  285 expression_try_catch: "try" expression_block "recover" expression_block

  286 kwd_let_var_or_nothing: "let"
  287                       | "var"
  288                       | %empty

  289 kwd_let: "let"
  290        | "var"

  291 optional_in_scope: "inscope"
  292                  | %empty

  293 tuple_expansion: "name"
  294                | tuple_expansion ',' "name"

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  297 expression_let: kwd_let optional_in_scope let_variable_declaration
  298               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  299 $@9: %empty

  300 $@10: %empty

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  302 $@11: %empty

  303 $@12: %empty

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  305 $@13: %empty

  306 $@14: %empty

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  308 $@15: %empty

  309 $@16: %empty

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  312               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  314 expr_list: expr
  315          | expr_list ',' expr

  316 block_or_simple_block: expression_block
  317                      | "=>" expr
  318                      | "=>" "<-" expr

  319 block_or_lambda: '$'
  320                | '@'
  321                | '@' '@'

  322 capture_entry: '&' "name"
  323              | '=' "name"
  324              | "<-" "name"
  325              | ":=" "name"

  326 capture_list: capture_entry
  327             | capture_list ',' capture_entry

  328 optional_capture_list: %empty
  329                      | '[' '[' capture_list ']' ']'

  330 expr_block: expression_block
  331           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  334 expr_numeric_const: "integer constant"
  335                   | "unsigned integer constant"
  336                   | "long integer constant"
  337                   | "unsigned long integer constant"
  338                   | "unsigned int8 constant"
  339                   | "floating point constant"
  340                   | "double constant"

  341 expr_assign: expr
  342            | expr '=' expr
  343            | expr "<-" expr
  344            | expr ":=" expr
  345            | expr "&=" expr
  346            | expr "|=" expr
  347            | expr "^=" expr
  348            | expr "&&=" expr
  349            | expr "||=" expr
  350            | expr "^^=" expr
  351            | expr "+=" expr
  352            | expr "-=" expr
  353            | expr "*=" expr
  354            | expr "/=" expr
  355            | expr "%=" expr
  356            | expr "<<=" expr
  357            | expr ">>=" expr
  358            | expr "<<<=" expr
  359            | expr ">>>=" expr

  360 expr_assign_pipe_right: "@ <|" expr_block
  361                       | "@@ <|" expr_block
  362                       | "$ <|" expr_block
  363                       | expr_call_pipe

  364 expr_assign_pipe: expr '=' expr_assign_pipe_right
  365                 | expr "<-" expr_assign_pipe_right
  366                 | expr "&=" expr_assign_pipe_right
  367                 | expr "|=" expr_assign_pipe_right
  368                 | expr "^=" expr_assign_pipe_right
  369                 | expr "&&=" expr_assign_pipe_right
  370                 | expr "||=" expr_assign_pipe_right
  371                 | expr "^^=" expr_assign_pipe_right
  372                 | expr "+=" expr_assign_pipe_right
  373                 | expr "-=" expr_assign_pipe_right
  374                 | expr "*=" expr_assign_pipe_right
  375                 | expr "/=" expr_assign_pipe_right
  376                 | expr "%=" expr_assign_pipe_right
  377                 | expr "<<=" expr_assign_pipe_right
  378                 | expr ">>=" expr_assign_pipe_right
  379                 | expr "<<<=" expr_assign_pipe_right
  380                 | expr ">>>=" expr_assign_pipe_right

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  382                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  383 expr_method_call: expr "->" "name" '(' ')'
  384                 | expr "->" "name" '(' expr_list ')'

  385 func_addr_name: name_in_namespace
  386               | "$i" '(' expr ')'

  387 func_addr_expr: '@' '@' func_addr_name

  388 $@17: %empty

  389 $@18: %empty

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  391 $@19: %empty

  392 $@20: %empty

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  394 expr_field: expr '.' "name"
  395           | expr '.' '.' "name"
  396           | expr '.' "name" '(' ')'
  397           | expr '.' "name" '(' expr_list ')'

  398 $@21: %empty

  399 $@22: %empty

  400 expr_field: expr '.' $@21 error $@22

  401 expr_call: name_in_namespace '(' ')'
  402          | name_in_namespace '(' make_struct_single ')'
  403          | name_in_namespace '(' expr_list ')'
  404          | basic_type_declaration '(' ')'
  405          | basic_type_declaration '(' expr_list ')'

  406 expr: "null"
  407     | name_in_namespace
  408     | expr_numeric_const
  409     | expr_reader
  410     | string_builder
  411     | make_decl
  412     | "true"
  413     | "false"
  414     | expr_field
  415     | expr_mtag
  416     | '!' expr
  417     | '~' expr
  418     | '+' expr
  419     | '-' expr
  420     | expr "<<" expr
  421     | expr ">>" expr
  422     | expr "<<<" expr
  423     | expr ">>>" expr
  424     | expr '+' expr
  425     | expr '-' expr
  426     | expr '*' expr
  427     | expr '/' expr
  428     | expr '%' expr
  429     | expr '<' expr
  430     | expr '>' expr
  431     | expr "==" expr
  432     | expr "!=" expr
  433     | expr "<=" expr
  434     | expr ">=" expr
  435     | expr '&' expr
  436     | expr '|' expr
  437     | expr '^' expr
  438     | expr "&&" expr
  439     | expr "||" expr
  440     | expr "^^" expr
  441     | expr ".." expr
  442     | "++" expr
  443     | "--" expr
  444     | expr "++"
  445     | expr "--"
  446     | '(' expr_list optional_comma ')'
  447     | expr '[' expr ']'
  448     | expr '.' '[' expr ']'
  449     | expr "?[" expr ']'
  450     | expr '.' "?[" expr ']'
  451     | expr "?." "name"
  452     | expr '.' "?." "name"
  453     | func_addr_expr
  454     | expr_call
  455     | '*' expr
  456     | "deref" '(' expr ')'
  457     | "addr" '(' expr ')'
  458     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  460     | expr "??" expr
  461     | expr '?' expr ':' expr

  462 $@23: %empty

  463 $@24: %empty

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr "is" basic_type_declaration
  466     | expr "is" "name"
  467     | expr "as" "name"

  468 $@25: %empty

  469 $@26: %empty

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr "as" basic_type_declaration
  472     | expr '?' "as" "name"

  473 $@27: %empty

  474 $@28: %empty

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' "as" basic_type_declaration
  477     | expr_type_info
  478     | expr_type_decl
  479     | expr_cast
  480     | expr_new
  481     | expr_method_call
  482     | expr_named_call
  483     | expr_full_block
  484     | expr "<|" expr
  485     | expr "|>" expr
  486     | expr "|>" basic_type_declaration
  487     | expression_keyword

  488 expr_mtag: "$$" '(' expr ')'
  489          | "$i" '(' expr ')'
  490          | "$v" '(' expr ')'
  491          | "$b" '(' expr ')'
  492          | "$a" '(' expr ')'
  493          | "..."
  494          | "$c" '(' expr ')' '(' ')'
  495          | "$c" '(' expr ')' '(' expr_list ')'
  496          | expr '.' "$f" '(' expr ')'
  497          | expr "?." "$f" '(' expr ')'
  498          | expr '.' '.' "$f" '(' expr ')'
  499          | expr '.' "?." "$f" '(' expr ')'
  500          | expr "as" "$f" '(' expr ')'
  501          | expr '?' "as" "$f" '(' expr ')'
  502          | expr "is" "$f" '(' expr ')'
  503          | '@' '@' "$c" '(' expr ')'

  504 optional_field_annotation: %empty
  505                          | '<' annotation_argument_list '>'

  506 optional_override: %empty
  507                  | "override"
  508                  | "sealed"

  509 optional_constant: %empty
  510                  | "const"

  511 optional_public_or_private_member_variable: %empty
  512                                           | "public"
  513                                           | "private"

  514 optional_static_member_variable: %empty
  515                                | "static"

  516 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  517 struct_variable_declaration_list: %empty

  518 $@29: %empty

  519 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  520 $@30: %empty

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  522 $@31: %empty

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

  524 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  525                              | "$a" '(' expr ')'

  526 function_argument_list: function_argument_declaration
  527                       | function_argument_list "end of expression" function_argument_declaration

  528 tuple_type: type_declaration
  529           | "name" ':' type_declaration

  530 tuple_type_list: tuple_type
  531                | tuple_type_list "end of expression" tuple_type

  532 tuple_alias_type_list: %empty
  533                      | tuple_alias_type_list "end of expression"
  534                      | tuple_alias_type_list tuple_type "end of expression"

  535 variant_type: "name" ':' type_declaration

  536 variant_type_list: variant_type
  537                  | variant_type_list "end of expression" variant_type

  538 variant_alias_type_list: %empty
  539                        | variant_alias_type_list "end of expression"
  540                        | variant_alias_type_list variant_type "end of expression"

  541 copy_or_move: '='
  542             | "<-"

  543 variable_declaration: variable_name_with_pos_list
  544                     | variable_name_with_pos_list '&'
  545                     | variable_name_with_pos_list ':' type_declaration
  546                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  547                     | variable_name_with_pos_list copy_or_move expr
  548                     | variable_name_with_pos_list copy_or_move expr_pipe

  549 copy_or_move_or_clone: '='
  550                      | "<-"
  551                      | ":="

  552 optional_ref: %empty
  553             | '&'

  554 let_variable_name_with_pos_list: "name"
  555                                | "$i" '(' expr ')'
  556                                | "name" "aka" "name"
  557                                | let_variable_name_with_pos_list ',' "name"
  558                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  560                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  562                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  564 global_variable_declaration_list: %empty

  565 $@32: %empty

  566 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  567 optional_shared: %empty
  568                | "shared"

  569 optional_public_or_private_variable: %empty
  570                                    | "private"
  571                                    | "public"

  572 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  573 $@33: %empty

  574 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

  575 enum_list: %empty
  576          | enum_list "end of expression"
  577          | enum_list "name" "end of expression"
  578          | enum_list "name" '=' expr "end of expression"

  579 optional_public_or_private_alias: %empty
  580                                 | "private"
  581                                 | "public"

  582 $@34: %empty

  583 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  584 alias_list: single_alias "end of expression"
  585           | alias_list single_alias "end of expression"

  586 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"
  587                  | "typedef" single_alias "end of expression"

  588 optional_public_or_private_enum: %empty
  589                                | "private"
  590                                | "public"

  591 enum_name: "name"

  592 $@35: %empty

  593 $@36: %empty

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"

  595 $@37: %empty

  596 $@38: %empty

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

  598 optional_structure_parent: %empty
  599                          | ':' name_in_namespace

  600 optional_sealed: %empty
  601                | "sealed"

  602 structure_name: optional_sealed "name" optional_structure_parent

  603 class_or_struct: "class"
  604                | "struct"

  605 optional_public_or_private_structure: %empty
  606                                     | "private"
  607                                     | "public"

  608 optional_struct_variable_declaration_list: %empty
  609                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  610 $@39: %empty

  611 $@40: %empty

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

  613 variable_name_with_pos_list: "name"
  614                            | "$i" '(' expr ')'
  615                            | "name" "aka" "name"
  616                            | variable_name_with_pos_list ',' "name"
  617                            | variable_name_with_pos_list ',' "name" "aka" "name"

  618 basic_type_declaration: "bool"
  619                       | "string"
  620                       | "int"
  621                       | "int8"
  622                       | "int16"
  623                       | "int64"
  624                       | "int2"
  625                       | "int3"
  626                       | "int4"
  627                       | "uint"
  628                       | "uint8"
  629                       | "uint16"
  630                       | "uint64"
  631                       | "uint2"
  632                       | "uint3"
  633                       | "uint4"
  634                       | "float"
  635                       | "float2"
  636                       | "float3"
  637                       | "float4"
  638                       | "void"
  639                       | "range"
  640                       | "urange"
  641                       | "range64"
  642                       | "urange64"
  643                       | "double"
  644                       | "bitfield"

  645 enum_basic_type_declaration: "int"
  646                            | "int8"
  647                            | "int16"
  648                            | "uint"
  649                            | "uint8"
  650                            | "uint16"

  651 structure_type_declaration: name_in_namespace

  652 auto_type_declaration: "auto"
  653                      | "auto" '(' "name" ')'
  654                      | "$t" '(' expr ')'

  655 bitfield_bits: "name"
  656              | bitfield_bits "end of expression" "name"

  657 bitfield_alias_bits: %empty
  658                    | bitfield_alias_bits "end of expression"
  659                    | bitfield_alias_bits "name" "end of expression"

  660 $@41: %empty

  661 $@42: %empty

  662 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' $@42

  663 table_type_pair: type_declaration
  664                | type_declaration "end of expression" type_declaration

  665 dim_list: '[' expr ']'
  666         | dim_list '[' expr ']'

  667 type_declaration_no_options: basic_type_declaration
  668                            | auto_type_declaration
  669                            | bitfield_type_declaration
  670                            | structure_type_declaration
  671                            | type_declaration_no_options dim_list
  672                            | type_declaration_no_options '[' ']'

  673 $@43: %empty

  674 $@44: %empty

  675 type_declaration_no_options: "type" '<' $@43 type_declaration '>' $@44
  676                            | "typedecl" '(' expr ')'
  677                            | '$' name_in_namespace '(' optional_expr_list ')'

  678 $@45: %empty

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  680                            | type_declaration_no_options '-' '[' ']'
  681                            | type_declaration_no_options "explicit"
  682                            | type_declaration_no_options "const"
  683                            | type_declaration_no_options '-' "const"
  684                            | type_declaration_no_options '&'
  685                            | type_declaration_no_options '-' '&'
  686                            | type_declaration_no_options '#'
  687                            | type_declaration_no_options "implicit"
  688                            | type_declaration_no_options '-' '#'
  689                            | type_declaration_no_options "==" "const"
  690                            | type_declaration_no_options "==" '&'
  691                            | type_declaration_no_options '?'

  692 $@46: %empty

  693 $@47: %empty

  694 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' $@47
  695                            | type_declaration_no_options "??"

  696 $@48: %empty

  697 $@49: %empty

  698 type_declaration_no_options: "array" '<' $@48 type_declaration '>' $@49

  699 $@50: %empty

  700 $@51: %empty

  701 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' $@51

  702 $@52: %empty

  703 $@53: %empty

  704 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' $@53
  705                            | "block"

  706 $@54: %empty

  707 $@55: %empty

  708 type_declaration_no_options: "block" '<' $@54 type_declaration '>' $@55

  709 $@56: %empty

  710 $@57: %empty

  711 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' $@57
  712                            | "function"

  713 $@58: %empty

  714 $@59: %empty

  715 type_declaration_no_options: "function" '<' $@58 type_declaration '>' $@59

  716 $@60: %empty

  717 $@61: %empty

  718 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  719                            | "lambda"

  720 $@62: %empty

  721 $@63: %empty

  722 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' $@63

  723 $@64: %empty

  724 $@65: %empty

  725 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' $@65

  726 $@66: %empty

  727 $@67: %empty

  728 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' $@67

  729 $@68: %empty

  730 $@69: %empty

  731 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' $@69

  732 type_declaration: type_declaration_no_options
  733                 | type_declaration '|' type_declaration_no_options
  734                 | type_declaration '|' '#'

  735 $@70: %empty

  736 $@71: %empty

  737 $@72: %empty

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

  739 $@73: %empty

  740 $@74: %empty

  741 $@75: %empty

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

  743 $@76: %empty

  744 $@77: %empty

  745 $@78: %empty

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

  747 make_decl: make_struct_decl
  748          | make_dim_decl
  749          | make_table_decl
  750          | array_comprehension
  751          | make_tuple_call

  752 make_struct_fields: "name" copy_or_move expr
  753                   | "name" ":=" expr
  754                   | make_struct_fields ',' "name" copy_or_move expr
  755                   | make_struct_fields ',' "name" ":=" expr
  756                   | "$f" '(' expr ')' copy_or_move expr
  757                   | "$f" '(' expr ')' ":=" expr
  758                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  760 make_struct_single: make_struct_fields

  761 $@79: %empty

  762 $@80: %empty

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

  764 $@81: %empty

  765 $@82: %empty

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

  767 $@83: %empty

  768 $@84: %empty

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

  770 $@85: %empty

  771 $@86: %empty

  772 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' $@86

  773 make_map_tuple: expr "=>" expr
  774               | expr

  775 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  776 $@87: %empty

  777 $@88: %empty

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

  779 make_dim_decl: '[' expr_list optional_comma ']'
  780              | "array" '(' expr_list optional_comma ')'

  781 $@89: %empty

  782 $@90: %empty

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'
  784              | "fixed_array" '(' expr_list optional_comma ')'

  785 $@91: %empty

  786 $@92: %empty

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

  788 expr_map_tuple_list: make_map_tuple
  789                    | expr_map_tuple_list ',' make_map_tuple

  790 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  791                | "table" '(' expr_map_tuple_list optional_comma ')'
  792                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  793                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  794 array_comprehension_where: %empty
  795                          | "end of expression" "where" expr

  796 optional_comma: %empty
  797               | ','

  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  799                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105 121 416
    '#' (35) 686 688 734
    '$' (36) 20 319 677 679
    '%' (37) 35 42 141 428
    '&' (38) 149 322 435 544 553 684 685 690
    '(' (40) 96 103 109 116 117 244 268 269 270 295 296 311 312 313 381 382 383 384 386 396 397 401 402 403 404 405 446 456 457 458 459 488 489 490 491 492 494 495 496 497 498 499 500 501 502 503 525 555 614 653 654 676 677 679 756 757 758 759 763 766 769 775 778 780 783 784 787 791 792 793
    ')' (41) 96 103 109 116 117 244 268 269 270 295 296 311 312 313 381 382 383 384 386 396 397 401 402 403 404 405 446 456 457 458 459 488 489 490 491 492 494 495 496 497 498 499 500 501 502 503 525 555 614 653 654 676 677 679 756 757 758 759 763 766 769 775 778 780 783 784 787 791 792 793
    '*' (42) 139 426 455
    '+' (43) 137 418 424
    ',' (44) 51 85 98 112 294 315 327 382 557 558 616 617 754 755 758 759 789 797
    '-' (45) 138 419 425 680 683 685 688
    '.' (46) 43 166 168 169 394 395 396 397 400 448 450 452 496 498 499
    '/' (47) 44 140 427
    ':' (58) 53 54 119 295 461 529 535 545 546 559 560 561 597 599
    "end of expression" (59) 15 16 72 216 220 221 228 229 234 235 236 246 277 282 295 296 313 519 521 527 531 533 534 537 539 540 559 560 562 576 577 578 584 585 587 656 658 659 664 793 795 798 799
    '<' (60) 142 249 252 265 301 304 307 310 312 313 390 393 429 458 459 464 470 475 505 662 675 679 694 698 701 704 708 711 715 718 722 725 728 731 763 766 769 772 778 783 787 792 793
    '=' (61) 77 89 90 91 92 93 94 96 323 342 364 541 549 578 583
    '>' (62) 143 249 252 265 301 304 307 310 312 313 390 393 430 458 459 464 470 475 505 662 675 679 694 698 701 704 708 711 715 718 722 725 728 731 763 766 769 772 778 783 787 792 793
    '?' (63) 178 179 461 472 475 476 501 691
    '@' (64) 320 321 387 390 393 503
    '[' (91) 114 164 329 381 382 447 448 665 666 672 680 779 798
    ']' (93) 114 164 165 329 381 382 447 448 449 450 665 666 672 680 779 798
    '^' (94) 151 437
    "begin of code block" (123) 212 213 572 586 594 597 609 738 742 746 790 799
    '|' (124) 150 436 733 734
    "end of code block" (125) 212 213 572 586 594 597 609 738 742 746 790 799
    '~' (126) 122 417
    error (256) 239 400
    "lexer error" (258)
    "struct" (259) 604 763
    "class" (260) 603 766
    "let" (261) 286 289
    "def" (262) 205 521 523
    "while" (263) 75
    "if" (264) 62 72
    "static_if" (265) 63
    "else" (266) 60 65
    "for" (267) 73 798 799
    "recover" (268) 285
    "true" (269) 82 93 412
    "false" (270) 83 94 413
    "new" (271) 267 268 269 270 271
    "typeinfo" (272) 311 312 313
    "type" (273) 87 310 464 470 475 675
    "in" (274) 73 88 798 799
    "is" (275) 174 176 464 465 466 502
    "as" (276) 46 175 177 178 179 467 470 471 472 475 476 500 501
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 698 780 783
    "return" (280) 274 275 276 278 279
    "null" (281) 406
    "break" (282) 272
    "try" (283) 285
    "options" (284) 36
    "table" (285) 701 791 792 793
    "expect" (286) 49
    "const" (287) 510 682 683 689
    "require" (288) 37 100
    "operator" (289) 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    "enum" (290) 594 597
    "finally" (291) 213
    "delete" (292) 172 261 262
    "deref" (293) 456
    "typedef" (294) 586 587
    "typedecl" (295) 676
    "with" (296) 76
    "aka" (297) 556 558 615 617
    "assume" (298) 77
    "cast" (299) 301
    "override" (300) 507
    "abstract" (301) 521
    "upcast" (302) 304
    "iterator" (303) 704
    "var" (304) 287 290
    "addr" (305) 457
    "continue" (306) 273
    "where" (307) 795
    "pass" (308) 236
    "reinterpret" (309) 307
    "module" (310) 22
    "public" (311) 18 48 208 512 571 581 590 607
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 687
    "explicit" (315) 262 681
    "shared" (316) 568
    "private" (317) 19 101 207 513 570 580 589 606
    "smart_ptr" (318) 694
    "unsafe" (319) 74
    "inscope" (320) 291
    "static" (321) 515
    "fixed_array" (322) 784 787
    "default" (323) 772
    "bool" (324) 180 618
    "void" (325) 638
    "string" (326) 181 619
    "auto" (327) 652 653
    "int" (328) 182 620 645
    "int2" (329) 183 624
    "int3" (330) 184 625
    "int4" (331) 185 626
    "uint" (332) 186 627 648
    "bitfield" (333) 644 662 746
    "uint2" (334) 187 631
    "uint3" (335) 188 632
    "uint4" (336) 189 633
    "float" (337) 190 634
    "float2" (338) 191 635
    "float3" (339) 192 636
    "float4" (340) 193 637
    "range" (341) 194 639
    "urange" (342) 195 640
    "range64" (343) 196 641
    "urange64" (344) 197 642
    "block" (345) 705 708 711
    "int64" (346) 198 623
    "uint64" (347) 199 630
    "double" (348) 200 643
    "function" (349) 712 715 718
    "lambda" (350) 719 722 725
    "int8" (351) 201 621 646
    "uint8" (352) 202 628 649
    "int16" (353) 203 622 647
    "uint16" (354) 204 629 650
    "tuple" (355) 728 738 775 778
    "variant" (356) 731 742 769
    "generator" (357) 458 459
    "yield" (358) 280 281 283 284
    "sealed" (359) 508 601
    "+=" (360) 123 351 372
    "-=" (361) 124 352 373
    "/=" (362) 126 354 375
    "*=" (363) 125 353 374
    "%=" (364) 127 355 376
    "&=" (365) 128 345 366
    "|=" (366) 129 346 367
    "^=" (367) 130 347 368
    "<<" (368) 156 420
    ">>" (369) 157 421
    "++" (370) 152 154 442 444
    "--" (371) 153 155 443 445
    "<=" (372) 147 433
    "<<=" (373) 158 356 377
    ">>=" (374) 159 357 378
    ">=" (375) 148 434
    "==" (376) 145 431 689 690
    "!=" (377) 146 432
    "->" (378) 383 384
    "<-" (379) 276 279 281 284 318 324 343 365 542 550
    "??" (380) 173 460 695
    "?." (381) 167 170 451 452 497 499
    "?[" (382) 165 449 450
    "<|" (383) 484
    " <|" (384) 253
    "$ <|" (385) 256 362
    "@ <|" (386) 254 360
    "@@ <|" (387) 255 361
    "|>" (388) 110 485 486
    ":=" (389) 169 171 325 344 551 753 755 757 759
    "<<<" (390) 160 422
    ">>>" (391) 161 423
    "<<<=" (392) 162 358 379
    ">>>=" (393) 163 359 380
    "=>" (394) 317 318 773
    "::" (395) 259 260
    "&&" (396) 106 134 438
    "||" (397) 107 135 439
    "^^" (398) 108 136 440
    "&&=" (399) 131 348 369
    "||=" (400) 132 349 370
    "^^=" (401) 133 350 371
    ".." (402) 144 441
    "$$" (403) 488
    "$i" (404) 386 489 555 614
    "$v" (405) 490
    "$b" (406) 491
    "$a" (407) 492 525
    "$t" (408) 654
    "$c" (409) 494 495 503
    "$f" (410) 496 497 498 499 500 501 502 756 757 758 759
    "..." (411) 493
    "integer constant" <i> (412) 52 53 54 55 80 91 334
    "long integer constant" <i64> (413) 336
    "unsigned integer constant" <ui> (414) 335
    "unsigned long integer constant" <ui64> (415) 337
    "unsigned int8 constant" <ui> (416) 338
    "floating point constant" <fd> (417) 81 92 339
    "double constant" <d> (418) 340
    "name" <s> (419) 21 38 46 77 79 86 90 120 168 169 170 176 177 179 258 259 260 293 294 312 313 322 323 324 325 383 384 394 395 396 397 451 452 466 467 472 529 535 554 556 557 558 577 578 583 591 602 613 615 616 617 653 655 656 659 738 742 746 752 753 754 755
    "keyword" <s> (420) 39 240 249
    "type function" <s> (421) 40 252
    "start of the string" (422) 27 31
    STRING_CHARACTER <ch> (423) 23 25 32 33
    STRING_CHARACTER_ESC (424) 24 26
    "end of the string" (425) 27 31
    "{" (426) 30
    "}" (427) 30
    "end of failed eader macro" (428)
    ";}}" (429)
    ";}]" (430)
    ";]]" (431)
    ",]]" (432)
    ",}]" (433)
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (215)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (216)
        on left: 17 18 19
        on right: 22
    module_name <s> (217)
        on left: 20 21
        on right: 22
    module_declaration (218)
        on left: 22
        on right: 2
    character_sequence <s> (219)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (220)
        on left: 27
        on right: 78 89
    string_builder_body <pExpression> (221)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (222)
        on left: 31
        on right: 410
    reader_character_sequence (223)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (224)
        on left: 35
        on right: 16 409
    $@1 (225)
        on left: 34
        on right: 35
    options_declaration (226)
        on left: 36
        on right: 9
    require_declaration (227)
        on left: 37
        on right: 8
    keyword_or_name <s> (228)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (229)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (230)
        on left: 45 46
        on right: 37
    is_public_module <b> (231)
        on left: 47 48
        on right: 45 46
    expect_declaration (232)
        on left: 49
        on right: 7
    expect_list (233)
        on left: 50 51
        on right: 49 51
    expect_error (234)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (235)
        on left: 54
        on right: 234
    expression_goto <pExpression> (236)
        on left: 55 56
        on right: 235
    elif_or_static_elif <b> (237)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (238)
        on left: 59 60 61
        on right: 61 71
    if_or_static_if <b> (239)
        on left: 62 63
        on right: 71
    expression_else_one_liner <pExpression> (240)
        on left: 64 65
        on right: 72
    expression_if_one_liner <pExpression> (241)
        on left: 66 67 68 69 70
        on right: 65 72
    expression_if_then_else <pExpression> (242)
        on left: 71 72
        on right: 232
    expression_for_loop <pExpression> (243)
        on left: 73
        on right: 227
    expression_unsafe <pExpression> (244)
        on left: 74
        on right: 224
    expression_while_loop <pExpression> (245)
        on left: 75
        on right: 223
    expression_with <pExpression> (246)
        on left: 76
        on right: 225
    expression_with_alias <pExpression> (247)
        on left: 77
        on right: 226
    annotation_argument_value <aa> (248)
        on left: 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_value_list <aaList> (249)
        on left: 84 85
        on right: 85 96
    annotation_argument_name <s> (250)
        on left: 86 87 88
        on right: 89 90 91 92 93 94 95 96
    annotation_argument <aa> (251)
        on left: 89 90 91 92 93 94 95 96
        on right: 97 98
    annotation_argument_list <aaList> (252)
        on left: 97 98
        on right: 36 98 103 505
    annotation_declaration_name <s> (253)
        on left: 99 100 101
        on right: 102 103
    annotation_declaration_basic <fa> (254)
        on left: 102 103
        on right: 104
    annotation_declaration <fa> (255)
        on left: 104 105 106 107 108 109 110
        on right: 105 106 107 108 109 110 111 112
    annotation_list <faList> (256)
        on left: 111 112
        on right: 112 114
    optional_annotation_list <faList> (257)
        on left: 113 114
        on right: 205 331 332 333 521 523 594 597 612
    optional_function_argument_list <pVarDeclList> (258)
        on left: 115 116 117
        on right: 209 331 332 333 393 711 718 725
    optional_function_type <pTypeDecl> (259)
        on left: 118 119
        on right: 209 331 332 333 393 711 718 725
    function_name <s> (260)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
        on right: 209
    global_function_declaration (261)
        on left: 205
        on right: 6
    optional_public_or_private_function <b> (262)
        on left: 206 207 208
        on right: 211
    function_declaration_header <pFuncDecl> (263)
        on left: 209
        on right: 211 521 523
    function_declaration <pFuncDecl> (264)
        on left: 211
        on right: 205
    $@2 (265)
        on left: 210
        on right: 211
    expression_block <pExpression> (266)
        on left: 212 213
        on right: 60 61 71 73 74 75 76 211 240 285 316 330 333 523
    expr_call_pipe <pExpression> (267)
        on left: 214 215
        on right: 257 363
    expression_any <pExpression> (268)
        on left: 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236
        on right: 238
    expressions <pExpression> (269)
        on left: 237 238 239
        on right: 212 213 238 239
    expr_keyword <pExpression> (270)
        on left: 240
        on right: 218
    optional_expr_list <pExpression> (271)
        on left: 241 242
        on right: 244 677 679
    optional_expr_list_in_braces <pExpression> (272)
        on left: 243 244
        on right: 252
    type_declaration_no_options_list <pTypeDeclList> (273)
        on left: 245 246
        on right: 246 249 252 679
    expression_keyword <pExpression> (274)
        on left: 249 252
        on right: 215 487
    $@3 (275)
        on left: 247
        on right: 249
    $@4 (276)
        on left: 248
        on right: 249
    $@5 (277)
        on left: 250
        on right: 252
    $@6 (278)
        on left: 251
        on right: 252
    expr_pipe <pExpression> (279)
        on left: 253 254 255 256 257
        on right: 217 278 279 283 284 548 561 563
    name_in_namespace <s> (280)
        on left: 258 259 260
        on right: 35 99 311 312 313 381 382 385 401 402 403 407 599 651 677 679
    expression_delete <pExpression> (281)
        on left: 261 262
        on right: 221
    new_type_declaration <pTypeDecl> (282)
        on left: 265 266
        on right: 267 268 269 270
    $@7 (283)
        on left: 263
        on right: 265
    $@8 (284)
        on left: 264
        on right: 265
    expr_new <pExpression> (285)
        on left: 267 268 269 270 271
        on right: 480
    expression_break <pExpression> (286)
        on left: 272
        on right: 69 228
    expression_continue <pExpression> (287)
        on left: 273
        on right: 70 229
    expression_return_no_pipe <pExpression> (288)
        on left: 274 275 276
        on right: 67 277
    expression_return <pExpression> (289)
        on left: 277 278 279
        on right: 230
    expression_yield_no_pipe <pExpression> (290)
        on left: 280 281
        on right: 68 282
    expression_yield <pExpression> (291)
        on left: 282 283 284
        on right: 231
    expression_try_catch <pExpression> (292)
        on left: 285
        on right: 233
    kwd_let_var_or_nothing <b> (293)
        on left: 286 287 288
        on right: 524
    kwd_let <b> (294)
        on left: 289 290
        on right: 297 298 572 574
    optional_in_scope <b> (295)
        on left: 291 292
        on right: 297 298
    tuple_expansion <pNameList> (296)
        on left: 293 294
        on right: 294 295 296
    tuple_expansion_variable_declaration <pVarDecl> (297)
        on left: 295 296
        on right: 298
    expression_let <pExpression> (298)
        on left: 297 298
        on right: 222
    expr_cast <pExpression> (299)
        on left: 301 304 307
        on right: 479
    $@9 (300)
        on left: 299
        on right: 301
    $@10 (301)
        on left: 300
        on right: 301
    $@11 (302)
        on left: 302
        on right: 304
    $@12 (303)
        on left: 303
        on right: 304
    $@13 (304)
        on left: 305
        on right: 307
    $@14 (305)
        on left: 306
        on right: 307
    expr_type_decl <pExpression> (306)
        on left: 310
        on right: 478
    $@15 (307)
        on left: 308
        on right: 310
    $@16 (308)
        on left: 309
        on right: 310
    expr_type_info <pExpression> (309)
        on left: 311 312 313
        on right: 477
    expr_list <pExpression> (310)
        on left: 314 315
        on right: 73 242 269 275 276 315 382 384 397 403 405 446 495 775 779 780 783 784 787 798 799
    block_or_simple_block <pExpression> (311)
        on left: 316 317 318
        on right: 331 332
    block_or_lambda <i> (312)
        on left: 319 320 321
        on right: 331 332 333
    capture_entry <pCapt> (313)
        on left: 322 323 324 325
        on right: 326 327
    capture_list <pCaptList> (314)
        on left: 326 327
        on right: 327 329
    optional_capture_list <pCaptList> (315)
        on left: 328 329
        on right: 331 332 333 458 459
    expr_block <pExpression> (316)
        on left: 330 331
        on right: 253 254 255 256 360 361 362
    expr_full_block <pExpression> (317)
        on left: 332
        on right: 483
    expr_full_block_assumed_piped <pExpression> (318)
        on left: 333
        on right: 214 215
    expr_numeric_const <pExpression> (319)
        on left: 334 335 336 337 338 339 340
        on right: 408
    expr_assign <pExpression> (320)
        on left: 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
        on right: 220 253
    expr_assign_pipe_right <pExpression> (321)
        on left: 360 361 362 363
        on right: 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380
    expr_assign_pipe <pExpression> (322)
        on left: 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380
        on right: 219
    expr_named_call <pExpression> (323)
        on left: 381 382
        on right: 482
    expr_method_call <pExpression> (324)
        on left: 383 384
        on right: 481
    func_addr_name <pExpression> (325)
        on left: 385 386
        on right: 387 390 393
    func_addr_expr <pExpression> (326)
        on left: 387 390 393
        on right: 453
    $@17 (327)
        on left: 388
        on right: 390
    $@18 (328)
        on left: 389
        on right: 390
    $@19 (329)
        on left: 391
        on right: 393
    $@20 (330)
        on left: 392
        on right: 393
    expr_field <pExpression> (331)
        on left: 394 395 396 397 400
        on right: 414
    $@21 (332)
        on left: 398
        on right: 400
    $@22 (333)
        on left: 399
        on right: 400
    expr_call <pExpression> (334)
        on left: 401 402 403 404 405
        on right: 454
    expr <pExpression> (335)
        on left: 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 464 465 466 467 470 471 472 475 476 477 478 479 480 481 482 483 484 485 486 487
        on right
    $@23 (336)
        on left: 462
        on right: 464
    $@24 (337)
        on left: 463
        on right: 464
    $@25 (338)
        on left: 468
        on right: 470
    $@26 (339)
        on left: 469
        on right: 470
    $@27 (340)
        on left: 473
        on right: 475
    $@28 (341)
        on left: 474
        on right: 475
    expr_mtag <pExpression> (342)
        on left: 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503
        on right: 415
    optional_field_annotation <aaList> (343)
        on left: 504 505
        on right: 516 524 566 574
    optional_override <i> (344)
        on left: 506 507 508
        on right: 516 523
    optional_constant <b> (345)
        on left: 509 510
        on right: 521 523
    optional_public_or_private_member_variable <b> (346)
        on left: 511 512 513
        on right: 516 521 523
    optional_static_member_variable <b> (347)
        on left: 514 515
        on right: 516 523
    structure_variable_declaration <pVarDecl> (348)
        on left: 516
        on right: 519
    struct_variable_declaration_list <pVarDeclList> (349)
        on left: 517 519 521 523
        on right: 519 521 523 609
    $@29 (350)
        on left: 518
        on right: 519
    $@30 (351)
        on left: 520
        on right: 521
    $@31 (352)
        on left: 522
        on right: 523
    function_argument_declaration <pVarDecl> (353)
        on left: 524 525
        on right: 526 527
    function_argument_list <pVarDeclList> (354)
        on left: 526 527
        on right: 117 527
    tuple_type <pVarDecl> (355)
        on left: 528 529
        on right: 530 531 534
    tuple_type_list <pVarDeclList> (356)
        on left: 530 531
        on right: 531 728
    tuple_alias_type_list <pVarDeclList> (357)
        on left: 532 533 534
        on right: 533 534 738
    variant_type <pVarDecl> (358)
        on left: 535
        on right: 536 537 540
    variant_type_list <pVarDeclList> (359)
        on left: 536 537
        on right: 537 731
    variant_alias_type_list <pVarDeclList> (360)
        on left: 538 539 540
        on right: 539 540 742
    copy_or_move <b> (361)
        on left: 541 542
        on right: 546 547 548 752 754 756 758
    variable_declaration <pVarDecl> (362)
        on left: 543 544 545 546 547 548
        on right: 516 524
    copy_or_move_or_clone <i> (363)
        on left: 549 550 551
        on right: 295 296 560 561 562 563
    optional_ref <b> (364)
        on left: 552 553
        on right: 296 562 563
    let_variable_name_with_pos_list <pNameWithPosList> (365)
        on left: 554 555 556 557 558
        on right: 557 558 559 560 561 562 563
    let_variable_declaration <pVarDecl> (366)
        on left: 559 560 561 562 563
        on right: 297 566 574
    global_variable_declaration_list <pVarDeclList> (367)
        on left: 564 566
        on right: 566 572
    $@32 (368)
        on left: 565
        on right: 566
    optional_shared <b> (369)
        on left: 567 568
        on right: 22 572 574
    optional_public_or_private_variable <b> (370)
        on left: 569 570 571
        on right: 572 574
    global_let (371)
        on left: 572 574
        on right: 5
    $@33 (372)
        on left: 573
        on right: 574
    enum_list <pEnum> (373)
        on left: 575 576 577 578
        on right: 576 577 578 594 597
    optional_public_or_private_alias <b> (374)
        on left: 579 580 581
        on right: 583 738 742 746
    single_alias (375)
        on left: 583
        on right: 584 585 587
    $@34 (376)
        on left: 582
        on right: 583
    alias_list (377)
        on left: 584 585
        on right: 585 586
    alias_declaration (378)
        on left: 586 587
        on right: 10
    optional_public_or_private_enum <b> (379)
        on left: 588 589 590
        on right: 594 597
    enum_name <pEnum> (380)
        on left: 591
        on right: 594 597
    enum_declaration (381)
        on left: 594 597
        on right: 4
    $@35 (382)
        on left: 592
        on right: 594
    $@36 (383)
        on left: 593
        on right: 594
    $@37 (384)
        on left: 595
        on right: 597
    $@38 (385)
        on left: 596
        on right: 597
    optional_structure_parent <s> (386)
        on left: 598 599
        on right: 602
    optional_sealed <b> (387)
        on left: 600 601
        on right: 602
    structure_name <pStructure> (388)
        on left: 602
        on right: 612
    class_or_struct <b> (389)
        on left: 603 604
        on right: 612
    optional_public_or_private_structure <b> (390)
        on left: 605 606 607
        on right: 612
    optional_struct_variable_declaration_list <pVarDeclList> (391)
        on left: 608 609
        on right: 612
    structure_declaration (392)
        on left: 612
        on right: 3
    $@39 (393)
        on left: 610
        on right: 612
    $@40 (394)
        on left: 611
        on right: 612
    variable_name_with_pos_list <pNameWithPosList> (395)
        on left: 613 614 615 616 617
        on right: 73 543 544 545 546 547 548 616 617 798 799
    basic_type_declaration <type> (396)
        on left: 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644
        on right: 404 405 465 471 476 486 667
    enum_basic_type_declaration <type> (397)
        on left: 645 646 647 648 649 650
        on right: 597
    structure_type_declaration <pTypeDecl> (398)
        on left: 651
        on right: 266 670
    auto_type_declaration <pTypeDecl> (399)
        on left: 652 653 654
        on right: 668
    bitfield_bits <pNameList> (400)
        on left: 655 656
        on right: 656 662
    bitfield_alias_bits <pNameList> (401)
        on left: 657 658 659
        on right: 658 659 746
    bitfield_type_declaration <pTypeDecl> (402)
        on left: 662
        on right: 669
    $@41 (403)
        on left: 660
        on right: 662
    $@42 (404)
        on left: 661
        on right: 662
    table_type_pair <aTypePair> (405)
        on left: 663 664
        on right: 701
    dim_list <pTypeDecl> (406)
        on left: 665 666
        on right: 666 671
    type_declaration_no_options <pTypeDecl> (407)
        on left: 667 668 669 670 671 672 675 676 677 679 680 681 682 683 684 685 686 687 688 689 690 691 694 695 698 701 704 705 708 711 712 715 718 719 722 725 728 731
        on right: 295 301 304 307 390 458 459 464 559 560 561 671 672 680 681 682 683 684 685 686 687 688 689 690 691 695 732 733 763 766 769 772 778 783 787 792 793
    $@43 (408)
        on left: 673
        on right: 675
    $@44 (409)
        on left: 674
        on right: 675
    $@45 (410)
        on left: 678
        on right: 679
    $@46 (411)
        on left: 692
        on right: 694
    $@47 (412)
        on left: 693
        on right: 694
    $@48 (413)
        on left: 696
        on right: 698
    $@49 (414)
        on left: 697
        on right: 698
    $@50 (415)
        on left: 699
        on right: 701
    $@51 (416)
        on left: 700
        on right: 701
    $@52 (417)
        on left: 702
        on right: 704
    $@53 (418)
        on left: 703
        on right: 704
    $@54 (419)
        on left: 706
        on right: 708
    $@55 (420)
        on left: 707
        on right: 708
    $@56 (421)
        on left: 709
        on right: 711
    $@57 (422)
        on left: 710
        on right: 711
    $@58 (423)
        on left: 713
        on right: 715
    $@59 (424)
        on left: 714
        on right: 715
    $@60 (425)
        on left: 716
        on right: 718
    $@61 (426)
        on left: 717
        on right: 718
    $@62 (427)
        on left: 720
        on right: 722
    $@63 (428)
        on left: 721
        on right: 722
    $@64 (429)
        on left: 723
        on right: 725
    $@65 (430)
        on left: 724
        on right: 725
    $@66 (431)
        on left: 726
        on right: 728
    $@67 (432)
        on left: 727
        on right: 728
    $@68 (433)
        on left: 729
        on right: 731
    $@69 (434)
        on left: 730
        on right: 731
    type_declaration <pTypeDecl> (435)
        on left: 732 733 734
        on right: 119 245 246 265 310 470 475 528 529 535 545 546 583 663 664 675 694 698 704 708 715 722 733 734
    tuple_alias_declaration (436)
        on left: 738
        on right: 12
    $@70 (437)
        on left: 735
        on right: 738
    $@71 (438)
        on left: 736
        on right: 738
    $@72 (439)
        on left: 737
        on right: 738
    variant_alias_declaration (440)
        on left: 742
        on right: 11
    $@73 (441)
        on left: 739
        on right: 742
    $@74 (442)
        on left: 740
        on right: 742
    $@75 (443)
        on left: 741
        on right: 742
    bitfield_alias_declaration (444)
        on left: 746
        on right: 13
    $@76 (445)
        on left: 743
        on right: 746
    $@77 (446)
        on left: 744
        on right: 746
    $@78 (447)
        on left: 745
        on right: 746
    make_decl <pExpression> (448)
        on left: 747 748 749 750 751
        on right: 271 411
    make_struct_fields <pMakeStruct> (449)
        on left: 752 753 754 755 756 757 758 759
        on right: 381 382 754 755 758 759 760
    make_struct_single <pExpression> (450)
        on left: 760
        on right: 270 402 763 766 769 778
    make_struct_decl <pExpression> (451)
        on left: 763 766 769 772
        on right: 747
    $@79 (452)
        on left: 761
        on right: 763
    $@80 (453)
        on left: 762
        on right: 763
    $@81 (454)
        on left: 764
        on right: 766
    $@82 (455)
        on left: 765
        on right: 766
    $@83 (456)
        on left: 767
        on right: 769
    $@84 (457)
        on left: 768
        on right: 769
    $@85 (458)
        on left: 770
        on right: 772
    $@86 (459)
        on left: 771
        on right: 772
    make_map_tuple <pExpression> (460)
        on left: 773 774
        on right: 788 789 799
    make_tuple_call <pExpression> (461)
        on left: 775 778
        on right: 751
    $@87 (462)
        on left: 776
        on right: 778
    $@88 (463)
        on left: 777
        on right: 778
    make_dim_decl <pExpression> (464)
        on left: 779 780 783 784 787
        on right: 748
    $@89 (465)
        on left: 781
        on right: 783
    $@90 (466)
        on left: 782
        on right: 783
    $@91 (467)
        on left: 785
        on right: 787
    $@92 (468)
        on left: 786
        on right: 787
    expr_map_tuple_list <pExpression> (469)
        on left: 788 789
        on right: 789 790 791 792 793
    make_table_decl <pExpression> (470)
        on left: 790 791 792 793
        on right: 749
    array_comprehension_where <pExpression> (471)
        on left: 794 795
        on right: 798 799
    optional_comma <b> (472)
        on left: 796 797
        on right: 446 775 779 780 783 784 787 790 791 792 793
    array_comprehension <pExpression> (473)
        on left: 798 799
        on right: 750


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  289 kwd_let: "let" .

    $default  reduce using rule 289 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  586 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  587                  | "typedef" . single_alias "end of expression"

    "public"               shift, and go to state 48
    "private"              shift, and go to state 49
    "begin of code block"  shift, and go to state 50

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 52


State 8

  290 kwd_let: "var" .

    $default  reduce using rule 290 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 53
    '$'     shift, and go to state 54

    module_name  go to state 55


State 10

  746 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 11

  738 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 12

  742 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 58


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 61


State 15

  114 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  205 global_function_declaration: optional_annotation_list . "def" function_declaration
  594 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  597                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"
  612 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 73
    "class"   shift, and go to state 74
    "def"     shift, and go to state 75
    "enum"    shift, and go to state 76

    class_or_struct  go to state 77


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  572 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  574           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 567 (optional_shared)

    optional_shared  go to state 79


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   87 annotation_argument_name: "type" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   88 annotation_argument_name: "in" .

    $default  reduce using rule 88 (annotation_argument_name)


State 34

   86 annotation_argument_name: "name" .

    $default  reduce using rule 86 (annotation_argument_name)


State 35

   89 annotation_argument: annotation_argument_name . '=' string_constant
   90                    | annotation_argument_name . '=' "name"
   91                    | annotation_argument_name . '=' "integer constant"
   92                    | annotation_argument_name . '=' "floating point constant"
   93                    | annotation_argument_name . '=' "true"
   94                    | annotation_argument_name . '=' "false"
   95                    | annotation_argument_name .
   96                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 80

    $default  reduce using rule 95 (annotation_argument)


State 36

   97 annotation_argument_list: annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 81

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 82

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 83

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 84


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 85
    "public"  shift, and go to state 86
    '/'       shift, and go to state 87
    '.'       shift, and go to state 88

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 89


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  581 optional_public_or_private_alias: "public" .

    $default  reduce using rule 581 (optional_public_or_private_alias)


State 49

  580 optional_public_or_private_alias: "private" .

    $default  reduce using rule 580 (optional_public_or_private_alias)


State 50

  586 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 90
    alias_list                        go to state 91


State 51

  583 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 92


State 52

  587 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 93


State 53

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 54

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 55

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 78

    $default  reduce using rule 567 (optional_shared)

    optional_shared  go to state 94


State 56

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "name"  shift, and go to state 95


State 57

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "name"  shift, and go to state 96


State 58

  742 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "name"  shift, and go to state 97


State 59

  260 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 98


State 60

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"

    "::"  shift, and go to state 99

    "::"      [reduce using rule 258 (name_in_namespace)]
    $default  reduce using rule 258 (name_in_namespace)


State 61

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 100


State 62

  100 annotation_declaration_name: "require" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 63

  101 annotation_declaration_name: "private" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 64

  110 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 101
    name_in_namespace             go to state 71


State 65

  105 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 66

  109 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 67

  102 annotation_declaration_basic: annotation_declaration_name .
  103                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 104

    $default  reduce using rule 102 (annotation_declaration_basic)


State 68

  104 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 104 (annotation_declaration)


State 69

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 111 (annotation_list)


State 70

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 108
    ']'  shift, and go to state 109


State 71

   99 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 99 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  604 class_or_struct: "struct" .

    $default  reduce using rule 604 (class_or_struct)


State 74

  603 class_or_struct: "class" .

    $default  reduce using rule 603 (class_or_struct)


State 75

  205 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 206 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 112
    function_declaration                 go to state 113


State 76

  594 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  597                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 588 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 116


State 77

  612 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 605 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 119


State 78

  568 optional_shared: "shared" .

    $default  reduce using rule 568 (optional_shared)


State 79

  572 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  574           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 569 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 122


State 80

   89 annotation_argument: annotation_argument_name '=' . string_constant
   90                    | annotation_argument_name '=' . "name"
   91                    | annotation_argument_name '=' . "integer constant"
   92                    | annotation_argument_name '=' . "floating point constant"
   93                    | annotation_argument_name '=' . "true"
   94                    | annotation_argument_name '=' . "false"
   96                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 123
    "false"                    shift, and go to state 124
    "integer constant"         shift, and go to state 125
    "floating point constant"  shift, and go to state 126
    "name"                     shift, and go to state 127
    "start of the string"      shift, and go to state 128
    '('                        shift, and go to state 129

    string_constant  go to state 130


State 81

   98 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 131


State 82

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 132


State 83

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 133


State 84

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 88

    $default  reduce using rule 42 (require_module_name)


State 85

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 134


State 86

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 87

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 136


State 89

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 90

  584 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  585 alias_list: alias_list . single_alias "end of expression"
  586 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 48
    "private"            shift, and go to state 49
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 139


State 92

  583 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 582 ($@34)

    $@34  go to state 140


State 93

  587 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 587 (alias_declaration)


State 94

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 95

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 743 ($@76)

    $@76  go to state 144


State 96

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 735 ($@70)

    $@70  go to state 145


State 97

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 739 ($@73)

    $@73  go to state 146


State 98

  260 name_in_namespace: "::" "name" .

    $default  reduce using rule 260 (name_in_namespace)


State 99

  259 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 100

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 101

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  110                       | "|>" annotation_declaration .

    $default  reduce using rule 110 (annotation_declaration)


State 102

  105 annotation_declaration: '!' annotation_declaration .
  106                       | annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 103

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  109                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107
    ')'   shift, and go to state 150


State 104

  103 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 105

  106 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 152
    name_in_namespace             go to state 71


State 106

  107 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 153
    name_in_namespace             go to state 71


State 107

  108 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 154
    name_in_namespace             go to state 71


State 108

  112 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 155
    name_in_namespace             go to state 71


State 109

  114 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 114 (optional_annotation_list)


State 110

  208 optional_public_or_private_function: "public" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 111

  207 optional_public_or_private_function: "private" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 112

  211 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 210 ($@2)

    $@2  go to state 156


State 113

  205 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 205 (global_function_declaration)


State 114

  590 optional_public_or_private_enum: "public" .

    $default  reduce using rule 590 (optional_public_or_private_enum)


State 115

  589 optional_public_or_private_enum: "private" .

    $default  reduce using rule 589 (optional_public_or_private_enum)


State 116

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@35 enum_list $@36 "end of code block"
  597                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 117

  607 optional_public_or_private_structure: "public" .

    $default  reduce using rule 607 (optional_public_or_private_structure)


State 118

  606 optional_public_or_private_structure: "private" .

    $default  reduce using rule 606 (optional_public_or_private_structure)


State 119

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@39 structure_name $@40 optional_struct_variable_declaration_list

    $default  reduce using rule 610 ($@39)

    $@39  go to state 159


State 120

  571 optional_public_or_private_variable: "public" .

    $default  reduce using rule 571 (optional_public_or_private_variable)


State 121

  570 optional_public_or_private_variable: "private" .

    $default  reduce using rule 570 (optional_public_or_private_variable)


State 122

  572 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  574           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 573 ($@33)

    $@33  go to state 161


State 123

   93 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 93 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   91 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 91 (annotation_argument)


State 126

   92 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 92 (annotation_argument)


State 127

   90 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 90 (annotation_argument)


State 128

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 129

   96 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 130

   89 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 89 (annotation_argument)


State 131

   98 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 132

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 133

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 134

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 86

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 135

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 136

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 137

  584 alias_list: single_alias "end of expression" .

    $default  reduce using rule 584 (alias_list)


State 138

  586 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 586 (alias_declaration)


State 139

  585 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 174


State 140

  583 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 175


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 . "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block"

    "begin of code block"  shift, and go to state 176


State 145

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 . "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block"

    "begin of code block"  shift, and go to state 177


State 146

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 . "begin of code block" $@74 variant_alias_type_list $@75 "end of code block"

    "begin of code block"  shift, and go to state 178


State 147

  259 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 259 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  109 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 109 (annotation_declaration)


State 151

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 81
    ')'  shift, and go to state 180


State 152

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration .
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 153

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration .
  108                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 105
    "^^"  shift, and go to state 107

    $default  reduce using rule 107 (annotation_declaration)


State 154

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 105

    $default  reduce using rule 108 (annotation_declaration)


State 155

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 112 (annotation_list)


State 156

  211 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  591 enum_name: "name" .

    $default  reduce using rule 591 (enum_name)


State 158

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@35 enum_list $@36 "end of code block"
  597                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 . structure_name $@40 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 600 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  572 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 564 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  574 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation let_variable_declaration

    '<'  shift, and go to state 218

    $default  reduce using rule 504 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   82 annotation_argument_value: "true" .

    $default  reduce using rule 82 (annotation_argument_value)


State 166

   83 annotation_argument_value: "false" .

    $default  reduce using rule 83 (annotation_argument_value)


State 167

   80 annotation_argument_value: "integer constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 168

   81 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 169

   79 annotation_argument_value: "name" .

    $default  reduce using rule 79 (annotation_argument_value)


State 170

   78 annotation_argument_value: string_constant .

    $default  reduce using rule 78 (annotation_argument_value)


State 171

   84 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 172

   85 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  585 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 585 (alias_list)


State 175

  583 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 272


State 176

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" . $@77 bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 744 ($@77)

    $@77  go to state 273


State 177

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" . $@71 tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 736 ($@71)

    $@71  go to state 274


State 178

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" . $@74 variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 740 ($@74)

    $@74  go to state 275


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 103 (annotation_declaration_basic)


State 181

  121 function_name: "operator" . '!'
  122              | "operator" . '~'
  123              | "operator" . "+="
  124              | "operator" . "-="
  125              | "operator" . "*="
  126              | "operator" . "/="
  127              | "operator" . "%="
  128              | "operator" . "&="
  129              | "operator" . "|="
  130              | "operator" . "^="
  131              | "operator" . "&&="
  132              | "operator" . "||="
  133              | "operator" . "^^="
  134              | "operator" . "&&"
  135              | "operator" . "||"
  136              | "operator" . "^^"
  137              | "operator" . '+'
  138              | "operator" . '-'
  139              | "operator" . '*'
  140              | "operator" . '/'
  141              | "operator" . '%'
  142              | "operator" . '<'
  143              | "operator" . '>'
  144              | "operator" . ".."
  145              | "operator" . "=="
  146              | "operator" . "!="
  147              | "operator" . "<="
  148              | "operator" . ">="
  149              | "operator" . '&'
  150              | "operator" . '|'
  151              | "operator" . '^'
  154              | "operator" . "++"
  155              | "operator" . "--"
  156              | "operator" . "<<"
  157              | "operator" . ">>"
  158              | "operator" . "<<="
  159              | "operator" . ">>="
  160              | "operator" . "<<<"
  161              | "operator" . ">>>"
  162              | "operator" . "<<<="
  163              | "operator" . ">>>="
  164              | "operator" . '[' ']'
  165              | "operator" . "?[" ']'
  166              | "operator" . '.'
  167              | "operator" . "?."
  168              | "operator" . '.' "name"
  169              | "operator" . '.' "name" ":="
  170              | "operator" . "?." "name"
  171              | "operator" . ":="
  172              | "operator" . "delete"
  173              | "operator" . "??"
  174              | "operator" . "is"
  175              | "operator" . "as"
  176              | "operator" . "is" "name"
  177              | "operator" . "as" "name"
  178              | "operator" . '?' "as"
  179              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 276
    "as"      shift, and go to state 277
    "delete"  shift, and go to state 278
    "+="      shift, and go to state 279
    "-="      shift, and go to state 280
    "/="      shift, and go to state 281
    "*="      shift, and go to state 282
    "%="      shift, and go to state 283
    "&="      shift, and go to state 284
    "|="      shift, and go to state 285
    "^="      shift, and go to state 286
    "<<"      shift, and go to state 287
    ">>"      shift, and go to state 288
    "++"      shift, and go to state 289
    "--"      shift, and go to state 290
    "<="      shift, and go to state 291
    "<<="     shift, and go to state 292
    ">>="     shift, and go to state 293
    ">="      shift, and go to state 294
    "=="      shift, and go to state 295
    "!="      shift, and go to state 296
    "??"      shift, and go to state 297
    "?."      shift, and go to state 298
    "?["      shift, and go to state 299
    ":="      shift, and go to state 300
    "<<<"     shift, and go to state 301
    ">>>"     shift, and go to state 302
    "<<<="    shift, and go to state 303
    ">>>="    shift, and go to state 304
    "&&"      shift, and go to state 305
    "||"      shift, and go to state 306
    "^^"      shift, and go to state 307
    "&&="     shift, and go to state 308
    "||="     shift, and go to state 309
    "^^="     shift, and go to state 310
    ".."      shift, and go to state 311
    '?'       shift, and go to state 312
    '|'       shift, and go to state 313
    '^'       shift, and go to state 314
    '&'       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    '-'       shift, and go to state 318
    '+'       shift, and go to state 319
    '*'       shift, and go to state 320
    '/'       shift, and go to state 321
    '%'       shift, and go to state 322
    '~'       shift, and go to state 323
    '!'       shift, and go to state 324
    '.'       shift, and go to state 325
    '['       shift, and go to state 326


State 182

  180 function_name: "bool" .

    $default  reduce using rule 180 (function_name)


State 183

  181 function_name: "string" .

    $default  reduce using rule 181 (function_name)


State 184

  182 function_name: "int" .

    $default  reduce using rule 182 (function_name)


State 185

  183 function_name: "int2" .

    $default  reduce using rule 183 (function_name)


State 186

  184 function_name: "int3" .

    $default  reduce using rule 184 (function_name)


State 187

  185 function_name: "int4" .

    $default  reduce using rule 185 (function_name)


State 188

  186 function_name: "uint" .

    $default  reduce using rule 186 (function_name)


State 189

  187 function_name: "uint2" .

    $default  reduce using rule 187 (function_name)


State 190

  188 function_name: "uint3" .

    $default  reduce using rule 188 (function_name)


State 191

  189 function_name: "uint4" .

    $default  reduce using rule 189 (function_name)


State 192

  190 function_name: "float" .

    $default  reduce using rule 190 (function_name)


State 193

  191 function_name: "float2" .

    $default  reduce using rule 191 (function_name)


State 194

  192 function_name: "float3" .

    $default  reduce using rule 192 (function_name)


State 195

  193 function_name: "float4" .

    $default  reduce using rule 193 (function_name)


State 196

  194 function_name: "range" .

    $default  reduce using rule 194 (function_name)


State 197

  195 function_name: "urange" .

    $default  reduce using rule 195 (function_name)


State 198

  196 function_name: "range64" .

    $default  reduce using rule 196 (function_name)


State 199

  197 function_name: "urange64" .

    $default  reduce using rule 197 (function_name)


State 200

  198 function_name: "int64" .

    $default  reduce using rule 198 (function_name)


State 201

  199 function_name: "uint64" .

    $default  reduce using rule 199 (function_name)


State 202

  200 function_name: "double" .

    $default  reduce using rule 200 (function_name)


State 203

  201 function_name: "int8" .

    $default  reduce using rule 201 (function_name)


State 204

  202 function_name: "uint8" .

    $default  reduce using rule 202 (function_name)


State 205

  203 function_name: "int16" .

    $default  reduce using rule 203 (function_name)


State 206

  204 function_name: "uint16" .

    $default  reduce using rule 204 (function_name)


State 207

  152 function_name: "++" . "operator"

    "operator"  shift, and go to state 327


State 208

  153 function_name: "--" . "operator"

    "operator"  shift, and go to state 328


State 209

  120 function_name: "name" .

    $default  reduce using rule 120 (function_name)


State 210

  209 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 330


State 211

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 332


State 212

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@35 enum_list $@36 "end of code block"

    $default  reduce using rule 592 ($@35)

    $@35  go to state 333


State 213

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block"

    "int"     shift, and go to state 334
    "uint"    shift, and go to state 335
    "int8"    shift, and go to state 336
    "uint8"   shift, and go to state 337
    "int16"   shift, and go to state 338
    "uint16"  shift, and go to state 339

    enum_basic_type_declaration  go to state 340


State 214

  601 optional_sealed: "sealed" .

    $default  reduce using rule 601 (optional_sealed)


State 215

  602 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 341


State 216

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name . $@40 optional_struct_variable_declaration_list

    $default  reduce using rule 611 ($@40)

    $@40  go to state 342


State 217

  566 global_variable_declaration_list: global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  572 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 343

    $default  reduce using rule 565 ($@32)

    $@32  go to state 344


State 218

  505 optional_field_annotation: '<' . annotation_argument_list '>'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 345


State 219

  574 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347

    let_variable_name_with_pos_list  go to state 348
    let_variable_declaration         go to state 349


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   85 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant            go to state 170
    annotation_argument_value  go to state 350


State 224

   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 96 (annotation_argument)


State 225

  675 type_declaration_no_options: "type" . '<' $@43 type_declaration '>' $@44

    '<'  shift, and go to state 351


State 226

  698 type_declaration_no_options: "array" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 352


State 227

  701 type_declaration_no_options: "table" . '<' $@50 table_type_pair '>' $@51

    '<'  shift, and go to state 353


State 228

  676 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 229

  704 type_declaration_no_options: "iterator" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 355


State 230

  694 type_declaration_no_options: "smart_ptr" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 356


State 231

  618 basic_type_declaration: "bool" .

    $default  reduce using rule 618 (basic_type_declaration)


State 232

  638 basic_type_declaration: "void" .

    $default  reduce using rule 638 (basic_type_declaration)


State 233

  619 basic_type_declaration: "string" .

    $default  reduce using rule 619 (basic_type_declaration)


State 234

  652 auto_type_declaration: "auto" .
  653                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 652 (auto_type_declaration)


State 235

  620 basic_type_declaration: "int" .

    $default  reduce using rule 620 (basic_type_declaration)


State 236

  624 basic_type_declaration: "int2" .

    $default  reduce using rule 624 (basic_type_declaration)


State 237

  625 basic_type_declaration: "int3" .

    $default  reduce using rule 625 (basic_type_declaration)


State 238

  626 basic_type_declaration: "int4" .

    $default  reduce using rule 626 (basic_type_declaration)


State 239

  627 basic_type_declaration: "uint" .

    $default  reduce using rule 627 (basic_type_declaration)


State 240

  644 basic_type_declaration: "bitfield" .
  662 bitfield_type_declaration: "bitfield" . '<' $@41 bitfield_bits '>' $@42

    '<'  shift, and go to state 358

    $default  reduce using rule 644 (basic_type_declaration)


State 241

  631 basic_type_declaration: "uint2" .

    $default  reduce using rule 631 (basic_type_declaration)


State 242

  632 basic_type_declaration: "uint3" .

    $default  reduce using rule 632 (basic_type_declaration)


State 243

  633 basic_type_declaration: "uint4" .

    $default  reduce using rule 633 (basic_type_declaration)


State 244

  634 basic_type_declaration: "float" .

    $default  reduce using rule 634 (basic_type_declaration)


State 245

  635 basic_type_declaration: "float2" .

    $default  reduce using rule 635 (basic_type_declaration)


State 246

  636 basic_type_declaration: "float3" .

    $default  reduce using rule 636 (basic_type_declaration)


State 247

  637 basic_type_declaration: "float4" .

    $default  reduce using rule 637 (basic_type_declaration)


State 248

  639 basic_type_declaration: "range" .

    $default  reduce using rule 639 (basic_type_declaration)


State 249

  640 basic_type_declaration: "urange" .

    $default  reduce using rule 640 (basic_type_declaration)


State 250

  641 basic_type_declaration: "range64" .

    $default  reduce using rule 641 (basic_type_declaration)


State 251

  642 basic_type_declaration: "urange64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 252

  705 type_declaration_no_options: "block" .
  708                            | "block" . '<' $@54 type_declaration '>' $@55
  711                            | "block" . '<' $@56 optional_function_argument_list optional_function_type '>' $@57

    '<'  shift, and go to state 359

    $default  reduce using rule 705 (type_declaration_no_options)


State 253

  623 basic_type_declaration: "int64" .

    $default  reduce using rule 623 (basic_type_declaration)


State 254

  630 basic_type_declaration: "uint64" .

    $default  reduce using rule 630 (basic_type_declaration)


State 255

  643 basic_type_declaration: "double" .

    $default  reduce using rule 643 (basic_type_declaration)


State 256

  712 type_declaration_no_options: "function" .
  715                            | "function" . '<' $@58 type_declaration '>' $@59
  718                            | "function" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 360

    $default  reduce using rule 712 (type_declaration_no_options)


State 257

  719 type_declaration_no_options: "lambda" .
  722                            | "lambda" . '<' $@62 type_declaration '>' $@63
  725                            | "lambda" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 361

    $default  reduce using rule 719 (type_declaration_no_options)


State 258

  621 basic_type_declaration: "int8" .

    $default  reduce using rule 621 (basic_type_declaration)


State 259

  628 basic_type_declaration: "uint8" .

    $default  reduce using rule 628 (basic_type_declaration)


State 260

  622 basic_type_declaration: "int16" .

    $default  reduce using rule 622 (basic_type_declaration)


State 261

  629 basic_type_declaration: "uint16" .

    $default  reduce using rule 629 (basic_type_declaration)


State 262

  728 type_declaration_no_options: "tuple" . '<' $@66 tuple_type_list '>' $@67

    '<'  shift, and go to state 362


State 263

  731 type_declaration_no_options: "variant" . '<' $@68 variant_type_list '>' $@69

    '<'  shift, and go to state 363


State 264

  654 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 265

  677 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  679                            | '$' . name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 365


State 266

  651 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 651 (structure_type_declaration)


State 267

  667 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 667 (type_declaration_no_options)


State 268

  670 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 670 (type_declaration_no_options)


State 269

  668 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 668 (type_declaration_no_options)


State 270

  669 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 669 (type_declaration_no_options)


State 271

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  732 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    $default  reduce using rule 732 (type_declaration)

    dim_list  go to state 376


State 272

  583 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 583 (single_alias)


State 273

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 . bitfield_alias_bits $@78 "end of code block"

    $default  reduce using rule 657 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 378


State 274

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 . tuple_alias_type_list $@72 "end of code block"

    $default  reduce using rule 532 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 379


State 275

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 . variant_alias_type_list $@75 "end of code block"

    $default  reduce using rule 538 (variant_alias_type_list)

    variant_alias_type_list  go to state 380


State 276

  174 function_name: "operator" "is" .
  176              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 174 (function_name)


State 277

  175 function_name: "operator" "as" .
  177              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 175 (function_name)


State 278

  172 function_name: "operator" "delete" .

    $default  reduce using rule 172 (function_name)


State 279

  123 function_name: "operator" "+=" .

    $default  reduce using rule 123 (function_name)


State 280

  124 function_name: "operator" "-=" .

    $default  reduce using rule 124 (function_name)


State 281

  126 function_name: "operator" "/=" .

    $default  reduce using rule 126 (function_name)


State 282

  125 function_name: "operator" "*=" .

    $default  reduce using rule 125 (function_name)


State 283

  127 function_name: "operator" "%=" .

    $default  reduce using rule 127 (function_name)


State 284

  128 function_name: "operator" "&=" .

    $default  reduce using rule 128 (function_name)


State 285

  129 function_name: "operator" "|=" .

    $default  reduce using rule 129 (function_name)


State 286

  130 function_name: "operator" "^=" .

    $default  reduce using rule 130 (function_name)


State 287

  156 function_name: "operator" "<<" .

    $default  reduce using rule 156 (function_name)


State 288

  157 function_name: "operator" ">>" .

    $default  reduce using rule 157 (function_name)


State 289

  154 function_name: "operator" "++" .

    $default  reduce using rule 154 (function_name)


State 290

  155 function_name: "operator" "--" .

    $default  reduce using rule 155 (function_name)


State 291

  147 function_name: "operator" "<=" .

    $default  reduce using rule 147 (function_name)


State 292

  158 function_name: "operator" "<<=" .

    $default  reduce using rule 158 (function_name)


State 293

  159 function_name: "operator" ">>=" .

    $default  reduce using rule 159 (function_name)


State 294

  148 function_name: "operator" ">=" .

    $default  reduce using rule 148 (function_name)


State 295

  145 function_name: "operator" "==" .

    $default  reduce using rule 145 (function_name)


State 296

  146 function_name: "operator" "!=" .

    $default  reduce using rule 146 (function_name)


State 297

  173 function_name: "operator" "??" .

    $default  reduce using rule 173 (function_name)


State 298

  167 function_name: "operator" "?." .
  170              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 167 (function_name)


State 299

  165 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 300

  171 function_name: "operator" ":=" .

    $default  reduce using rule 171 (function_name)


State 301

  160 function_name: "operator" "<<<" .

    $default  reduce using rule 160 (function_name)


State 302

  161 function_name: "operator" ">>>" .

    $default  reduce using rule 161 (function_name)


State 303

  162 function_name: "operator" "<<<=" .

    $default  reduce using rule 162 (function_name)


State 304

  163 function_name: "operator" ">>>=" .

    $default  reduce using rule 163 (function_name)


State 305

  134 function_name: "operator" "&&" .

    $default  reduce using rule 134 (function_name)


State 306

  135 function_name: "operator" "||" .

    $default  reduce using rule 135 (function_name)


State 307

  136 function_name: "operator" "^^" .

    $default  reduce using rule 136 (function_name)


State 308

  131 function_name: "operator" "&&=" .

    $default  reduce using rule 131 (function_name)


State 309

  132 function_name: "operator" "||=" .

    $default  reduce using rule 132 (function_name)


State 310

  133 function_name: "operator" "^^=" .

    $default  reduce using rule 133 (function_name)


State 311

  144 function_name: "operator" ".." .

    $default  reduce using rule 144 (function_name)


State 312

  178 function_name: "operator" '?' . "as"
  179              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 313

  150 function_name: "operator" '|' .

    $default  reduce using rule 150 (function_name)


State 314

  151 function_name: "operator" '^' .

    $default  reduce using rule 151 (function_name)


State 315

  149 function_name: "operator" '&' .

    $default  reduce using rule 149 (function_name)


State 316

  142 function_name: "operator" '<' .

    $default  reduce using rule 142 (function_name)


State 317

  143 function_name: "operator" '>' .

    $default  reduce using rule 143 (function_name)


State 318

  138 function_name: "operator" '-' .

    $default  reduce using rule 138 (function_name)


State 319

  137 function_name: "operator" '+' .

    $default  reduce using rule 137 (function_name)


State 320

  139 function_name: "operator" '*' .

    $default  reduce using rule 139 (function_name)


State 321

  140 function_name: "operator" '/' .

    $default  reduce using rule 140 (function_name)


State 322

  141 function_name: "operator" '%' .

    $default  reduce using rule 141 (function_name)


State 323

  122 function_name: "operator" '~' .

    $default  reduce using rule 122 (function_name)


State 324

  121 function_name: "operator" '!' .

    $default  reduce using rule 121 (function_name)


State 325

  166 function_name: "operator" '.' .
  168              | "operator" '.' . "name"
  169              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 166 (function_name)


State 326

  164 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 327

  152 function_name: "++" "operator" .

    $default  reduce using rule 152 (function_name)


State 328

  153 function_name: "--" "operator" .

    $default  reduce using rule 153 (function_name)


State 329

  116 optional_function_argument_list: '(' . ')'
  117                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    '<'   shift, and go to state 218
    ')'   shift, and go to state 389

    $default  reduce using rule 504 (optional_field_annotation)

    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 391
    function_argument_list         go to state 392


State 330

  209 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 394


State 331

  212 expression_block: "begin of code block" . expressions "end of code block"
  213                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 237 (expressions)

    expressions  go to state 395


State 332

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 211 (function_declaration)


State 333

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 . enum_list $@36 "end of code block"

    $default  reduce using rule 575 (enum_list)

    enum_list  go to state 396


State 334

  645 enum_basic_type_declaration: "int" .

    $default  reduce using rule 645 (enum_basic_type_declaration)


State 335

  648 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 336

  646 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 646 (enum_basic_type_declaration)


State 337

  649 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 338

  647 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 647 (enum_basic_type_declaration)


State 339

  650 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 340

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@37 enum_list $@38 "end of code block"

    "begin of code block"  shift, and go to state 397


State 341

  602 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 398

    $default  reduce using rule 598 (optional_structure_parent)

    optional_structure_parent  go to state 399


State 342

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 400

    $default  reduce using rule 608 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 401


State 343

  572 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 572 (global_let)


State 344

  566 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '<'  shift, and go to state 218

    $default  reduce using rule 504 (optional_field_annotation)

    optional_field_annotation  go to state 402


State 345

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  505 optional_field_annotation: '<' annotation_argument_list . '>'

    ','  shift, and go to state 81
    '>'  shift, and go to state 403


State 346

  555 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 404


State 347

  554 let_variable_name_with_pos_list: "name" .
  556                                | "name" . "aka" "name"

    "aka"  shift, and go to state 405

    $default  reduce using rule 554 (let_variable_name_with_pos_list)


State 348

  557 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  558                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  559 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  560                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  561                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  562                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 406
    ':'  shift, and go to state 407
    '&'  shift, and go to state 408

    $default  reduce using rule 552 (optional_ref)

    optional_ref  go to state 409


State 349

  574 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 574 (global_let)


State 350

   85 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 351

  675 type_declaration_no_options: "type" '<' . $@43 type_declaration '>' $@44

    $default  reduce using rule 673 ($@43)

    $@43  go to state 410


State 352

  698 type_declaration_no_options: "array" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 696 ($@48)

    $@48  go to state 411


State 353

  701 type_declaration_no_options: "table" '<' . $@50 table_type_pair '>' $@51

    $default  reduce using rule 699 ($@50)

    $@50  go to state 412


State 354

  676 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 479
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 355

  704 type_declaration_no_options: "iterator" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 702 ($@52)

    $@52  go to state 488


State 356

  694 type_declaration_no_options: "smart_ptr" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 692 ($@46)

    $@46  go to state 489


State 357

  653 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 490


State 358

  662 bitfield_type_declaration: "bitfield" '<' . $@41 bitfield_bits '>' $@42

    $default  reduce using rule 660 ($@41)

    $@41  go to state 491


State 359

  708 type_declaration_no_options: "block" '<' . $@54 type_declaration '>' $@55
  711                            | "block" '<' . $@56 optional_function_argument_list optional_function_type '>' $@57

    ':'       reduce using rule 709 ($@56)
    '>'       reduce using rule 709 ($@56)
    '('       reduce using rule 709 ($@56)
    $default  reduce using rule 706 ($@54)

    $@54  go to state 492
    $@56  go to state 493


State 360

  715 type_declaration_no_options: "function" '<' . $@58 type_declaration '>' $@59
  718                            | "function" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 716 ($@60)
    '>'       reduce using rule 716 ($@60)
    '('       reduce using rule 716 ($@60)
    $default  reduce using rule 713 ($@58)

    $@58  go to state 494
    $@60  go to state 495


State 361

  722 type_declaration_no_options: "lambda" '<' . $@62 type_declaration '>' $@63
  725                            | "lambda" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 723 ($@64)
    '>'       reduce using rule 723 ($@64)
    '('       reduce using rule 723 ($@64)
    $default  reduce using rule 720 ($@62)

    $@62  go to state 496
    $@64  go to state 497


State 362

  728 type_declaration_no_options: "tuple" '<' . $@66 tuple_type_list '>' $@67

    $default  reduce using rule 726 ($@66)

    $@66  go to state 498


State 363

  731 type_declaration_no_options: "variant" '<' . $@68 variant_type_list '>' $@69

    $default  reduce using rule 729 ($@68)

    $@68  go to state 499


State 364

  654 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 500
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 365

  677 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  679                            | '$' name_in_namespace . '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 501
    '('  shift, and go to state 502


State 366

  682 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 682 (type_declaration_no_options)


State 367

  687 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 687 (type_declaration_no_options)


State 368

  681 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 681 (type_declaration_no_options)


State 369

  689 type_declaration_no_options: type_declaration_no_options "==" . "const"
  690                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 503
    '&'      shift, and go to state 504


State 370

  695 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 695 (type_declaration_no_options)


State 371

  691 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 372

  684 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 684 (type_declaration_no_options)


State 373

  680 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  683                            | type_declaration_no_options '-' . "const"
  685                            | type_declaration_no_options '-' . '&'
  688                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 505
    '&'      shift, and go to state 506
    '['      shift, and go to state 507
    '#'      shift, and go to state 508


State 374

  665 dim_list: '[' . expr ']'
  672 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    ']'                               shift, and go to state 509
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 510
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 375

  686 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 686 (type_declaration_no_options)


State 376

  666 dim_list: dim_list . '[' expr ']'
  671 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 511

    '['       [reduce using rule 671 (type_declaration_no_options)]
    $default  reduce using rule 671 (type_declaration_no_options)


State 377

  733 type_declaration: type_declaration '|' . type_declaration_no_options
  734                 | type_declaration '|' . '#'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265
    '#'          shift, and go to state 512

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 513


State 378

  658 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  659                    | bitfield_alias_bits . "name" "end of expression"
  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits . $@78 "end of code block"

    "name"               shift, and go to state 514
    "end of expression"  shift, and go to state 515

    $default  reduce using rule 745 ($@78)

    $@78  go to state 516


State 379

  533 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  534                      | tuple_alias_type_list . tuple_type "end of expression"
  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list . $@72 "end of code block"

    "type"               shift, and go to state 225
    "array"              shift, and go to state 226
    "table"              shift, and go to state 227
    "typedecl"           shift, and go to state 228
    "iterator"           shift, and go to state 229
    "smart_ptr"          shift, and go to state 230
    "bool"               shift, and go to state 231
    "void"               shift, and go to state 232
    "string"             shift, and go to state 233
    "auto"               shift, and go to state 234
    "int"                shift, and go to state 235
    "int2"               shift, and go to state 236
    "int3"               shift, and go to state 237
    "int4"               shift, and go to state 238
    "uint"               shift, and go to state 239
    "bitfield"           shift, and go to state 240
    "uint2"              shift, and go to state 241
    "uint3"              shift, and go to state 242
    "uint4"              shift, and go to state 243
    "float"              shift, and go to state 244
    "float2"             shift, and go to state 245
    "float3"             shift, and go to state 246
    "float4"             shift, and go to state 247
    "range"              shift, and go to state 248
    "urange"             shift, and go to state 249
    "range64"            shift, and go to state 250
    "urange64"           shift, and go to state 251
    "block"              shift, and go to state 252
    "int64"              shift, and go to state 253
    "uint64"             shift, and go to state 254
    "double"             shift, and go to state 255
    "function"           shift, and go to state 256
    "lambda"             shift, and go to state 257
    "int8"               shift, and go to state 258
    "uint8"              shift, and go to state 259
    "int16"              shift, and go to state 260
    "uint16"             shift, and go to state 261
    "tuple"              shift, and go to state 262
    "variant"            shift, and go to state 263
    "::"                 shift, and go to state 59
    "$t"                 shift, and go to state 264
    "name"               shift, and go to state 517
    "end of expression"  shift, and go to state 518
    '$'                  shift, and go to state 265

    $default  reduce using rule 737 ($@72)

    name_in_namespace            go to state 266
    tuple_type                   go to state 519
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 520
    $@72                         go to state 521


State 380

  539 variant_alias_type_list: variant_alias_type_list . "end of expression"
  540                        | variant_alias_type_list . variant_type "end of expression"
  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list . $@75 "end of code block"

    "name"               shift, and go to state 522
    "end of expression"  shift, and go to state 523

    $default  reduce using rule 741 ($@75)

    variant_type  go to state 524
    $@75          go to state 525


State 381

  176 function_name: "operator" "is" "name" .

    $default  reduce using rule 176 (function_name)


State 382

  177 function_name: "operator" "as" "name" .

    $default  reduce using rule 177 (function_name)


State 383

  170 function_name: "operator" "?." "name" .

    $default  reduce using rule 170 (function_name)


State 384

  165 function_name: "operator" "?[" ']' .

    $default  reduce using rule 165 (function_name)


State 385

  178 function_name: "operator" '?' "as" .
  179              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 526

    $default  reduce using rule 178 (function_name)


State 386

  168 function_name: "operator" '.' "name" .
  169              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 527

    $default  reduce using rule 168 (function_name)


State 387

  164 function_name: "operator" '[' ']' .

    $default  reduce using rule 164 (function_name)


State 388

  525 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 528


State 389

  116 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 390

  524 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 529
    "var"  shift, and go to state 530

    $default  reduce using rule 288 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 531


State 391

  526 function_argument_list: function_argument_declaration .

    $default  reduce using rule 526 (function_argument_list)


State 392

  117 optional_function_argument_list: '(' function_argument_list . ')'
  527 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 532
    ')'                  shift, and go to state 533


State 393

  119 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 534


State 394

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 209 (function_declaration_header)


State 395

  212 expression_block: "begin of code block" expressions . "end of code block"
  213                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 535
    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 536
    "if"                              shift, and go to state 537
    "static_if"                       shift, and go to state 538
    "for"                             shift, and go to state 539
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 540
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 541
    "try"                             shift, and go to state 542
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 543
    "deref"                           shift, and go to state 423
    "with"                            shift, and go to state 544
    "assume"                          shift, and go to state 545
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 546
    "pass"                            shift, and go to state 547
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 548
    "goto"                            shift, and go to state 549
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 551
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    "end of code block"               shift, and go to state 556
    "end of expression"               shift, and go to state 557
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder             go to state 463
    expr_reader                go to state 464
    expression_label           go to state 558
    expression_goto            go to state 559
    if_or_static_if            go to state 560
    expression_if_one_liner    go to state 561
    expression_if_then_else    go to state 562
    expression_for_loop        go to state 563
    expression_unsafe          go to state 564
    expression_while_loop      go to state 565
    expression_with            go to state 566
    expression_with_alias      go to state 567
    expr_call_pipe             go to state 568
    expression_any             go to state 569
    expr_keyword               go to state 570
    expression_keyword         go to state 571
    expr_pipe                  go to state 572
    name_in_namespace          go to state 466
    expression_delete          go to state 573
    expr_new                   go to state 467
    expression_break           go to state 574
    expression_continue        go to state 575
    expression_return_no_pipe  go to state 576
    expression_return          go to state 577
    expression_yield_no_pipe   go to state 578
    expression_yield           go to state 579
    expression_try_catch       go to state 580
    kwd_let                    go to state 581
    expression_let             go to state 582
    expr_cast                  go to state 468
    expr_type_decl             go to state 469
    expr_type_info             go to state 470
    block_or_lambda            go to state 471
    expr_full_block            go to state 472
    expr_numeric_const         go to state 473
    expr_assign                go to state 583
    expr_assign_pipe           go to state 584
    expr_named_call            go to state 474
    expr_method_call           go to state 475
    func_addr_expr             go to state 476
    expr_field                 go to state 477
    expr_call                  go to state 478
    expr                       go to state 585
    expr_mtag                  go to state 480
    basic_type_declaration     go to state 481
    make_decl                  go to state 482
    make_struct_decl           go to state 483
    make_tuple_call            go to state 484
    make_dim_decl              go to state 485
    make_table_decl            go to state 486
    array_comprehension        go to state 487


State 396

  576 enum_list: enum_list . "end of expression"
  577          | enum_list . "name" "end of expression"
  578          | enum_list . "name" '=' expr "end of expression"
  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list . $@36 "end of code block"

    "name"               shift, and go to state 586
    "end of expression"  shift, and go to state 587

    $default  reduce using rule 593 ($@36)

    $@36  go to state 588


State 397

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@37 enum_list $@38 "end of code block"

    $default  reduce using rule 595 ($@37)

    $@37  go to state 589


State 398

  599 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 590


State 399

  602 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 602 (structure_name)


State 400

  609 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 517 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 591


State 401

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@39 structure_name $@40 optional_struct_variable_declaration_list .

    $default  reduce using rule 612 (structure_declaration)


State 402

  566 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347

    let_variable_name_with_pos_list  go to state 348
    let_variable_declaration         go to state 592


State 403

  505 optional_field_annotation: '<' annotation_argument_list '>' .

    $default  reduce using rule 505 (optional_field_annotation)


State 404

  555 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 593
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 405

  556 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 594


State 406

  557 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  558                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 595


State 407

  559 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  560                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  561                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 596


State 408

  553 optional_ref: '&' .

    $default  reduce using rule 553 (optional_ref)


State 409

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 597
    ":="  shift, and go to state 598
    '='   shift, and go to state 599

    copy_or_move_or_clone  go to state 600


State 410

  675 type_declaration_no_options: "type" '<' $@43 . type_declaration '>' $@44

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 601


State 411

  698 type_declaration_no_options: "array" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 602


State 412

  701 type_declaration_no_options: "table" '<' $@50 . table_type_pair '>' $@51

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    table_type_pair              go to state 603
    type_declaration_no_options  go to state 271
    type_declaration             go to state 604


State 413

  763 make_struct_decl: "struct" . '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    '<'  shift, and go to state 605


State 414

  766 make_struct_decl: "class" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    '<'  shift, and go to state 606


State 415

  412 expr: "true" .

    $default  reduce using rule 412 (expr)


State 416

  413 expr: "false" .

    $default  reduce using rule 413 (expr)


State 417

  267 expr_new: "new" . new_type_declaration
  268         | "new" . new_type_declaration '(' ')'
  269         | "new" . new_type_declaration '(' expr_list ')'
  270         | "new" . new_type_declaration '(' make_struct_single ')'
  271         | "new" . make_decl

    "struct"               shift, and go to state 413
    "class"                shift, and go to state 414
    "array"                shift, and go to state 420
    "table"                shift, and go to state 422
    "fixed_array"          shift, and go to state 428
    "default"              shift, and go to state 429
    "tuple"                shift, and go to state 431
    "variant"              shift, and go to state 432
    "::"                   shift, and go to state 59
    "name"                 shift, and go to state 60
    "begin of code block"  shift, and go to state 453
    '<'                    shift, and go to state 607
    '['                    shift, and go to state 459

    name_in_namespace           go to state 266
    new_type_declaration        go to state 608
    structure_type_declaration  go to state 609
    make_decl                   go to state 610
    make_struct_decl            go to state 483
    make_tuple_call             go to state 484
    make_dim_decl               go to state 485
    make_table_decl             go to state 486
    array_comprehension         go to state 487


State 418

  311 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  312               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 611


State 419

  310 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 612


State 420

  780 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  783              | "array" . '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 613
    '('  shift, and go to state 614


State 421

  406 expr: "null" .

    $default  reduce using rule 406 (expr)


State 422

  791 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  792                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  793                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 615
    '('  shift, and go to state 616


State 423

  456 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 617


State 424

  301 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 618


State 425

  304 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 619


State 426

  457 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 620


State 427

  307 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 621


State 428

  784 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  787              | "fixed_array" . '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 622
    '('  shift, and go to state 623


State 429

  772 make_struct_decl: "default" . '<' $@85 type_declaration_no_options '>' $@86

    '<'  shift, and go to state 624


State 430

  644 basic_type_declaration: "bitfield" .

    $default  reduce using rule 644 (basic_type_declaration)


State 431

  775 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  778                | "tuple" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    '<'  shift, and go to state 625
    '('  shift, and go to state 626


State 432

  769 make_struct_decl: "variant" . '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    '<'  shift, and go to state 627


State 433

  458 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 628


State 434

  442 expr: "++" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 629
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 435

  443 expr: "--" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 630
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 436

  488 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 631


State 437

  489 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 632


State 438

  490 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 633


State 439

  491 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 634


State 440

  492 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 635


State 441

  494 expr_mtag: "$c" . '(' expr ')' '(' ')'
  495          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 636


State 442

  493 expr_mtag: "..." .

    $default  reduce using rule 493 (expr_mtag)


State 443

  334 expr_numeric_const: "integer constant" .

    $default  reduce using rule 334 (expr_numeric_const)


State 444

  336 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 445

  335 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 335 (expr_numeric_const)


State 446

  337 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 447

  338 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 448

  339 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 449

  340 expr_numeric_const: "double constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 450

  249 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    '<'  shift, and go to state 637


State 451

  252 expression_keyword: "type function" . '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    '<'  shift, and go to state 638


State 452

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 639


State 453

  790 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  799 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 640
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 642
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    expr_map_tuple_list     go to state 643
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 454

  419 expr: '-' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 644
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 455

  418 expr: '+' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 645
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 456

  455 expr: '*' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 646
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 457

  417 expr: '~' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 647
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 458

  416 expr: '!' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 648
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 459

  779 make_dim_decl: '[' . expr_list optional_comma ']'
  798 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 649
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 650
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 460

  446 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 652
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 461

  319 block_or_lambda: '$' .

    $default  reduce using rule 319 (block_or_lambda)


State 462

  320 block_or_lambda: '@' .
  321                | '@' . '@'
  387 func_addr_expr: '@' . '@' func_addr_name
  390               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  503 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 653

    $default  reduce using rule 320 (block_or_lambda)


State 463

  410 expr: string_builder .

    $default  reduce using rule 410 (expr)


State 464

  409 expr: expr_reader .

    $default  reduce using rule 409 (expr)


State 465

  487 expr: expression_keyword .

    $default  reduce using rule 487 (expr)


State 466

  381 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  382                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  401 expr_call: name_in_namespace . '(' ')'
  402          | name_in_namespace . '(' make_struct_single ')'
  403          | name_in_namespace . '(' expr_list ')'
  407 expr: name_in_namespace .

    '('  shift, and go to state 654

    '('       [reduce using rule 407 (expr)]
    $default  reduce using rule 407 (expr)


State 467

  480 expr: expr_new .

    $default  reduce using rule 480 (expr)


State 468

  479 expr: expr_cast .

    $default  reduce using rule 479 (expr)


State 469

  478 expr: expr_type_decl .

    $default  reduce using rule 478 (expr)


State 470

  477 expr: expr_type_info .

    $default  reduce using rule 477 (expr)


State 471

  332 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 655


State 472

  483 expr: expr_full_block .

    $default  reduce using rule 483 (expr)


State 473

  408 expr: expr_numeric_const .

    $default  reduce using rule 408 (expr)


State 474

  482 expr: expr_named_call .

    $default  reduce using rule 482 (expr)


State 475

  481 expr: expr_method_call .

    $default  reduce using rule 481 (expr)


State 476

  453 expr: func_addr_expr .

    $default  reduce using rule 453 (expr)


State 477

  414 expr: expr_field .

    $default  reduce using rule 414 (expr)


State 478

  454 expr: expr_call .

    $default  reduce using rule 454 (expr)


State 479

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  676 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 691


State 480

  415 expr: expr_mtag .

    $default  reduce using rule 415 (expr)


State 481

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 692


State 482

  411 expr: make_decl .

    $default  reduce using rule 411 (expr)


State 483

  747 make_decl: make_struct_decl .

    $default  reduce using rule 747 (make_decl)


State 484

  751 make_decl: make_tuple_call .

    $default  reduce using rule 751 (make_decl)


State 485

  748 make_decl: make_dim_decl .

    $default  reduce using rule 748 (make_decl)


State 486

  749 make_decl: make_table_decl .

    $default  reduce using rule 749 (make_decl)


State 487

  750 make_decl: array_comprehension .

    $default  reduce using rule 750 (make_decl)


State 488

  704 type_declaration_no_options: "iterator" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 693


State 489

  694 type_declaration_no_options: "smart_ptr" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 694


State 490

  653 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 695


State 491

  662 bitfield_type_declaration: "bitfield" '<' $@41 . bitfield_bits '>' $@42

    "name"  shift, and go to state 696

    bitfield_bits  go to state 697


State 492

  708 type_declaration_no_options: "block" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 698


State 493

  711 type_declaration_no_options: "block" '<' $@56 . optional_function_argument_list optional_function_type '>' $@57

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 699


State 494

  715 type_declaration_no_options: "function" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 700


State 495

  718 type_declaration_no_options: "function" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 701


State 496

  722 type_declaration_no_options: "lambda" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 702


State 497

  725 type_declaration_no_options: "lambda" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 703


State 498

  728 type_declaration_no_options: "tuple" '<' $@66 . tuple_type_list '>' $@67

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 517
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    tuple_type                   go to state 704
    tuple_type_list              go to state 705
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 520


State 499

  731 type_declaration_no_options: "variant" '<' $@68 . variant_type_list '>' $@69

    "name"  shift, and go to state 522

    variant_type       go to state 706
    variant_type_list  go to state 707


State 500

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  654 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 708


State 501

  679 type_declaration_no_options: '$' name_in_namespace '<' . $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 678 ($@45)

    $@45  go to state 709


State 502

  677 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    optional_expr_list      go to state 710
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 711
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 503

  689 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 689 (type_declaration_no_options)


State 504

  690 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 690 (type_declaration_no_options)


State 505

  683 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 683 (type_declaration_no_options)


State 506

  685 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 685 (type_declaration_no_options)


State 507

  680 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 712


State 508

  688 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 509

  672 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 672 (type_declaration_no_options)


State 510

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  665 dim_list: '[' expr . ']'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 713


State 511

  666 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 714
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 512

  734 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 734 (type_declaration)


State 513

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  733 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    $default  reduce using rule 733 (type_declaration)

    dim_list  go to state 376


State 514

  659 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 715


State 515

  658 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 658 (bitfield_alias_bits)


State 516

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 . "end of code block"

    "end of code block"  shift, and go to state 716


State 517

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"
  529 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 99
    ':'   shift, and go to state 717

    $default  reduce using rule 258 (name_in_namespace)


State 518

  533 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 533 (tuple_alias_type_list)


State 519

  534 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 718


State 520

  528 tuple_type: type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 528 (tuple_type)


State 521

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 . "end of code block"

    "end of code block"  shift, and go to state 719


State 522

  535 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 720


State 523

  539 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 539 (variant_alias_type_list)


State 524

  540 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 721


State 525

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 . "end of code block"

    "end of code block"  shift, and go to state 722


State 526

  179 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 179 (function_name)


State 527

  169 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 169 (function_name)


State 528

  525 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 723
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 529

  286 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 286 (kwd_let_var_or_nothing)


State 530

  287 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 287 (kwd_let_var_or_nothing)


State 531

  524 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 724
    "name"  shift, and go to state 725

    variable_declaration         go to state 726
    variable_name_with_pos_list  go to state 727


State 532

  527 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 388
    '<'   shift, and go to state 218

    $default  reduce using rule 504 (optional_field_annotation)

    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 728


State 533

  117 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 534

  119 optional_function_type: ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 119 (optional_function_type)


State 535

  239 expressions: expressions error .

    $default  reduce using rule 239 (expressions)


State 536

   75 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 729
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 537

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 538

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 539

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 724
    "name"  shift, and go to state 725

    variable_name_with_pos_list  go to state 730


State 540

  274 expression_return_no_pipe: "return" .
  275                          | "return" . expr_list
  276                          | "return" . "<-" expr_list
  278 expression_return: "return" . expr_pipe
  279                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 731
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 274 (expression_return_no_pipe)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 732
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 733
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 735
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 541

  272 expression_break: "break" .

    $default  reduce using rule 272 (expression_break)


State 542

  285 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 736


State 543

  261 expression_delete: "delete" . expr
  262                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "explicit"                        shift, and go to state 737
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 738
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 544

   76 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 739
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 545

   77 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 740


State 546

  273 expression_continue: "continue" .

    $default  reduce using rule 273 (expression_continue)


State 547

  236 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 741


State 548

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 742


State 549

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 743
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 744
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 550

   74 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 745


State 551

  280 expression_yield_no_pipe: "yield" . expr
  281                         | "yield" . "<-" expr
  283 expression_yield: "yield" . expr_pipe
  284                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 746
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 747
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 748
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 552

  256 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 752


State 553

  254 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 753


State 554

  255 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 754


State 555

  240 expr_keyword: "keyword" . expr expression_block
  249 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '<'                               shift, and go to state 637
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 755
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 556

  212 expression_block: "begin of code block" expressions "end of code block" .
  213                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 756

    $default  reduce using rule 212 (expression_block)


State 557

  216 expression_any: "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 558

  234 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 757


State 559

  235 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 758


State 560

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 759
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 561

   72 expression_if_then_else: expression_if_one_liner . "if" expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 760


State 562

  232 expression_any: expression_if_then_else .

    $default  reduce using rule 232 (expression_any)


State 563

  227 expression_any: expression_for_loop .

    $default  reduce using rule 227 (expression_any)


State 564

  224 expression_any: expression_unsafe .

    $default  reduce using rule 224 (expression_any)


State 565

  223 expression_any: expression_while_loop .

    $default  reduce using rule 223 (expression_any)


State 566

  225 expression_any: expression_with .

    $default  reduce using rule 225 (expression_any)


State 567

  226 expression_any: expression_with_alias .

    $default  reduce using rule 226 (expression_any)


State 568

  257 expr_pipe: expr_call_pipe .

    $default  reduce using rule 257 (expr_pipe)


State 569

  238 expressions: expressions expression_any .

    $default  reduce using rule 238 (expressions)


State 570

  218 expression_any: expr_keyword .

    $default  reduce using rule 218 (expression_any)


State 571

  215 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  487 expr: expression_keyword .

    '$'  shift, and go to state 461
    '@'  shift, and go to state 749

    '$'       [reduce using rule 487 (expr)]
    '@'       [reduce using rule 487 (expr)]
    $default  reduce using rule 487 (expr)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 762


State 572

  217 expression_any: expr_pipe .

    $default  reduce using rule 217 (expression_any)


State 573

  221 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 763


State 574

   69 expression_if_one_liner: expression_break .
  228 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 764

    $default  reduce using rule 69 (expression_if_one_liner)


State 575

   70 expression_if_one_liner: expression_continue .
  229 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 765

    $default  reduce using rule 70 (expression_if_one_liner)


State 576

   67 expression_if_one_liner: expression_return_no_pipe .
  277 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 766

    $default  reduce using rule 67 (expression_if_one_liner)


State 577

  230 expression_any: expression_return .

    $default  reduce using rule 230 (expression_any)


State 578

   68 expression_if_one_liner: expression_yield_no_pipe .
  282 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 767

    $default  reduce using rule 68 (expression_if_one_liner)


State 579

  231 expression_any: expression_yield .

    $default  reduce using rule 231 (expression_any)


State 580

  233 expression_any: expression_try_catch .

    $default  reduce using rule 233 (expression_any)


State 581

  297 expression_let: kwd_let . optional_in_scope let_variable_declaration
  298               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 768

    $default  reduce using rule 292 (optional_in_scope)

    optional_in_scope  go to state 769


State 582

  222 expression_any: expression_let .

    $default  reduce using rule 222 (expression_any)


State 583

  220 expression_any: expr_assign . "end of expression"
  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 770
    "end of expression"  shift, and go to state 771


State 584

  219 expression_any: expr_assign_pipe .

    $default  reduce using rule 219 (expression_any)


State 585

   66 expression_if_one_liner: expr .
  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  364 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  365                 | expr . "<-" expr_assign_pipe_right
  366                 | expr . "&=" expr_assign_pipe_right
  367                 | expr . "|=" expr_assign_pipe_right
  368                 | expr . "^=" expr_assign_pipe_right
  369                 | expr . "&&=" expr_assign_pipe_right
  370                 | expr . "||=" expr_assign_pipe_right
  371                 | expr . "^^=" expr_assign_pipe_right
  372                 | expr . "+=" expr_assign_pipe_right
  373                 | expr . "-=" expr_assign_pipe_right
  374                 | expr . "*=" expr_assign_pipe_right
  375                 | expr . "/=" expr_assign_pipe_right
  376                 | expr . "%=" expr_assign_pipe_right
  377                 | expr . "<<=" expr_assign_pipe_right
  378                 | expr . ">>=" expr_assign_pipe_right
  379                 | expr . "<<<=" expr_assign_pipe_right
  380                 | expr . ">>>=" expr_assign_pipe_right
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    "<<="   shift, and go to state 780
    ">>="   shift, and go to state 781
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "<-"    shift, and go to state 782
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "<<<="  shift, and go to state 784
    ">>>="  shift, and go to state 785
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    "&&="   shift, and go to state 786
    "||="   shift, and go to state 787
    "^^="   shift, and go to state 788
    ".."    shift, and go to state 677
    '='     shift, and go to state 789
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690
    '$'     shift, and go to state 461
    '@'     shift, and go to state 749

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 586

  577 enum_list: enum_list "name" . "end of expression"
  578          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 791
    '='                  shift, and go to state 792


State 587

  576 enum_list: enum_list "end of expression" .

    $default  reduce using rule 576 (enum_list)


State 588

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 . "end of code block"

    "end of code block"  shift, and go to state 793


State 589

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 . enum_list $@38 "end of code block"

    $default  reduce using rule 575 (enum_list)

    enum_list  go to state 794


State 590

  599 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 599 (optional_structure_parent)


State 591

  519 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  521                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  523                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  609 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 795
    '['                  shift, and go to state 15

    "def"     reduce using rule 113 (optional_annotation_list)
    $default  reduce using rule 518 ($@29)

    optional_annotation_list  go to state 796
    $@29                      go to state 797


State 592

  566 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 566 (global_variable_declaration_list)


State 593

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  555 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 798


State 594

  556 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 556 (let_variable_name_with_pos_list)


State 595

  557 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  558                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 799

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 596

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  560                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 366
    "implicit"           shift, and go to state 367
    "explicit"           shift, and go to state 368
    "=="                 shift, and go to state 369
    "<-"                 shift, and go to state 597
    "??"                 shift, and go to state 370
    ":="                 shift, and go to state 598
    "end of expression"  shift, and go to state 800
    '='                  shift, and go to state 599
    '?'                  shift, and go to state 371
    '&'                  shift, and go to state 372
    '-'                  shift, and go to state 373
    '['                  shift, and go to state 374
    '#'                  shift, and go to state 375

    copy_or_move_or_clone  go to state 801
    dim_list               go to state 376


State 597

  550 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 550 (copy_or_move_or_clone)


State 598

  551 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 551 (copy_or_move_or_clone)


State 599

  549 copy_or_move_or_clone: '=' .

    $default  reduce using rule 549 (copy_or_move_or_clone)


State 600

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  563                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 802
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 803
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 601

  675 type_declaration_no_options: "type" '<' $@43 type_declaration . '>' $@44
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 804


State 602

  698 type_declaration_no_options: "array" '<' $@48 type_declaration . '>' $@49
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 805


State 603

  701 type_declaration_no_options: "table" '<' $@50 table_type_pair . '>' $@51

    '>'  shift, and go to state 806


State 604

  663 table_type_pair: type_declaration .
  664                | type_declaration . "end of expression" type_declaration
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 807
    '|'                  shift, and go to state 377

    $default  reduce using rule 663 (table_type_pair)


State 605

  763 make_struct_decl: "struct" '<' . $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    $default  reduce using rule 761 ($@79)

    $@79  go to state 808


State 606

  766 make_struct_decl: "class" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    $default  reduce using rule 764 ($@81)

    $@81  go to state 809


State 607

  265 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 263 ($@7)

    $@7  go to state 810


State 608

  267 expr_new: "new" new_type_declaration .
  268         | "new" new_type_declaration . '(' ')'
  269         | "new" new_type_declaration . '(' expr_list ')'
  270         | "new" new_type_declaration . '(' make_struct_single ')'

    '('  shift, and go to state 811

    '('       [reduce using rule 267 (expr_new)]
    $default  reduce using rule 267 (expr_new)


State 609

  266 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 266 (new_type_declaration)


State 610

  271 expr_new: "new" make_decl .

    $default  reduce using rule 271 (expr_new)


State 611

  311 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  312               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  313               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 812


State 612

  310 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 308 ($@15)

    $@15  go to state 813


State 613

  783 make_dim_decl: "array" '<' . $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 781 ($@89)

    $@89  go to state 814


State 614

  780 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 815
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 615

  792 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  793                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 816


State 616

  791 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 642
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    expr_map_tuple_list     go to state 817
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 617

  456 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 818
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 618

  301 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 299 ($@9)

    $@9  go to state 819


State 619

  304 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 302 ($@11)

    $@11  go to state 820


State 620

  457 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 821
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 621

  307 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 305 ($@13)

    $@13  go to state 822


State 622

  787 make_dim_decl: "fixed_array" '<' . $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 785 ($@91)

    $@91  go to state 823


State 623

  784 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 824
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 624

  772 make_struct_decl: "default" '<' . $@85 type_declaration_no_options '>' $@86

    $default  reduce using rule 770 ($@85)

    $@85  go to state 825


State 625

  778 make_tuple_call: "tuple" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    $default  reduce using rule 776 ($@87)

    $@87  go to state 826


State 626

  775 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 827
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 627

  769 make_struct_decl: "variant" '<' . $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    $default  reduce using rule 767 ($@83)

    $@83  go to state 828


State 628

  458 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  459     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 829


State 629

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  442     | "++" expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 442 (expr)


State 630

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  443     | "--" expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 443 (expr)


State 631

  488 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 830
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 632

  489 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 831
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 633

  490 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 832
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 634

  491 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 833
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 635

  492 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 834
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 636

  494 expr_mtag: "$c" '(' . expr ')' '(' ')'
  495          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 835
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 637

  249 expression_keyword: "keyword" '<' . $@3 type_declaration_no_options_list '>' $@4 expr

    $default  reduce using rule 247 ($@3)

    $@3  go to state 836


State 638

  252 expression_keyword: "type function" '<' . $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    $default  reduce using rule 250 ($@5)

    $@5  go to state 837


State 639

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 838
    "{"                   shift, and go to state 839

    character_sequence  go to state 840


State 640

  799 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 724
    "name"  shift, and go to state 725

    variable_name_with_pos_list  go to state 841


State 641

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  773 make_map_tuple: expr . "=>" expr
  774               | expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "=>"   shift, and go to state 842
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 774 (make_map_tuple)


State 642

  788 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 788 (expr_map_tuple_list)


State 643

  789 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  790 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 843

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 844


State 644

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  419 expr: '-' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 419 (expr)


State 645

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  418 expr: '+' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 418 (expr)


State 646

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  455     | '*' expr .
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 455 (expr)


State 647

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  417 expr: '~' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 417 (expr)


State 648

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  416 expr: '!' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 416 (expr)


State 649

  798 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 724
    "name"  shift, and go to state 725

    variable_name_with_pos_list  go to state 845


State 650

  315 expr_list: expr_list . ',' expr
  779 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 847


State 651

  314 expr_list: expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 314 (expr_list)


State 652

  315 expr_list: expr_list . ',' expr
  446 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 848


State 653

  321 block_or_lambda: '@' '@' .
  387 func_addr_expr: '@' '@' . func_addr_name
  390               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  503 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 849
    "$c"    shift, and go to state 850
    "name"  shift, and go to state 60
    '<'     shift, and go to state 851

    $default  reduce using rule 321 (block_or_lambda)

    name_in_namespace  go to state 852
    func_addr_name     go to state 853


State 654

  381 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  382                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  401 expr_call: name_in_namespace '(' . ')'
  402          | name_in_namespace '(' . make_struct_single ')'
  403          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 854
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 855
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 856
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 857
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 858
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_fields      go to state 859
    make_struct_single      go to state 860
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 655

  332 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 861

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 862


State 656

  464 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr "is" . basic_type_declaration
  466     | expr "is" . "name"
  502 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 863
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 864
    "name"      shift, and go to state 865

    basic_type_declaration  go to state 866


State 657

  467 expr: expr "as" . "name"
  470     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  471     | expr "as" . basic_type_declaration
  500 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 867
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 868
    "name"      shift, and go to state 869

    basic_type_declaration  go to state 870


State 658

  420 expr: expr "<<" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 871
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 659

  421 expr: expr ">>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 872
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 660

  444 expr: expr "++" .

    $default  reduce using rule 444 (expr)


State 661

  445 expr: expr "--" .

    $default  reduce using rule 445 (expr)


State 662

  433 expr: expr "<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 873
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 663

  434 expr: expr ">=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 874
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 664

  431 expr: expr "==" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 875
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 665

  432 expr: expr "!=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 876
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 666

  383 expr_method_call: expr "->" . "name" '(' ')'
  384                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 877


State 667

  460 expr: expr "??" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 878
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 668

  451 expr: expr "?." . "name"
  497 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 880


State 669

  449 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 881
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 670

  484 expr: expr "<|" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 882
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 671

  485 expr: expr "|>" . expr
  486     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 883
    expr_mtag               go to state 480
    basic_type_declaration  go to state 884
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 672

  422 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 885
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 673

  423 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 886
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 674

  438 expr: expr "&&" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 887
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 675

  439 expr: expr "||" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 888
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 676

  440 expr: expr "^^" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 889
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 677

  441 expr: expr ".." . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 890
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 678

  461 expr: expr '?' . expr ':' expr
  472     | expr '?' . "as" "name"
  475     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' . "as" basic_type_declaration
  501 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "as"                              shift, and go to state 891
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 892
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 679

  436 expr: expr '|' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 893
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 680

  437 expr: expr '^' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 894
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 681

  435 expr: expr '&' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 895
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 682

  429 expr: expr '<' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 896
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 683

  430 expr: expr '>' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 897
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 684

  425 expr: expr '-' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 898
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 685

  424 expr: expr '+' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 899
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 686

  426 expr: expr '*' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 900
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 687

  427 expr: expr '/' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 901
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 688

  428 expr: expr '%' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 902
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 689

  394 expr_field: expr '.' . "name"
  395           | expr '.' . '.' "name"
  396           | expr '.' . "name" '(' ')'
  397           | expr '.' . "name" '(' expr_list ')'
  400           | expr '.' . $@21 error $@22
  448 expr: expr '.' . '[' expr ']'
  450     | expr '.' . "?[" expr ']'
  452     | expr '.' . "?." "name"
  496 expr_mtag: expr '.' . "$f" '(' expr ')'
  498          | expr '.' . '.' "$f" '(' expr ')'
  499          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 903
    "?["    shift, and go to state 904
    "$f"    shift, and go to state 905
    "name"  shift, and go to state 906
    '.'     shift, and go to state 907
    '['     shift, and go to state 908

    $default  reduce using rule 398 ($@21)

    $@21  go to state 909


State 690

  447 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 910
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 691

  676 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 676 (type_declaration_no_options)


State 692

  404 expr_call: basic_type_declaration '(' . ')'
  405          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 911
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 912
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 693

  704 type_declaration_no_options: "iterator" '<' $@52 type_declaration . '>' $@53
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 913


State 694

  694 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration . '>' $@47
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 914


State 695

  653 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 653 (auto_type_declaration)


State 696

  655 bitfield_bits: "name" .

    $default  reduce using rule 655 (bitfield_bits)


State 697

  656 bitfield_bits: bitfield_bits . "end of expression" "name"
  662 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits . '>' $@42

    "end of expression"  shift, and go to state 915
    '>'                  shift, and go to state 916


State 698

  708 type_declaration_no_options: "block" '<' $@54 type_declaration . '>' $@55
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 917


State 699

  711 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list . optional_function_type '>' $@57

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 918


State 700

  715 type_declaration_no_options: "function" '<' $@58 type_declaration . '>' $@59
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 919


State 701

  718 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 920


State 702

  722 type_declaration_no_options: "lambda" '<' $@62 type_declaration . '>' $@63
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 921


State 703

  725 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 922


State 704

  530 tuple_type_list: tuple_type .

    $default  reduce using rule 530 (tuple_type_list)


State 705

  531 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  728 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list . '>' $@67

    "end of expression"  shift, and go to state 923
    '>'                  shift, and go to state 924


State 706

  536 variant_type_list: variant_type .

    $default  reduce using rule 536 (variant_type_list)


State 707

  537 variant_type_list: variant_type_list . "end of expression" variant_type
  731 type_declaration_no_options: "variant" '<' $@68 variant_type_list . '>' $@69

    "end of expression"  shift, and go to state 925
    '>'                  shift, and go to state 926


State 708

  654 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 654 (auto_type_declaration)


State 709

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 927
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 928


State 710

  677 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 929


State 711

  242 optional_expr_list: expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 930

    $default  reduce using rule 242 (optional_expr_list)


State 712

  680 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 713

  665 dim_list: '[' expr ']' .

    $default  reduce using rule 665 (dim_list)


State 714

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  666 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 931


State 715

  659 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 659 (bitfield_alias_bits)


State 716

  746 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@76 "begin of code block" $@77 bitfield_alias_bits $@78 "end of code block" .

    $default  reduce using rule 746 (bitfield_alias_declaration)


State 717

  529 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 932


State 718

  534 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 534 (tuple_alias_type_list)


State 719

  738 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 tuple_alias_type_list $@72 "end of code block" .

    $default  reduce using rule 738 (tuple_alias_declaration)


State 720

  535 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 933


State 721

  540 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 540 (variant_alias_type_list)


State 722

  742 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@73 "begin of code block" $@74 variant_alias_type_list $@75 "end of code block" .

    $default  reduce using rule 742 (variant_alias_declaration)


State 723

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  525 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 934


State 724

  614 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 935


State 725

  613 variable_name_with_pos_list: "name" .
  615                            | "name" . "aka" "name"

    "aka"  shift, and go to state 936

    $default  reduce using rule 613 (variable_name_with_pos_list)


State 726

  524 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 524 (function_argument_declaration)


State 727

  543 variable_declaration: variable_name_with_pos_list .
  544                     | variable_name_with_pos_list . '&'
  545                     | variable_name_with_pos_list . ':' type_declaration
  546                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  547                     | variable_name_with_pos_list . copy_or_move expr
  548                     | variable_name_with_pos_list . copy_or_move expr_pipe
  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 937
    ','   shift, and go to state 938
    '='   shift, and go to state 939
    ':'   shift, and go to state 940
    '&'   shift, and go to state 941

    $default  reduce using rule 543 (variable_declaration)

    copy_or_move  go to state 942


State 728

  527 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 527 (function_argument_list)


State 729

   75 expression_while_loop: "while" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 656
    "as"                   shift, and go to state 657
    "<<"                   shift, and go to state 658
    ">>"                   shift, and go to state 659
    "++"                   shift, and go to state 660
    "--"                   shift, and go to state 661
    "<="                   shift, and go to state 662
    ">="                   shift, and go to state 663
    "=="                   shift, and go to state 664
    "!="                   shift, and go to state 665
    "->"                   shift, and go to state 666
    "??"                   shift, and go to state 667
    "?."                   shift, and go to state 668
    "?["                   shift, and go to state 669
    "<|"                   shift, and go to state 670
    "|>"                   shift, and go to state 671
    "<<<"                  shift, and go to state 672
    ">>>"                  shift, and go to state 673
    "&&"                   shift, and go to state 674
    "||"                   shift, and go to state 675
    "^^"                   shift, and go to state 676
    ".."                   shift, and go to state 677
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 678
    '|'                    shift, and go to state 679
    '^'                    shift, and go to state 680
    '&'                    shift, and go to state 681
    '<'                    shift, and go to state 682
    '>'                    shift, and go to state 683
    '-'                    shift, and go to state 684
    '+'                    shift, and go to state 685
    '*'                    shift, and go to state 686
    '/'                    shift, and go to state 687
    '%'                    shift, and go to state 688
    '.'                    shift, and go to state 689
    '['                    shift, and go to state 690

    expression_block  go to state 943


State 730

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list expression_block
  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 944
    ','   shift, and go to state 938


State 731

  276 expression_return_no_pipe: "return" "<-" . expr_list
  279 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 945
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 946
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 735
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 732

  278 expression_return: "return" expr_pipe .

    $default  reduce using rule 278 (expression_return)


State 733

  275 expression_return_no_pipe: "return" expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 930

    $default  reduce using rule 275 (expression_return_no_pipe)


State 734

  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 770


State 735

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  314 expr_list: expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "+="    shift, and go to state 947
    "-="    shift, and go to state 948
    "/="    shift, and go to state 949
    "*="    shift, and go to state 950
    "%="    shift, and go to state 951
    "&="    shift, and go to state 952
    "|="    shift, and go to state 953
    "^="    shift, and go to state 954
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    "<<="   shift, and go to state 955
    ">>="   shift, and go to state 956
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "<-"    shift, and go to state 957
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "<<<="  shift, and go to state 958
    ">>>="  shift, and go to state 959
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    "&&="   shift, and go to state 960
    "||="   shift, and go to state 961
    "^^="   shift, and go to state 962
    ".."    shift, and go to state 677
    '='     shift, and go to state 963
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690
    '$'     shift, and go to state 461
    '@'     shift, and go to state 749

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 314 (expr_list)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 736

  285 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 964


State 737

  262 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 965
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 738

  261 expression_delete: "delete" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 261 (expression_delete)


State 739

   76 expression_with: "with" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 656
    "as"                   shift, and go to state 657
    "<<"                   shift, and go to state 658
    ">>"                   shift, and go to state 659
    "++"                   shift, and go to state 660
    "--"                   shift, and go to state 661
    "<="                   shift, and go to state 662
    ">="                   shift, and go to state 663
    "=="                   shift, and go to state 664
    "!="                   shift, and go to state 665
    "->"                   shift, and go to state 666
    "??"                   shift, and go to state 667
    "?."                   shift, and go to state 668
    "?["                   shift, and go to state 669
    "<|"                   shift, and go to state 670
    "|>"                   shift, and go to state 671
    "<<<"                  shift, and go to state 672
    ">>>"                  shift, and go to state 673
    "&&"                   shift, and go to state 674
    "||"                   shift, and go to state 675
    "^^"                   shift, and go to state 676
    ".."                   shift, and go to state 677
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 678
    '|'                    shift, and go to state 679
    '^'                    shift, and go to state 680
    '&'                    shift, and go to state 681
    '<'                    shift, and go to state 682
    '>'                    shift, and go to state 683
    '-'                    shift, and go to state 684
    '+'                    shift, and go to state 685
    '*'                    shift, and go to state 686
    '/'                    shift, and go to state 687
    '%'                    shift, and go to state 688
    '.'                    shift, and go to state 689
    '['                    shift, and go to state 690

    expression_block  go to state 966


State 740

   77 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 967


State 741

  236 expression_any: "pass" "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 742

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 968


State 743

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 969


State 744

   56 expression_goto: "goto" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 56 (expression_goto)


State 745

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 746

  281 expression_yield_no_pipe: "yield" "<-" . expr
  284 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 970
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 971
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 747

  283 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 283 (expression_yield)


State 748

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  280 expression_yield_no_pipe: "yield" expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "+="    shift, and go to state 947
    "-="    shift, and go to state 948
    "/="    shift, and go to state 949
    "*="    shift, and go to state 950
    "%="    shift, and go to state 951
    "&="    shift, and go to state 952
    "|="    shift, and go to state 953
    "^="    shift, and go to state 954
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    "<<="   shift, and go to state 955
    ">>="   shift, and go to state 956
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "<-"    shift, and go to state 957
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "<<<="  shift, and go to state 958
    ">>>="  shift, and go to state 959
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    "&&="   shift, and go to state 960
    "||="   shift, and go to state 961
    "^^="   shift, and go to state 962
    ".."    shift, and go to state 677
    '='     shift, and go to state 963
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690
    '$'     shift, and go to state 461
    '@'     shift, and go to state 749

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 280 (expression_yield_no_pipe)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 749

  320 block_or_lambda: '@' .
  321                | '@' . '@'

    '@'  shift, and go to state 972

    $default  reduce using rule 320 (block_or_lambda)


State 750

  330 expr_block: expression_block .

    $default  reduce using rule 330 (expr_block)


State 751

  331 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 973


State 752

  256 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 753

  254 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 754

  255 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 755

  240 expr_keyword: "keyword" expr . expression_block
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 656
    "as"                   shift, and go to state 657
    "<<"                   shift, and go to state 658
    ">>"                   shift, and go to state 659
    "++"                   shift, and go to state 660
    "--"                   shift, and go to state 661
    "<="                   shift, and go to state 662
    ">="                   shift, and go to state 663
    "=="                   shift, and go to state 664
    "!="                   shift, and go to state 665
    "->"                   shift, and go to state 666
    "??"                   shift, and go to state 667
    "?."                   shift, and go to state 668
    "?["                   shift, and go to state 669
    "<|"                   shift, and go to state 670
    "|>"                   shift, and go to state 671
    "<<<"                  shift, and go to state 672
    ">>>"                  shift, and go to state 673
    "&&"                   shift, and go to state 674
    "||"                   shift, and go to state 675
    "^^"                   shift, and go to state 676
    ".."                   shift, and go to state 677
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 678
    '|'                    shift, and go to state 679
    '^'                    shift, and go to state 680
    '&'                    shift, and go to state 681
    '<'                    shift, and go to state 682
    '>'                    shift, and go to state 683
    '-'                    shift, and go to state 684
    '+'                    shift, and go to state 685
    '*'                    shift, and go to state 686
    '/'                    shift, and go to state 687
    '%'                    shift, and go to state 688
    '.'                    shift, and go to state 689
    '['                    shift, and go to state 690

    expression_block  go to state 974


State 756

  213 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 975


State 757

  234 expression_any: expression_label "end of expression" .

    $default  reduce using rule 234 (expression_any)


State 758

  235 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 759

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 656
    "as"                   shift, and go to state 657
    "<<"                   shift, and go to state 658
    ">>"                   shift, and go to state 659
    "++"                   shift, and go to state 660
    "--"                   shift, and go to state 661
    "<="                   shift, and go to state 662
    ">="                   shift, and go to state 663
    "=="                   shift, and go to state 664
    "!="                   shift, and go to state 665
    "->"                   shift, and go to state 666
    "??"                   shift, and go to state 667
    "?."                   shift, and go to state 668
    "?["                   shift, and go to state 669
    "<|"                   shift, and go to state 670
    "|>"                   shift, and go to state 671
    "<<<"                  shift, and go to state 672
    ">>>"                  shift, and go to state 673
    "&&"                   shift, and go to state 674
    "||"                   shift, and go to state 675
    "^^"                   shift, and go to state 676
    ".."                   shift, and go to state 677
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 678
    '|'                    shift, and go to state 679
    '^'                    shift, and go to state 680
    '&'                    shift, and go to state 681
    '<'                    shift, and go to state 682
    '>'                    shift, and go to state 683
    '-'                    shift, and go to state 684
    '+'                    shift, and go to state 685
    '*'                    shift, and go to state 686
    '/'                    shift, and go to state 687
    '%'                    shift, and go to state 688
    '.'                    shift, and go to state 689
    '['                    shift, and go to state 690

    expression_block  go to state 976


State 760

   72 expression_if_then_else: expression_if_one_liner "if" . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 977
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 761

  333 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 113 (optional_annotation_list)]
    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 978


State 762

  215 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 215 (expr_call_pipe)


State 763

  221 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 764

  228 expression_any: expression_break "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 765

  229 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 766

  277 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 277 (expression_return)


State 767

  282 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 282 (expression_yield)


State 768

  291 optional_in_scope: "inscope" .

    $default  reduce using rule 291 (optional_in_scope)


State 769

  297 expression_let: kwd_let optional_in_scope . let_variable_declaration
  298               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 346
    "name"  shift, and go to state 347
    '('     shift, and go to state 979

    tuple_expansion_variable_declaration  go to state 980
    let_variable_name_with_pos_list       go to state 348
    let_variable_declaration              go to state 981


State 770

  253 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 982


State 771

  220 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 220 (expression_any)


State 772

  351 expr_assign: expr "+=" . expr
  372 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 987
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 988
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 773

  352 expr_assign: expr "-=" . expr
  373 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 989
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 990
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 774

  354 expr_assign: expr "/=" . expr
  375 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 991
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 992
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 775

  353 expr_assign: expr "*=" . expr
  374 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 994
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 776

  355 expr_assign: expr "%=" . expr
  376 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 996
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 777

  345 expr_assign: expr "&=" . expr
  366 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 997
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 998
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 778

  346 expr_assign: expr "|=" . expr
  367 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 999
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1000
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 779

  347 expr_assign: expr "^=" . expr
  368 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1002
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 780

  356 expr_assign: expr "<<=" . expr
  377 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1003
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1004
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 781

  357 expr_assign: expr ">>=" . expr
  378 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1005
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1006
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 782

  343 expr_assign: expr "<-" . expr
  365 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1008
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 783

  344 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1009
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 784

  358 expr_assign: expr "<<<=" . expr
  379 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1011
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 785

  359 expr_assign: expr ">>>=" . expr
  380 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1013
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 786

  348 expr_assign: expr "&&=" . expr
  369 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1015
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 787

  349 expr_assign: expr "||=" . expr
  370 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1017
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 788

  350 expr_assign: expr "^^=" . expr
  371 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1019
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 789

  342 expr_assign: expr '=' . expr
  364 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 983
    "@ <|"                            shift, and go to state 984
    "@@ <|"                           shift, and go to state 985
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 986
    expression_keyword      go to state 571
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign_pipe_right  go to state 1020
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1021
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 790

  214 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 214 (expr_call_pipe)


State 791

  577 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 577 (enum_list)


State 792

  578 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1022
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 793

  594 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@35 enum_list $@36 "end of code block" .

    $default  reduce using rule 594 (enum_declaration)


State 794

  576 enum_list: enum_list . "end of expression"
  577          | enum_list . "name" "end of expression"
  578          | enum_list . "name" '=' expr "end of expression"
  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list . $@38 "end of code block"

    "name"               shift, and go to state 586
    "end of expression"  shift, and go to state 587

    $default  reduce using rule 596 ($@38)

    $@38  go to state 1023


State 795

  609 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 609 (optional_struct_variable_declaration_list)


State 796

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  523                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 1024


State 797

  519 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '<'  shift, and go to state 218

    $default  reduce using rule 504 (optional_field_annotation)

    optional_field_annotation       go to state 1025
    structure_variable_declaration  go to state 1026


State 798

  555 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 555 (let_variable_name_with_pos_list)


State 799

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1027


State 800

  559 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 559 (let_variable_declaration)


State 801

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  561                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 1028
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1029
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 802

  563 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 563 (let_variable_declaration)


State 803

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "+="                 shift, and go to state 947
    "-="                 shift, and go to state 948
    "/="                 shift, and go to state 949
    "*="                 shift, and go to state 950
    "%="                 shift, and go to state 951
    "&="                 shift, and go to state 952
    "|="                 shift, and go to state 953
    "^="                 shift, and go to state 954
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    "<<="                shift, and go to state 955
    ">>="                shift, and go to state 956
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "<-"                 shift, and go to state 957
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    ":="                 shift, and go to state 783
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "<<<="               shift, and go to state 958
    ">>>="               shift, and go to state 959
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    "&&="                shift, and go to state 960
    "||="                shift, and go to state 961
    "^^="                shift, and go to state 962
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1030
    '='                  shift, and go to state 963
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690
    '$'                  shift, and go to state 461
    '@'                  shift, and go to state 749

    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 804

  675 type_declaration_no_options: "type" '<' $@43 type_declaration '>' . $@44

    $default  reduce using rule 674 ($@44)

    $@44  go to state 1031


State 805

  698 type_declaration_no_options: "array" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 697 ($@49)

    $@49  go to state 1032


State 806

  701 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' . $@51

    $default  reduce using rule 700 ($@51)

    $@51  go to state 1033


State 807

  664 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1034


State 808

  763 make_struct_decl: "struct" '<' $@79 . type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1035


State 809

  766 make_struct_decl: "class" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1036


State 810

  265 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1037


State 811

  268 expr_new: "new" new_type_declaration '(' . ')'
  269         | "new" new_type_declaration '(' . expr_list ')'
  270         | "new" new_type_declaration '(' . make_struct_single ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 854
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 855
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 1038
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1039
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_fields      go to state 859
    make_struct_single      go to state 1040
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 812

  311 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  312               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '<'                               shift, and go to state 1041
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1042
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 813

  310 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1043


State 814

  783 make_dim_decl: "array" '<' $@89 . type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1044


State 815

  315 expr_list: expr_list . ',' expr
  780 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1045


State 816

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  792 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  793                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 366
    "implicit"           shift, and go to state 367
    "explicit"           shift, and go to state 368
    "=="                 shift, and go to state 369
    "??"                 shift, and go to state 370
    "end of expression"  shift, and go to state 1046
    '?'                  shift, and go to state 371
    '&'                  shift, and go to state 372
    '>'                  shift, and go to state 1047
    '-'                  shift, and go to state 373
    '['                  shift, and go to state 374
    '#'                  shift, and go to state 375

    dim_list  go to state 376


State 817

  789 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  791 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 843

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1048


State 818

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  456     | "deref" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1049


State 819

  301 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1050


State 820

  304 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1051


State 821

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  457     | "addr" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1052


State 822

  307 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1053


State 823

  787 make_dim_decl: "fixed_array" '<' $@91 . type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1054


State 824

  315 expr_list: expr_list . ',' expr
  784 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1055


State 825

  772 make_struct_decl: "default" '<' $@85 . type_declaration_no_options '>' $@86

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1056


State 826

  778 make_tuple_call: "tuple" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1057


State 827

  315 expr_list: expr_list . ',' expr
  775 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1058


State 828

  769 make_struct_decl: "variant" '<' $@83 . type_declaration_no_options '>' $@84 '(' make_struct_single ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1059


State 829

  458 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1060
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 830

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  488 expr_mtag: "$$" '(' expr . ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1061


State 831

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  489 expr_mtag: "$i" '(' expr . ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1062


State 832

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$v" '(' expr . ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1063


State 833

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$b" '(' expr . ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1064


State 834

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$a" '(' expr . ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1065


State 835

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$c" '(' expr . ')' '(' ')'
  495          | "$c" '(' expr . ')' '(' expr_list ')'
  496          | expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1066


State 836

  249 expression_keyword: "keyword" '<' $@3 . type_declaration_no_options_list '>' $@4 expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 1067
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 928


State 837

  252 expression_keyword: "type function" '<' $@5 . type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    type_declaration_no_options_list  go to state 1068
    name_in_namespace                 go to state 266
    basic_type_declaration            go to state 267
    structure_type_declaration        go to state 268
    auto_type_declaration             go to state 269
    bitfield_type_declaration         go to state 270
    type_declaration_no_options       go to state 271
    type_declaration                  go to state 928


State 838

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 839

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1069
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 840

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 841

  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1070
    ','   shift, and go to state 938


State 842

  773 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1071
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 843

  789 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  797 optional_comma: ',' .

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 797 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 1072
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 844

  790 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1073


State 845

  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  798 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1074
    ','   shift, and go to state 938


State 846

  315 expr_list: expr_list ',' . expr
  797 optional_comma: ',' .

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 797 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1075
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 847

  779 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1076


State 848

  446 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1077


State 849

  386 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1078


State 850

  503 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1079


State 851

  390 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  393               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 391 ($@19)
    '>'       reduce using rule 391 ($@19)
    '('       reduce using rule 391 ($@19)
    $default  reduce using rule 388 ($@17)

    $@17  go to state 1080
    $@19  go to state 1081


State 852

  385 func_addr_name: name_in_namespace .

    $default  reduce using rule 385 (func_addr_name)


State 853

  387 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 387 (func_addr_expr)


State 854

  756 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  757                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1082


State 855

  258 name_in_namespace: "name" .
  259                  | "name" . "::" "name"
  752 make_struct_fields: "name" . copy_or_move expr
  753                   | "name" . ":=" expr

    "<-"  shift, and go to state 937
    ":="  shift, and go to state 1083
    "::"  shift, and go to state 99
    '='   shift, and go to state 939

    $default  reduce using rule 258 (name_in_namespace)

    copy_or_move  go to state 1084


State 856

  381 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  779 make_dim_decl: '[' . expr_list optional_comma ']'
  798 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 649
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 854
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 855
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 650
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_fields      go to state 1085
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 857

  401 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 401 (expr_call)


State 858

  315 expr_list: expr_list . ',' expr
  382 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1086
    ')'  shift, and go to state 1087


State 859

  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  760 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1088

    $default  reduce using rule 760 (make_struct_single)


State 860

  402 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1089


State 861

  329 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1090


State 862

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1091


State 863

  464 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1092


State 864

  502 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1093


State 865

  466 expr: expr "is" "name" .

    $default  reduce using rule 466 (expr)


State 866

  465 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 465 (expr)


State 867

  470 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1094


State 868

  500 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1095


State 869

  467 expr: expr "as" "name" .

    $default  reduce using rule 467 (expr)


State 870

  471 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 471 (expr)


State 871

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  420     | expr "<<" expr .
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '-'   shift, and go to state 684
    '+'   shift, and go to state 685
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 420 (expr)


State 872

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  421     | expr ">>" expr .
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '-'   shift, and go to state 684
    '+'   shift, and go to state 685
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 421 (expr)


State 873

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  433     | expr "<=" expr .
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 433 (expr)


State 874

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  434     | expr ">=" expr .
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 434 (expr)


State 875

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  431     | expr "==" expr .
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 431 (expr)


State 876

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  432     | expr "!=" expr .
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 432 (expr)


State 877

  383 expr_method_call: expr "->" "name" . '(' ')'
  384                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1096


State 878

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  460     | expr "??" expr .
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 460 (expr)


State 879

  497 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1097


State 880

  451 expr: expr "?." "name" .

    $default  reduce using rule 451 (expr)


State 881

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  449     | expr "?[" expr . ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 1098


State 882

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  484     | expr "<|" expr .
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 484 (expr)


State 883

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  485     | expr "|>" expr .
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 666
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 485 (expr)


State 884

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'
  486 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 692

    $default  reduce using rule 486 (expr)


State 885

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  422     | expr "<<<" expr .
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '-'   shift, and go to state 684
    '+'   shift, and go to state 685
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 422 (expr)


State 886

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  423     | expr ">>>" expr .
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '-'   shift, and go to state 684
    '+'   shift, and go to state 685
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 423 (expr)


State 887

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  438     | expr "&&" expr .
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 438 (expr)


State 888

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  439     | expr "||" expr .
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "^^"   shift, and go to state 676
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 439 (expr)


State 889

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  440     | expr "^^" expr .
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 440 (expr)


State 890

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  441     | expr ".." expr .
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    ".."  error (nonassociative)

    $default  reduce using rule 441 (expr)


State 891

  472 expr: expr '?' "as" . "name"
  475     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  476     | expr '?' "as" . basic_type_declaration
  501 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1099
    "bool"      shift, and go to state 231
    "void"      shift, and go to state 232
    "string"    shift, and go to state 233
    "int"       shift, and go to state 235
    "int2"      shift, and go to state 236
    "int3"      shift, and go to state 237
    "int4"      shift, and go to state 238
    "uint"      shift, and go to state 239
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 241
    "uint3"     shift, and go to state 242
    "uint4"     shift, and go to state 243
    "float"     shift, and go to state 244
    "float2"    shift, and go to state 245
    "float3"    shift, and go to state 246
    "float4"    shift, and go to state 247
    "range"     shift, and go to state 248
    "urange"    shift, and go to state 249
    "range64"   shift, and go to state 250
    "urange64"  shift, and go to state 251
    "int64"     shift, and go to state 253
    "uint64"    shift, and go to state 254
    "double"    shift, and go to state 255
    "int8"      shift, and go to state 258
    "uint8"     shift, and go to state 259
    "int16"     shift, and go to state 260
    "uint16"    shift, and go to state 261
    "$f"        shift, and go to state 1100
    "name"      shift, and go to state 1101

    basic_type_declaration  go to state 1102


State 892

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr . ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    ':'    shift, and go to state 1103
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690


State 893

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  436     | expr '|' expr .
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 436 (expr)


State 894

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  437     | expr '^' expr .
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 437 (expr)


State 895

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  435     | expr '&' expr .
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 435 (expr)


State 896

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  429     | expr '<' expr .
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 429 (expr)


State 897

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  430     | expr '>' expr .
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 430 (expr)


State 898

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  425     | expr '-' expr .
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 425 (expr)


State 899

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  424     | expr '+' expr .
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '*'   shift, and go to state 686
    '/'   shift, and go to state 687
    '%'   shift, and go to state 688
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 424 (expr)


State 900

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  426     | expr '*' expr .
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 426 (expr)


State 901

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  427     | expr '/' expr .
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 427 (expr)


State 902

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  428     | expr '%' expr .
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 656
    "as"  shift, and go to state 657
    "++"  shift, and go to state 660
    "--"  shift, and go to state 661
    "->"  shift, and go to state 666
    "??"  shift, and go to state 667
    "?."  shift, and go to state 668
    "?["  shift, and go to state 669
    "<|"  shift, and go to state 670
    "|>"  shift, and go to state 671
    '.'   shift, and go to state 689
    '['   shift, and go to state 690

    $default  reduce using rule 428 (expr)


State 903

  452 expr: expr '.' "?." . "name"
  499 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1104
    "name"  shift, and go to state 1105


State 904

  450 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1106
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 905

  496 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1107


State 906

  394 expr_field: expr '.' "name" .
  396           | expr '.' "name" . '(' ')'
  397           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1108

    '('       [reduce using rule 394 (expr_field)]
    $default  reduce using rule 394 (expr_field)


State 907

  395 expr_field: expr '.' '.' . "name"
  498 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1109
    "name"  shift, and go to state 1110


State 908

  448 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1111
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 909

  400 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1112


State 910

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  447     | expr '[' expr . ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 1113


State 911

  404 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 404 (expr_call)


State 912

  315 expr_list: expr_list . ',' expr
  405 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 930
    ')'  shift, and go to state 1114


State 913

  704 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 703 ($@53)

    $@53  go to state 1115


State 914

  694 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 693 ($@47)

    $@47  go to state 1116


State 915

  656 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1117


State 916

  662 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' . $@42

    $default  reduce using rule 661 ($@42)

    $@42  go to state 1118


State 917

  708 type_declaration_no_options: "block" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 707 ($@55)

    $@55  go to state 1119


State 918

  711 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type . '>' $@57

    '>'  shift, and go to state 1120


State 919

  715 type_declaration_no_options: "function" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 714 ($@59)

    $@59  go to state 1121


State 920

  718 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1122


State 921

  722 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 721 ($@63)

    $@63  go to state 1123


State 922

  725 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1124


State 923

  531 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 517
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    tuple_type                   go to state 1125
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 520


State 924

  728 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' . $@67

    $default  reduce using rule 727 ($@67)

    $@67  go to state 1126


State 925

  537 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 522

    variant_type  go to state 1127


State 926

  731 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' . $@69

    $default  reduce using rule 730 ($@69)

    $@69  go to state 1128


State 927

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1129
    '>'                  shift, and go to state 1130


State 928

  245 type_declaration_no_options_list: type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 245 (type_declaration_no_options_list)


State 929

  677 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 677 (type_declaration_no_options)


State 930

  315 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1075
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 931

  666 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 666 (dim_list)


State 932

  529 tuple_type: "name" ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 529 (tuple_type)


State 933

  535 variant_type: "name" ':' type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 535 (variant_type)


State 934

  525 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 525 (function_argument_declaration)


State 935

  614 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1131
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 936

  615 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1132


State 937

  542 copy_or_move: "<-" .

    $default  reduce using rule 542 (copy_or_move)


State 938

  616 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  617                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1133


State 939

  541 copy_or_move: '=' .

    $default  reduce using rule 541 (copy_or_move)


State 940

  545 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  546                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1134


State 941

  544 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 544 (variable_declaration)


State 942

  547 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  548                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 568
    expression_keyword      go to state 571
    expr_pipe               go to state 1135
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_assign             go to state 734
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1136
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 943

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 944

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1137
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 945

  279 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 279 (expression_return)


State 946

  276 expression_return_no_pipe: "return" "<-" expr_list .
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 930

    $default  reduce using rule 276 (expression_return_no_pipe)


State 947

  351 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1138
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 948

  352 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1139
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 949

  354 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1140
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 950

  353 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1141
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 951

  355 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1142
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 952

  345 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1143
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 953

  346 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1144
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 954

  347 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1145
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 955

  356 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1146
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 956

  357 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1147
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 957

  343 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1148
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 958

  358 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1149
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 959

  359 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1150
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 960

  348 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1151
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 961

  349 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1152
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 962

  350 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1153
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 963

  342 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1154
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 964

  285 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1155


State 965

  262 expression_delete: "delete" "explicit" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 262 (expression_delete)


State 966

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 967

   77 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1156
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 968

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 969

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 970

  284 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 284 (expression_yield)


State 971

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  281 expression_yield_no_pipe: "yield" "<-" expr .
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "+="    shift, and go to state 947
    "-="    shift, and go to state 948
    "/="    shift, and go to state 949
    "*="    shift, and go to state 950
    "%="    shift, and go to state 951
    "&="    shift, and go to state 952
    "|="    shift, and go to state 953
    "^="    shift, and go to state 954
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    "<<="   shift, and go to state 955
    ">>="   shift, and go to state 956
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "<-"    shift, and go to state 957
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "<<<="  shift, and go to state 958
    ">>>="  shift, and go to state 959
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    "&&="   shift, and go to state 960
    "||="   shift, and go to state 961
    "^^="   shift, and go to state 962
    ".."    shift, and go to state 677
    '='     shift, and go to state 963
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690
    '$'     shift, and go to state 461
    '@'     shift, and go to state 749

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 281 (expression_yield_no_pipe)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 972

  321 block_or_lambda: '@' '@' .

    $default  reduce using rule 321 (block_or_lambda)


State 973

  331 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 861

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1157


State 974

  240 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 240 (expr_keyword)


State 975

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 237 (expressions)

    expressions  go to state 1158


State 976

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1159
    "elif"         shift, and go to state 1160
    "static_elif"  shift, and go to state 1161

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1162
    expression_else      go to state 1163


State 977

   72 expression_if_then_else: expression_if_one_liner "if" expr . expression_else_one_liner "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1164
    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    ".."    shift, and go to state 677
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1165


State 978

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 861

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1166


State 979

  295 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1167

    tuple_expansion  go to state 1168


State 980

  298 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 981

  297 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 297 (expression_let)


State 982

  253 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 983

  362 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 1169


State 984

  360 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 1170


State 985

  361 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 331
    '$'                    shift, and go to state 461
    '@'                    shift, and go to state 749

    expression_block  go to state 750
    block_or_lambda   go to state 751
    expr_block        go to state 1171


State 986

  363 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 363 (expr_assign_pipe_right)


State 987

  372 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 988

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "+=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 989

  373 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 990

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "-=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 991

  375 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 992

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "/=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 993

  374 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 994

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "*=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 995

  376 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 996

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "%=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 997

  366 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 366 (expr_assign_pipe)


State 998

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr "&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 999

  367 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1000

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  346 expr_assign: expr "|=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 346 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1001

  368 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 1002

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1003

  377 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 1004

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1005

  378 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1006

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr ">>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1007

  365 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 365 (expr_assign_pipe)


State 1008

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1009

  344 expr_assign: expr ":=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 344 (expr_assign)


State 1010

  379 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1011

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "<<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1012

  380 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1013

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr ">>>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1014

  369 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 1015

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "&&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1016

  370 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 1017

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "||=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1018

  371 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1019

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "^^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1020

  364 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 364 (expr_assign_pipe)


State 1021

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  342 expr_assign: expr '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    '$'    shift, and go to state 461
    '@'    shift, and go to state 749

    $default  reduce using rule 342 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1022

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  578 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1172
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690


State 1023

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 . "end of code block"

    "end of code block"  shift, and go to state 1173


State 1024

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  523                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1174
    "private"  shift, and go to state 1175

    $default  reduce using rule 511 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1176


State 1025

  516 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1177

    $default  reduce using rule 514 (optional_static_member_variable)

    optional_static_member_variable  go to state 1178


State 1026

  519 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1179


State 1027

  558 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 1028

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 561 (let_variable_declaration)


State 1029

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "+="                 shift, and go to state 947
    "-="                 shift, and go to state 948
    "/="                 shift, and go to state 949
    "*="                 shift, and go to state 950
    "%="                 shift, and go to state 951
    "&="                 shift, and go to state 952
    "|="                 shift, and go to state 953
    "^="                 shift, and go to state 954
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    "<<="                shift, and go to state 955
    ">>="                shift, and go to state 956
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "<-"                 shift, and go to state 957
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    ":="                 shift, and go to state 783
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "<<<="               shift, and go to state 958
    ">>>="               shift, and go to state 959
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    "&&="                shift, and go to state 960
    "||="                shift, and go to state 961
    "^^="                shift, and go to state 962
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1180
    '='                  shift, and go to state 963
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690
    '$'                  shift, and go to state 461
    '@'                  shift, and go to state 749

    $default  reduce using rule 341 (expr_assign)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1030

  562 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 562 (let_variable_declaration)


State 1031

  675 type_declaration_no_options: "type" '<' $@43 type_declaration '>' $@44 .

    $default  reduce using rule 675 (type_declaration_no_options)


State 1032

  698 type_declaration_no_options: "array" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1033

  701 type_declaration_no_options: "table" '<' $@50 table_type_pair '>' $@51 .

    $default  reduce using rule 701 (type_declaration_no_options)


State 1034

  664 table_type_pair: type_declaration "end of expression" type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 664 (table_type_pair)


State 1035

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options . '>' $@80 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1181
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1036

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1182
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1037

  265 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1183


State 1038

  268 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 268 (expr_new)


State 1039

  269 expr_new: "new" new_type_declaration '(' expr_list . ')'
  315 expr_list: expr_list . ',' expr

    ','  shift, and go to state 930
    ')'  shift, and go to state 1184


State 1040

  270 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1185


State 1041

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1186


State 1042

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1187


State 1043

  310 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1188


State 1044

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options . '>' $@90 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1189
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1045

  780 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1190


State 1046

  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1191


State 1047

  792 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1192


State 1048

  791 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1193


State 1049

  456 expr: "deref" '(' expr ')' .

    $default  reduce using rule 456 (expr)


State 1050

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1194
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1051

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1195
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1052

  457 expr: "addr" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 1053

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1196
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1054

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options . '>' $@92 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1197
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1055

  784 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1198


State 1056

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  772 make_struct_decl: "default" '<' $@85 type_declaration_no_options . '>' $@86

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1199
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1057

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1200
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1058

  775 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1201


State 1059

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options . '>' $@84 '(' make_struct_single ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1202
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1060

  458 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 861

    $default  reduce using rule 328 (optional_capture_list)

    optional_capture_list  go to state 1203


State 1061

  488 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 1062

  489 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1063

  490 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1064

  491 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1065

  492 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1066

  494 expr_mtag: "$c" '(' expr ')' . '(' ')'
  495          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1204


State 1067

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list . '>' $@4 expr

    "end of expression"  shift, and go to state 1129
    '>'                  shift, and go to state 1205


State 1068

  246 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list . '>' $@6 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1129
    '>'                  shift, and go to state 1206


State 1069

   30 string_builder_body: string_builder_body "{" expr . "}"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    "}"    shift, and go to state 1207
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690


State 1070

  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1208
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1071

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  773 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 773 (make_map_tuple)


State 1072

  789 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 789 (expr_map_tuple_list)


State 1073

  790 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 790 (make_table_decl)


State 1074

  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1209
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1075

  315 expr_list: expr_list ',' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 315 (expr_list)


State 1076

  779 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 779 (make_dim_decl)


State 1077

  446 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 446 (expr)


State 1078

  386 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1210
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1079

  503 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1211
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1080

  390 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1212


State 1081

  393 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1213


State 1082

  756 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  757                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1214
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1083

  753 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1215
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1084

  752 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1216
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1085

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1088
    ']'  shift, and go to state 1217


State 1086

  315 expr_list: expr_list ',' . expr
  382 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 1218
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1075
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1087

  403 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 403 (expr_call)


State 1088

  754 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  755                   | make_struct_fields ',' . "name" ":=" expr
  758                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1219
    "name"  shift, and go to state 1220


State 1089

  402 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 402 (expr_call)


State 1090

  329 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1221
    ":="  shift, and go to state 1222
    '='   shift, and go to state 1223
    '&'   shift, and go to state 1224

    capture_entry  go to state 1225
    capture_list   go to state 1226


State 1091

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1227


State 1092

  464 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 462 ($@23)

    $@23  go to state 1228


State 1093

  502 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1229
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1094

  470 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 468 ($@25)

    $@25  go to state 1230


State 1095

  500 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1231
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1096

  383 expr_method_call: expr "->" "name" '(' . ')'
  384                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 1232
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1233
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1097

  497 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1234
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1098

  449 expr: expr "?[" expr ']' .

    $default  reduce using rule 449 (expr)


State 1099

  475 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1235


State 1100

  501 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1236


State 1101

  472 expr: expr '?' "as" "name" .

    $default  reduce using rule 472 (expr)


State 1102

  476 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 476 (expr)


State 1103

  461 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1237
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1104

  499 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1238


State 1105

  452 expr: expr '.' "?." "name" .

    $default  reduce using rule 452 (expr)


State 1106

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  450     | expr '.' "?[" expr . ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 1239


State 1107

  496 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1240
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1108

  396 expr_field: expr '.' "name" '(' . ')'
  397           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 1241
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1242
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1109

  498 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1243


State 1110

  395 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 395 (expr_field)


State 1111

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  448     | expr '.' '[' expr . ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ']'    shift, and go to state 1244


State 1112

  400 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 399 ($@22)

    $@22  go to state 1245


State 1113

  447 expr: expr '[' expr ']' .

    $default  reduce using rule 447 (expr)


State 1114

  405 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 405 (expr_call)


State 1115

  704 type_declaration_no_options: "iterator" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 704 (type_declaration_no_options)


State 1116

  694 type_declaration_no_options: "smart_ptr" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 694 (type_declaration_no_options)


State 1117

  656 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 656 (bitfield_bits)


State 1118

  662 bitfield_type_declaration: "bitfield" '<' $@41 bitfield_bits '>' $@42 .

    $default  reduce using rule 662 (bitfield_type_declaration)


State 1119

  708 type_declaration_no_options: "block" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 708 (type_declaration_no_options)


State 1120

  711 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' . $@57

    $default  reduce using rule 710 ($@57)

    $@57  go to state 1246


State 1121

  715 type_declaration_no_options: "function" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1122

  718 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 717 ($@61)

    $@61  go to state 1247


State 1123

  722 type_declaration_no_options: "lambda" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1124

  725 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 724 ($@65)

    $@65  go to state 1248


State 1125

  531 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 531 (tuple_type_list)


State 1126

  728 type_declaration_no_options: "tuple" '<' $@66 tuple_type_list '>' $@67 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1127

  537 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 537 (variant_type_list)


State 1128

  731 type_declaration_no_options: "variant" '<' $@68 variant_type_list '>' $@69 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1129

  246 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1249


State 1130

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1250


State 1131

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  614 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1251


State 1132

  615 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 615 (variable_name_with_pos_list)


State 1133

  616 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  617                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1252

    $default  reduce using rule 616 (variable_name_with_pos_list)


State 1134

  545 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  546                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 937
    '='   shift, and go to state 939
    '|'   shift, and go to state 377

    $default  reduce using rule 545 (variable_declaration)

    copy_or_move  go to state 1253


State 1135

  548 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 548 (variable_declaration)


State 1136

  214 expr_call_pipe: expr . expr_full_block_assumed_piped
  341 expr_assign: expr .
  342            | expr . '=' expr
  343            | expr . "<-" expr
  344            | expr . ":=" expr
  345            | expr . "&=" expr
  346            | expr . "|=" expr
  347            | expr . "^=" expr
  348            | expr . "&&=" expr
  349            | expr . "||=" expr
  350            | expr . "^^=" expr
  351            | expr . "+=" expr
  352            | expr . "-=" expr
  353            | expr . "*=" expr
  354            | expr . "/=" expr
  355            | expr . "%=" expr
  356            | expr . "<<=" expr
  357            | expr . ">>=" expr
  358            | expr . "<<<=" expr
  359            | expr . ">>>=" expr
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  547 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 656
    "as"    shift, and go to state 657
    "+="    shift, and go to state 947
    "-="    shift, and go to state 948
    "/="    shift, and go to state 949
    "*="    shift, and go to state 950
    "%="    shift, and go to state 951
    "&="    shift, and go to state 952
    "|="    shift, and go to state 953
    "^="    shift, and go to state 954
    "<<"    shift, and go to state 658
    ">>"    shift, and go to state 659
    "++"    shift, and go to state 660
    "--"    shift, and go to state 661
    "<="    shift, and go to state 662
    "<<="   shift, and go to state 955
    ">>="   shift, and go to state 956
    ">="    shift, and go to state 663
    "=="    shift, and go to state 664
    "!="    shift, and go to state 665
    "->"    shift, and go to state 666
    "<-"    shift, and go to state 957
    "??"    shift, and go to state 667
    "?."    shift, and go to state 668
    "?["    shift, and go to state 669
    "<|"    shift, and go to state 670
    "|>"    shift, and go to state 671
    ":="    shift, and go to state 783
    "<<<"   shift, and go to state 672
    ">>>"   shift, and go to state 673
    "<<<="  shift, and go to state 958
    ">>>="  shift, and go to state 959
    "&&"    shift, and go to state 674
    "||"    shift, and go to state 675
    "^^"    shift, and go to state 676
    "&&="   shift, and go to state 960
    "||="   shift, and go to state 961
    "^^="   shift, and go to state 962
    ".."    shift, and go to state 677
    '='     shift, and go to state 963
    '?'     shift, and go to state 678
    '|'     shift, and go to state 679
    '^'     shift, and go to state 680
    '&'     shift, and go to state 681
    '<'     shift, and go to state 682
    '>'     shift, and go to state 683
    '-'     shift, and go to state 684
    '+'     shift, and go to state 685
    '*'     shift, and go to state 686
    '/'     shift, and go to state 687
    '%'     shift, and go to state 688
    '.'     shift, and go to state 689
    '['     shift, and go to state 690
    '$'     shift, and go to state 461
    '@'     shift, and go to state 749

    " <|"     reduce using rule 341 (expr_assign)
    $default  reduce using rule 547 (variable_declaration)

    block_or_lambda                go to state 761
    expr_full_block_assumed_piped  go to state 790


State 1137

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . expression_block
  315 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 331
    ','                    shift, and go to state 930

    expression_block  go to state 1254


State 1138

  351 expr_assign: expr "+=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 351 (expr_assign)


State 1139

  352 expr_assign: expr "-=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 352 (expr_assign)


State 1140

  354 expr_assign: expr "/=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 354 (expr_assign)


State 1141

  353 expr_assign: expr "*=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 353 (expr_assign)


State 1142

  355 expr_assign: expr "%=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 355 (expr_assign)


State 1143

  345 expr_assign: expr "&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 345 (expr_assign)


State 1144

  346 expr_assign: expr "|=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 346 (expr_assign)


State 1145

  347 expr_assign: expr "^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 347 (expr_assign)


State 1146

  356 expr_assign: expr "<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 356 (expr_assign)


State 1147

  357 expr_assign: expr ">>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 357 (expr_assign)


State 1148

  343 expr_assign: expr "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 343 (expr_assign)


State 1149

  358 expr_assign: expr "<<<=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 358 (expr_assign)


State 1150

  359 expr_assign: expr ">>>=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 359 (expr_assign)


State 1151

  348 expr_assign: expr "&&=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 348 (expr_assign)


State 1152

  349 expr_assign: expr "||=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 349 (expr_assign)


State 1153

  350 expr_assign: expr "^^=" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 350 (expr_assign)


State 1154

  342 expr_assign: expr '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 342 (expr_assign)


State 1155

  285 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 285 (expression_try_catch)


State 1156

   77 expression_with_alias: "assume" "name" '=' expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 77 (expression_with_alias)


State 1157

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1255


State 1158

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  238 expressions: expressions . expression_any
  239            | expressions . error

    error                             shift, and go to state 535
    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 536
    "if"                              shift, and go to state 537
    "static_if"                       shift, and go to state 538
    "for"                             shift, and go to state 539
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 540
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 541
    "try"                             shift, and go to state 542
    "table"                           shift, and go to state 422
    "delete"                          shift, and go to state 543
    "deref"                           shift, and go to state 423
    "with"                            shift, and go to state 544
    "assume"                          shift, and go to state 545
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 546
    "pass"                            shift, and go to state 547
    "reinterpret"                     shift, and go to state 427
    "label"                           shift, and go to state 548
    "goto"                            shift, and go to state 549
    "unsafe"                          shift, and go to state 550
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 551
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "$ <|"                            shift, and go to state 552
    "@ <|"                            shift, and go to state 553
    "@@ <|"                           shift, and go to state 554
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 555
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    "end of code block"               shift, and go to state 1256
    "end of expression"               shift, and go to state 557
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder             go to state 463
    expr_reader                go to state 464
    expression_label           go to state 558
    expression_goto            go to state 559
    if_or_static_if            go to state 560
    expression_if_one_liner    go to state 561
    expression_if_then_else    go to state 562
    expression_for_loop        go to state 563
    expression_unsafe          go to state 564
    expression_while_loop      go to state 565
    expression_with            go to state 566
    expression_with_alias      go to state 567
    expr_call_pipe             go to state 568
    expression_any             go to state 569
    expr_keyword               go to state 570
    expression_keyword         go to state 571
    expr_pipe                  go to state 572
    name_in_namespace          go to state 466
    expression_delete          go to state 573
    expr_new                   go to state 467
    expression_break           go to state 574
    expression_continue        go to state 575
    expression_return_no_pipe  go to state 576
    expression_return          go to state 577
    expression_yield_no_pipe   go to state 578
    expression_yield           go to state 579
    expression_try_catch       go to state 580
    kwd_let                    go to state 581
    expression_let             go to state 582
    expr_cast                  go to state 468
    expr_type_decl             go to state 469
    expr_type_info             go to state 470
    block_or_lambda            go to state 471
    expr_full_block            go to state 472
    expr_numeric_const         go to state 473
    expr_assign                go to state 583
    expr_assign_pipe           go to state 584
    expr_named_call            go to state 474
    expr_method_call           go to state 475
    func_addr_expr             go to state 476
    expr_field                 go to state 477
    expr_call                  go to state 478
    expr                       go to state 585
    expr_mtag                  go to state 480
    basic_type_declaration     go to state 481
    make_decl                  go to state 482
    make_struct_decl           go to state 483
    make_tuple_call            go to state 484
    make_dim_decl              go to state 485
    make_table_decl            go to state 486
    array_comprehension        go to state 487


State 1159

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1257


State 1160

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1161

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1162

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1258
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1163

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1164

   65 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "return"                          shift, and go to state 1259
    "null"                            shift, and go to state 421
    "break"                           shift, and go to state 541
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "continue"                        shift, and go to state 546
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 1260
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder             go to state 463
    expr_reader                go to state 464
    expression_if_one_liner    go to state 1261
    expression_keyword         go to state 465
    name_in_namespace          go to state 466
    expr_new                   go to state 467
    expression_break           go to state 1262
    expression_continue        go to state 1263
    expression_return_no_pipe  go to state 1264
    expression_yield_no_pipe   go to state 1265
    expr_cast                  go to state 468
    expr_type_decl             go to state 469
    expr_type_info             go to state 470
    block_or_lambda            go to state 471
    expr_full_block            go to state 472
    expr_numeric_const         go to state 473
    expr_named_call            go to state 474
    expr_method_call           go to state 475
    func_addr_expr             go to state 476
    expr_field                 go to state 477
    expr_call                  go to state 478
    expr                       go to state 1266
    expr_mtag                  go to state 480
    basic_type_declaration     go to state 481
    make_decl                  go to state 482
    make_struct_decl           go to state 483
    make_tuple_call            go to state 484
    make_dim_decl              go to state 485
    make_table_decl            go to state 486
    array_comprehension        go to state 487


State 1165

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1267


State 1166

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 329

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1268


State 1167

  293 tuple_expansion: "name" .

    $default  reduce using rule 293 (tuple_expansion)


State 1168

  294 tuple_expansion: tuple_expansion . ',' "name"
  295 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1269
    ')'  shift, and go to state 1270


State 1169

  362 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe_right)


State 1170

  360 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 360 (expr_assign_pipe_right)


State 1171

  361 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 361 (expr_assign_pipe_right)


State 1172

  578 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 578 (enum_list)


State 1173

  597 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@37 enum_list $@38 "end of code block" .

    $default  reduce using rule 597 (enum_declaration)


State 1174

  512 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 512 (optional_public_or_private_member_variable)


State 1175

  513 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 513 (optional_public_or_private_member_variable)


State 1176

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  523                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1271
    "static"    shift, and go to state 1177

    $default  reduce using rule 514 (optional_static_member_variable)

    optional_static_member_variable  go to state 1272


State 1177

  515 optional_static_member_variable: "static" .

    $default  reduce using rule 515 (optional_static_member_variable)


State 1178

  516 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1273
    "sealed"    shift, and go to state 1274

    $default  reduce using rule 506 (optional_override)

    optional_override  go to state 1275


State 1179

  519 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 519 (struct_variable_declaration_list)


State 1180

  560 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 560 (let_variable_declaration)


State 1181

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' . $@80 '(' make_struct_single ')'

    $default  reduce using rule 762 ($@80)

    $@80  go to state 1276


State 1182

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_struct_single ')'

    $default  reduce using rule 765 ($@82)

    $@82  go to state 1277


State 1183

  265 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 264 ($@8)

    $@8  go to state 1278


State 1184

  269 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 269 (expr_new)


State 1185

  270 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 270 (expr_new)


State 1186

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1279
    '>'                  shift, and go to state 1280


State 1187

  311 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 311 (expr_type_info)


State 1188

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 309 ($@16)

    $@16  go to state 1281


State 1189

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' . $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 782 ($@90)

    $@90  go to state 1282


State 1190

  780 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 780 (make_dim_decl)


State 1191

  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"
  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1283
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1192

  792 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 642
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    expr_map_tuple_list     go to state 1284
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1193

  791 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 791 (make_table_decl)


State 1194

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 300 ($@10)

    $@10  go to state 1285


State 1195

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 303 ($@12)

    $@12  go to state 1286


State 1196

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 306 ($@14)

    $@14  go to state 1287


State 1197

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' . $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 786 ($@92)

    $@92  go to state 1288


State 1198

  784 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 784 (make_dim_decl)


State 1199

  772 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' . $@86

    $default  reduce using rule 771 ($@86)

    $@86  go to state 1289


State 1200

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_struct_single ')'

    $default  reduce using rule 777 ($@88)

    $@88  go to state 1290


State 1201

  775 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 775 (make_tuple_call)


State 1202

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' . $@84 '(' make_struct_single ')'

    $default  reduce using rule 768 ($@84)

    $@84  go to state 1291


State 1203

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1292


State 1204

  494 expr_mtag: "$c" '(' expr ')' '(' . ')'
  495          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 1293
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1294
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1205

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' . $@4 expr

    $default  reduce using rule 248 ($@4)

    $@4  go to state 1295


State 1206

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' . $@6 optional_expr_list_in_braces

    $default  reduce using rule 251 ($@6)

    $@6  go to state 1296


State 1207

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1208

  315 expr_list: expr_list . ',' expr
  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1297
    ','                  shift, and go to state 930


State 1209

  315 expr_list: expr_list . ',' expr
  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1298
    ','                  shift, and go to state 930


State 1210

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  386 func_addr_name: "$i" '(' expr . ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1299


State 1211

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  503          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1300


State 1212

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1301
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1213

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1302


State 1214

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  757                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1303


State 1215

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 753 (make_struct_fields)


State 1216

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  752 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 752 (make_struct_fields)


State 1217

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1304


State 1218

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  779 make_dim_decl: '[' . expr_list optional_comma ']'
  798 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "for"                             shift, and go to state 649
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 854
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 855
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 650
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_fields      go to state 1305
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1219

  758 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1306


State 1220

  754 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  755                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 937
    ":="  shift, and go to state 1307
    '='   shift, and go to state 939

    copy_or_move  go to state 1308


State 1221

  324 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1309


State 1222

  325 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1310


State 1223

  323 capture_entry: '=' . "name"

    "name"  shift, and go to state 1311


State 1224

  322 capture_entry: '&' . "name"

    "name"  shift, and go to state 1312


State 1225

  326 capture_list: capture_entry .

    $default  reduce using rule 326 (capture_list)


State 1226

  327 capture_list: capture_list . ',' capture_entry
  329 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1313
    ']'  shift, and go to state 1314


State 1227

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1315
    "begin of code block"  shift, and go to state 331

    expression_block       go to state 1316
    block_or_simple_block  go to state 1317


State 1228

  464 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1318


State 1229

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  502          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1319


State 1230

  470 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1320


State 1231

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  500          | expr "as" "$f" '(' expr . ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1321


State 1232

  383 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 383 (expr_method_call)


State 1233

  315 expr_list: expr_list . ',' expr
  384 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 930
    ')'  shift, and go to state 1322


State 1234

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  497          | expr "?." "$f" '(' expr . ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1323


State 1235

  475 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 473 ($@27)

    $@27  go to state 1324


State 1236

  501 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1325
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1237

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr ':' expr .
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 461 (expr)


State 1238

  499 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1326
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1239

  450 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 1240

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  496          | expr '.' "$f" '(' expr . ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1327


State 1241

  396 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 396 (expr_field)


State 1242

  315 expr_list: expr_list . ',' expr
  397 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 930
    ')'  shift, and go to state 1328


State 1243

  498 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1329
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1244

  448 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1245

  400 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 400 (expr_field)


State 1246

  711 type_declaration_no_options: "block" '<' $@56 optional_function_argument_list optional_function_type '>' $@57 .

    $default  reduce using rule 711 (type_declaration_no_options)


State 1247

  718 type_declaration_no_options: "function" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 718 (type_declaration_no_options)


State 1248

  725 type_declaration_no_options: "lambda" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1249

  246 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 246 (type_declaration_no_options_list)


State 1250

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    optional_expr_list      go to state 1330
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 711
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1251

  614 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 614 (variable_name_with_pos_list)


State 1252

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1331


State 1253

  546 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1332
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1254

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1255

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1333


State 1256

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 213 (expression_block)


State 1257

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1258

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 656
    "as"                   shift, and go to state 657
    "<<"                   shift, and go to state 658
    ">>"                   shift, and go to state 659
    "++"                   shift, and go to state 660
    "--"                   shift, and go to state 661
    "<="                   shift, and go to state 662
    ">="                   shift, and go to state 663
    "=="                   shift, and go to state 664
    "!="                   shift, and go to state 665
    "->"                   shift, and go to state 666
    "??"                   shift, and go to state 667
    "?."                   shift, and go to state 668
    "?["                   shift, and go to state 669
    "<|"                   shift, and go to state 670
    "|>"                   shift, and go to state 671
    "<<<"                  shift, and go to state 672
    ">>>"                  shift, and go to state 673
    "&&"                   shift, and go to state 674
    "||"                   shift, and go to state 675
    "^^"                   shift, and go to state 676
    ".."                   shift, and go to state 677
    "begin of code block"  shift, and go to state 331
    '?'                    shift, and go to state 678
    '|'                    shift, and go to state 679
    '^'                    shift, and go to state 680
    '&'                    shift, and go to state 681
    '<'                    shift, and go to state 682
    '>'                    shift, and go to state 683
    '-'                    shift, and go to state 684
    '+'                    shift, and go to state 685
    '*'                    shift, and go to state 686
    '/'                    shift, and go to state 687
    '%'                    shift, and go to state 688
    '.'                    shift, and go to state 689
    '['                    shift, and go to state 690

    expression_block  go to state 1334


State 1259

  274 expression_return_no_pipe: "return" .
  275                          | "return" . expr_list
  276                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 1335
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 274 (expression_return_no_pipe)

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 733
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1260

  280 expression_yield_no_pipe: "yield" . expr
  281                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 1336
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1337
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1261

   65 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1262

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1263

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1264

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1265

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1266

   66 expression_if_one_liner: expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 66 (expression_if_one_liner)


State 1267

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 72 (expression_if_then_else)


State 1268

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 393

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1338


State 1269

  294 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1339


State 1270

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  296                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1340
    '&'  shift, and go to state 408

    $default  reduce using rule 552 (optional_ref)

    optional_ref  go to state 1341


State 1271

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1342

    $default  reduce using rule 509 (optional_constant)

    optional_constant  go to state 1343


State 1272

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1273
    "sealed"    shift, and go to state 1274

    $default  reduce using rule 506 (optional_override)

    optional_override  go to state 1344


State 1273

  507 optional_override: "override" .

    $default  reduce using rule 507 (optional_override)


State 1274

  508 optional_override: "sealed" .

    $default  reduce using rule 508 (optional_override)


State 1275

  516 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1174
    "private"  shift, and go to state 1175

    $default  reduce using rule 511 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1345


State 1276

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 . '(' make_struct_single ')'

    '('  shift, and go to state 1346


State 1277

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_struct_single ')'

    '('  shift, and go to state 1347


State 1278

  265 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 265 (new_type_declaration)


State 1279

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1348


State 1280

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1349
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1281

  310 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 310 (expr_type_decl)


State 1282

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1350


State 1283

  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1351


State 1284

  789 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  792 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 843

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1352


State 1285

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1353
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1286

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1354
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1287

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1355
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1288

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1356


State 1289

  772 make_struct_decl: "default" '<' $@85 type_declaration_no_options '>' $@86 .

    $default  reduce using rule 772 (make_struct_decl)


State 1290

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_struct_single ')'

    '('  shift, and go to state 1357


State 1291

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 . '(' make_struct_single ')'

    '('  shift, and go to state 1358


State 1292

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    ')'                               shift, and go to state 1359
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1360
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1293

  494 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1294

  315 expr_list: expr_list . ',' expr
  495 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 930
    ')'  shift, and go to state 1361


State 1295

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1362
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1296

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 . optional_expr_list_in_braces

    '('  shift, and go to state 1363

    '('       [reduce using rule 243 (optional_expr_list_in_braces)]
    $default  reduce using rule 243 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1364


State 1297

  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 1365
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1298

  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1366
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1299

  386 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 386 (func_addr_name)


State 1300

  503 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1301

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 389 ($@18)

    $@18  go to state 1367


State 1302

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1368


State 1303

  756 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  757                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 937
    ":="  shift, and go to state 1369
    '='   shift, and go to state 939

    copy_or_move  go to state 1370


State 1304

  381 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 381 (expr_named_call)


State 1305

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  754 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  755                   | make_struct_fields . ',' "name" ":=" expr
  758                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  759                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1088
    ']'  shift, and go to state 1371


State 1306

  758 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1372
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1307

  755 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1373
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1308

  754 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1374
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1309

  324 capture_entry: "<-" "name" .

    $default  reduce using rule 324 (capture_entry)


State 1310

  325 capture_entry: ":=" "name" .

    $default  reduce using rule 325 (capture_entry)


State 1311

  323 capture_entry: '=' "name" .

    $default  reduce using rule 323 (capture_entry)


State 1312

  322 capture_entry: '&' "name" .

    $default  reduce using rule 322 (capture_entry)


State 1313

  327 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1221
    ":="  shift, and go to state 1222
    '='   shift, and go to state 1223
    '&'   shift, and go to state 1224

    capture_entry  go to state 1375


State 1314

  329 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1376


State 1315

  317 block_or_simple_block: "=>" . expr
  318                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 1377
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1378
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1316

  316 block_or_simple_block: expression_block .

    $default  reduce using rule 316 (block_or_simple_block)


State 1317

  332 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 332 (expr_full_block)


State 1318

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1379
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    dim_list  go to state 376


State 1319

  502 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1320

  470 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1380


State 1321

  500 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1322

  384 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 384 (expr_method_call)


State 1323

  497 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1324

  475 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 271
    type_declaration             go to state 1381


State 1325

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  501          | expr '?' "as" "$f" '(' expr . ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1382


State 1326

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  499          | expr '.' "?." "$f" '(' expr . ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1383


State 1327

  496 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1328

  397 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 397 (expr_field)


State 1329

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  498          | expr '.' '.' "$f" '(' expr . ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1384


State 1330

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1385


State 1331

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 1332

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  546 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 546 (variable_declaration)


State 1333

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1315
    "begin of code block"  shift, and go to state 331

    expression_block       go to state 1316
    block_or_simple_block  go to state 1386


State 1334

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1159
    "elif"         shift, and go to state 1160
    "static_elif"  shift, and go to state 1161

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1162
    expression_else      go to state 1387


State 1335

  276 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 946
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1336

  281 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1388
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1337

  280 expression_yield_no_pipe: "yield" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 280 (expression_yield_no_pipe)


State 1338

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1389


State 1339

  294 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1340

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 225
    "array"      shift, and go to state 226
    "table"      shift, and go to state 227
    "typedecl"   shift, and go to state 228
    "iterator"   shift, and go to state 229
    "smart_ptr"  shift, and go to state 230
    "bool"       shift, and go to state 231
    "void"       shift, and go to state 232
    "string"     shift, and go to state 233
    "auto"       shift, and go to state 234
    "int"        shift, and go to state 235
    "int2"       shift, and go to state 236
    "int3"       shift, and go to state 237
    "int4"       shift, and go to state 238
    "uint"       shift, and go to state 239
    "bitfield"   shift, and go to state 240
    "uint2"      shift, and go to state 241
    "uint3"      shift, and go to state 242
    "uint4"      shift, and go to state 243
    "float"      shift, and go to state 244
    "float2"     shift, and go to state 245
    "float3"     shift, and go to state 246
    "float4"     shift, and go to state 247
    "range"      shift, and go to state 248
    "urange"     shift, and go to state 249
    "range64"    shift, and go to state 250
    "urange64"   shift, and go to state 251
    "block"      shift, and go to state 252
    "int64"      shift, and go to state 253
    "uint64"     shift, and go to state 254
    "double"     shift, and go to state 255
    "function"   shift, and go to state 256
    "lambda"     shift, and go to state 257
    "int8"       shift, and go to state 258
    "uint8"      shift, and go to state 259
    "int16"      shift, and go to state 260
    "uint16"     shift, and go to state 261
    "tuple"      shift, and go to state 262
    "variant"    shift, and go to state 263
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 264
    "name"       shift, and go to state 60
    '$'          shift, and go to state 265

    name_in_namespace            go to state 266
    basic_type_declaration       go to state 267
    structure_type_declaration   go to state 268
    auto_type_declaration        go to state 269
    bitfield_type_declaration    go to state 270
    type_declaration_no_options  go to state 1390


State 1341

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 597
    ":="  shift, and go to state 598
    '='   shift, and go to state 599

    copy_or_move_or_clone  go to state 1391


State 1342

  510 optional_constant: "const" .

    $default  reduce using rule 510 (optional_constant)


State 1343

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 520 ($@30)

    $@30  go to state 1392


State 1344

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1342

    $default  reduce using rule 509 (optional_constant)

    optional_constant  go to state 1393


State 1345

  516 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 724
    "name"  shift, and go to state 725

    variable_declaration         go to state 1394
    variable_name_with_pos_list  go to state 727


State 1346

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' . make_struct_single ')'

    "$f"    shift, and go to state 854
    "name"  shift, and go to state 1395

    make_struct_fields  go to state 859
    make_struct_single  go to state 1396


State 1347

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_struct_single ')'

    "$f"    shift, and go to state 854
    "name"  shift, and go to state 1395

    make_struct_fields  go to state 859
    make_struct_single  go to state 1397


State 1348

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1398


State 1349

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1399


State 1350

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1400
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1351

  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 641
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_map_tuple          go to state 642
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    expr_map_tuple_list     go to state 1401
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1352

  792 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1402


State 1353

  301 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 301 (expr_cast)


State 1354

  304 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 304 (expr_cast)


State 1355

  307 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 307 (expr_cast)


State 1356

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1403
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1357

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_struct_single ')'

    "$f"    shift, and go to state 854
    "name"  shift, and go to state 1395

    make_struct_fields  go to state 859
    make_struct_single  go to state 1404


State 1358

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' . make_struct_single ')'

    "$f"    shift, and go to state 854
    "name"  shift, and go to state 1395

    make_struct_fields  go to state 859
    make_struct_single  go to state 1405


State 1359

  458 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 458 (expr)


State 1360

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  459     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1406


State 1361

  495 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 495 (expr_mtag)


State 1362

  249 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 249 (expression_keyword)


State 1363

  244 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    optional_expr_list      go to state 1407
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 711
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 651
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1364

  252 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces .

    $default  reduce using rule 252 (expression_keyword)


State 1365

  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1408

    $default  reduce using rule 794 (array_comprehension_where)

    array_comprehension_where  go to state 1409


State 1366

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1408
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690

    $default  reduce using rule 794 (array_comprehension_where)

    array_comprehension_where  go to state 1410


State 1367

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 849
    "name"  shift, and go to state 60

    name_in_namespace  go to state 852
    func_addr_name     go to state 1411


State 1368

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 392 ($@20)

    $@20  go to state 1412


State 1369

  757 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1413
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1370

  756 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1414
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1371

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1415


State 1372

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1416


State 1373

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 755 (make_struct_fields)


State 1374

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  754 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 754 (make_struct_fields)


State 1375

  327 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 327 (capture_list)


State 1376

  329 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 329 (optional_capture_list)


State 1377

  318 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1417
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1378

  317 block_or_simple_block: "=>" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    ".."  error (nonassociative)

    $default  reduce using rule 317 (block_or_simple_block)


State 1379

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 463 ($@24)

    $@24  go to state 1418


State 1380

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 469 ($@26)

    $@26  go to state 1419


State 1381

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  733 type_declaration: type_declaration . '|' type_declaration_no_options
  734                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1420


State 1382

  501 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1383

  499 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1384

  498 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1385

  679 type_declaration_no_options: '$' name_in_namespace '<' $@45 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1386

  331 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 331 (expr_block)


State 1387

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1388

  281 expression_yield_no_pipe: "yield" "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 281 (expression_yield_no_pipe)


State 1389

  333 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 333 (expr_full_block_assumed_piped)


State 1390

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  671 type_declaration_no_options: type_declaration_no_options . dim_list
  672                            | type_declaration_no_options . '[' ']'
  680                            | type_declaration_no_options . '-' '[' ']'
  681                            | type_declaration_no_options . "explicit"
  682                            | type_declaration_no_options . "const"
  683                            | type_declaration_no_options . '-' "const"
  684                            | type_declaration_no_options . '&'
  685                            | type_declaration_no_options . '-' '&'
  686                            | type_declaration_no_options . '#'
  687                            | type_declaration_no_options . "implicit"
  688                            | type_declaration_no_options . '-' '#'
  689                            | type_declaration_no_options . "==" "const"
  690                            | type_declaration_no_options . "==" '&'
  691                            | type_declaration_no_options . '?'
  695                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 597
    "??"        shift, and go to state 370
    ":="        shift, and go to state 598
    '='         shift, and go to state 599
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '['         shift, and go to state 374
    '#'         shift, and go to state 375

    copy_or_move_or_clone  go to state 1421
    dim_list               go to state 376


State 1391

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1422
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1392

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1423


State 1393

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 522 ($@31)

    $@31  go to state 1424


State 1394

  516 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 516 (structure_variable_declaration)


State 1395

  752 make_struct_fields: "name" . copy_or_move expr
  753                   | "name" . ":=" expr

    "<-"  shift, and go to state 937
    ":="  shift, and go to state 1083
    '='   shift, and go to state 939

    copy_or_move  go to state 1084


State 1396

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single . ')'

    ')'  shift, and go to state 1425


State 1397

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single . ')'

    ')'  shift, and go to state 1426


State 1398

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1427
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1399

  312 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 312 (expr_type_info)


State 1400

  315 expr_list: expr_list . ',' expr
  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1428


State 1401

  789 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 843

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1429


State 1402

  792 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 792 (make_table_decl)


State 1403

  315 expr_list: expr_list . ',' expr
  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 846

    $default  reduce using rule 796 (optional_comma)

    optional_comma  go to state 1430


State 1404

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single . ')'

    ')'  shift, and go to state 1431


State 1405

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single . ')'

    ')'  shift, and go to state 1432


State 1406

  459 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 459 (expr)


State 1407

  244 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1433


State 1408

  795 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1434


State 1409

  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1435


State 1410

  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1436


State 1411

  390 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 390 (func_addr_expr)


State 1412

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 849
    "name"  shift, and go to state 60

    name_in_namespace  go to state 852
    func_addr_name     go to state 1437


State 1413

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  757 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 757 (make_struct_fields)


State 1414

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 756 (make_struct_fields)


State 1415

  382 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 382 (expr_named_call)


State 1416

  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  759                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 937
    ":="  shift, and go to state 1438
    '='   shift, and go to state 939

    copy_or_move  go to state 1439


State 1417

  318 block_or_simple_block: "=>" "<-" expr .
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 318 (block_or_simple_block)


State 1418

  464 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 464 (expr)


State 1419

  470 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 470 (expr)


State 1420

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 474 ($@28)

    $@28  go to state 1440


State 1421

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1441
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1422

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1442
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690


State 1423

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1443


State 1424

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1444


State 1425

  763 make_struct_decl: "struct" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')' .

    $default  reduce using rule 763 (make_struct_decl)


State 1426

  766 make_struct_decl: "class" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')' .

    $default  reduce using rule 766 (make_struct_decl)


State 1427

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690
    ')'    shift, and go to state 1445


State 1428

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1446


State 1429

  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1447


State 1430

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1448


State 1431

  778 make_tuple_call: "tuple" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_single ')' .

    $default  reduce using rule 778 (make_tuple_call)


State 1432

  769 make_struct_decl: "variant" '<' $@83 type_declaration_no_options '>' $@84 '(' make_struct_single ')' .

    $default  reduce using rule 769 (make_struct_decl)


State 1433

  244 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 244 (optional_expr_list_in_braces)


State 1434

  795 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1449
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1435

  799 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 799 (array_comprehension)


State 1436

  798 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 798 (array_comprehension)


State 1437

  393 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 393 (func_addr_expr)


State 1438

  759 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1450
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1439

  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 413
    "class"                           shift, and go to state 414
    "true"                            shift, and go to state 415
    "false"                           shift, and go to state 416
    "new"                             shift, and go to state 417
    "typeinfo"                        shift, and go to state 418
    "type"                            shift, and go to state 419
    "array"                           shift, and go to state 420
    "null"                            shift, and go to state 421
    "table"                           shift, and go to state 422
    "deref"                           shift, and go to state 423
    "cast"                            shift, and go to state 424
    "upcast"                          shift, and go to state 425
    "addr"                            shift, and go to state 426
    "reinterpret"                     shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 231
    "void"                            shift, and go to state 232
    "string"                          shift, and go to state 233
    "int"                             shift, and go to state 235
    "int2"                            shift, and go to state 236
    "int3"                            shift, and go to state 237
    "int4"                            shift, and go to state 238
    "uint"                            shift, and go to state 239
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 241
    "uint3"                           shift, and go to state 242
    "uint4"                           shift, and go to state 243
    "float"                           shift, and go to state 244
    "float2"                          shift, and go to state 245
    "float3"                          shift, and go to state 246
    "float4"                          shift, and go to state 247
    "range"                           shift, and go to state 248
    "urange"                          shift, and go to state 249
    "range64"                         shift, and go to state 250
    "urange64"                        shift, and go to state 251
    "int64"                           shift, and go to state 253
    "uint64"                          shift, and go to state 254
    "double"                          shift, and go to state 255
    "int8"                            shift, and go to state 258
    "uint8"                           shift, and go to state 259
    "int16"                           shift, and go to state 260
    "uint16"                          shift, and go to state 261
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 450
    "type function"                   shift, and go to state 451
    "start of the string"             shift, and go to state 452
    "begin of code block"             shift, and go to state 453
    '-'                               shift, and go to state 454
    '+'                               shift, and go to state 455
    '*'                               shift, and go to state 456
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 457
    '!'                               shift, and go to state 458
    '['                               shift, and go to state 459
    '('                               shift, and go to state 460
    '$'                               shift, and go to state 461
    '@'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expression_keyword      go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1451
    expr_mtag               go to state 480
    basic_type_declaration  go to state 481
    make_decl               go to state 482
    make_struct_decl        go to state 483
    make_tuple_call         go to state 484
    make_dim_decl           go to state 485
    make_table_decl         go to state 486
    array_comprehension     go to state 487


State 1440

  475 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 475 (expr)


State 1441

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 656
    "as"                 shift, and go to state 657
    "<<"                 shift, and go to state 658
    ">>"                 shift, and go to state 659
    "++"                 shift, and go to state 660
    "--"                 shift, and go to state 661
    "<="                 shift, and go to state 662
    ">="                 shift, and go to state 663
    "=="                 shift, and go to state 664
    "!="                 shift, and go to state 665
    "->"                 shift, and go to state 666
    "??"                 shift, and go to state 667
    "?."                 shift, and go to state 668
    "?["                 shift, and go to state 669
    "<|"                 shift, and go to state 670
    "|>"                 shift, and go to state 671
    "<<<"                shift, and go to state 672
    ">>>"                shift, and go to state 673
    "&&"                 shift, and go to state 674
    "||"                 shift, and go to state 675
    "^^"                 shift, and go to state 676
    ".."                 shift, and go to state 677
    "end of expression"  shift, and go to state 1452
    '?'                  shift, and go to state 678
    '|'                  shift, and go to state 679
    '^'                  shift, and go to state 680
    '&'                  shift, and go to state 681
    '<'                  shift, and go to state 682
    '>'                  shift, and go to state 683
    '-'                  shift, and go to state 684
    '+'                  shift, and go to state 685
    '*'                  shift, and go to state 686
    '/'                  shift, and go to state 687
    '%'                  shift, and go to state 688
    '.'                  shift, and go to state 689
    '['                  shift, and go to state 690


State 1442

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)


State 1443

  521 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1444

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 331

    expression_block  go to state 1453


State 1445

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1446

  783 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')' .

    $default  reduce using rule 783 (make_dim_decl)


State 1447

  793 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 793 (make_table_decl)


State 1448

  787 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')' .

    $default  reduce using rule 787 (make_dim_decl)


State 1449

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  795 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 795 (array_comprehension_where)


State 1450

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 759 (make_struct_fields)


State 1451

  383 expr_method_call: expr . "->" "name" '(' ')'
  384                 | expr . "->" "name" '(' expr_list ')'
  394 expr_field: expr . '.' "name"
  395           | expr . '.' '.' "name"
  396           | expr . '.' "name" '(' ')'
  397           | expr . '.' "name" '(' expr_list ')'
  400           | expr . '.' $@21 error $@22
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  447     | expr . '[' expr ']'
  448     | expr . '.' '[' expr ']'
  449     | expr . "?[" expr ']'
  450     | expr . '.' "?[" expr ']'
  451     | expr . "?." "name"
  452     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: expr . '.' "$f" '(' expr ')'
  497          | expr . "?." "$f" '(' expr ')'
  498          | expr . '.' '.' "$f" '(' expr ')'
  499          | expr . '.' "?." "$f" '(' expr ')'
  500          | expr . "as" "$f" '(' expr ')'
  501          | expr . '?' "as" "$f" '(' expr ')'
  502          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 656
    "as"   shift, and go to state 657
    "<<"   shift, and go to state 658
    ">>"   shift, and go to state 659
    "++"   shift, and go to state 660
    "--"   shift, and go to state 661
    "<="   shift, and go to state 662
    ">="   shift, and go to state 663
    "=="   shift, and go to state 664
    "!="   shift, and go to state 665
    "->"   shift, and go to state 666
    "??"   shift, and go to state 667
    "?."   shift, and go to state 668
    "?["   shift, and go to state 669
    "<|"   shift, and go to state 670
    "|>"   shift, and go to state 671
    "<<<"  shift, and go to state 672
    ">>>"  shift, and go to state 673
    "&&"   shift, and go to state 674
    "||"   shift, and go to state 675
    "^^"   shift, and go to state 676
    ".."   shift, and go to state 677
    '?'    shift, and go to state 678
    '|'    shift, and go to state 679
    '^'    shift, and go to state 680
    '&'    shift, and go to state 681
    '<'    shift, and go to state 682
    '>'    shift, and go to state 683
    '-'    shift, and go to state 684
    '+'    shift, and go to state 685
    '*'    shift, and go to state 686
    '/'    shift, and go to state 687
    '%'    shift, and go to state 688
    '.'    shift, and go to state 689
    '['    shift, and go to state 690

    $default  reduce using rule 758 (make_struct_fields)


State 1452

  295 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 295 (tuple_expansion_variable_declaration)


State 1453

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 523 (struct_variable_declaration_list)
