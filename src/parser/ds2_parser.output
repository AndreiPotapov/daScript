Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" '(' expr ')' expression_block

   73 expression_with: "with" '(' expr ')' expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias "end of expression"
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield "end of expression"
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list optional_comma

  237 optional_expr_map_tuple_list: %empty
  238                             | expr_map_tuple_list optional_comma

  239 type_declaration_no_options_list: type_declaration
  240                                 | type_declaration_no_options_list "end of expression" type_declaration

  241 name_in_namespace: "name"
  242                  | "name" "::" "name"
  243                  | "::" "name"

  244 expression_delete: "delete" expr
  245                  | "delete" "explicit" expr

  246 $@3: %empty

  247 $@4: %empty

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4

  249 expr_new: "new" structure_type_declaration
  250         | "new" structure_type_declaration '(' optional_expr_list ')'
  251         | "new" new_type_declaration '(' use_initializer ')'
  252         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" make_decl

  254 expression_break: "break"

  255 expression_continue: "continue"

  256 expression_return: "return"
  257                  | "return" expr
  258                  | "return" "<-" expr

  259 expression_yield: "yield" expr
  260                 | "yield" "<-" expr

  261 expression_try_catch: "try" expression_block "recover" expression_block

  262 kwd_let_var_or_nothing: "let"
  263                       | "var"
  264                       | %empty

  265 kwd_let: "let"
  266        | "var"

  267 optional_in_scope: "inscope"
  268                  | %empty

  269 tuple_expansion: "name"
  270                | tuple_expansion ',' "name"

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  273 expression_let: kwd_let optional_in_scope let_variable_declaration
  274               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  275 $@5: %empty

  276 $@6: %empty

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  278 $@7: %empty

  279 $@8: %empty

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  281 $@9: %empty

  282 $@10: %empty

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  284 $@11: %empty

  285 $@12: %empty

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  288               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  290 expr_list: expr
  291          | expr_list ',' expr

  292 block_or_simple_block: expression_block
  293                      | "=>" expr
  294                      | "=>" "<-" expr

  295 block_or_lambda: '$'
  296                | '@'
  297                | '@' '@'

  298 capture_entry: '&' "name"
  299              | '=' "name"
  300              | "<-" "name"
  301              | ":=" "name"

  302 capture_list: capture_entry
  303             | capture_list ',' capture_entry

  304 optional_capture_list: %empty
  305                      | "capture" '(' capture_list ')'

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  308                              | "begin of code block" expressions "end of code block"

  309 expr_numeric_const: "integer constant"
  310                   | "unsigned integer constant"
  311                   | "long integer constant"
  312                   | "unsigned long integer constant"
  313                   | "unsigned int8 constant"
  314                   | "floating point constant"
  315                   | "double constant"

  316 expr_assign: expr
  317            | expr '=' expr
  318            | expr "<-" expr
  319            | expr ":=" expr
  320            | expr "&=" expr
  321            | expr "|=" expr
  322            | expr "^=" expr
  323            | expr "&&=" expr
  324            | expr "||=" expr
  325            | expr "^^=" expr
  326            | expr "+=" expr
  327            | expr "-=" expr
  328            | expr "*=" expr
  329            | expr "/=" expr
  330            | expr "%=" expr
  331            | expr "<<=" expr
  332            | expr ">>=" expr
  333            | expr "<<<=" expr
  334            | expr ">>>=" expr

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  337 expr_method_call: expr "->" "name" '(' ')'
  338                 | expr "->" "name" '(' expr_list ')'

  339 func_addr_name: name_in_namespace
  340               | "$i" '(' expr ')'

  341 func_addr_expr: '@' '@' func_addr_name

  342 $@13: %empty

  343 $@14: %empty

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  345 $@15: %empty

  346 $@16: %empty

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  348 expr_field: expr '.' "name"
  349           | expr '.' '.' "name"
  350           | expr '.' "name" '(' ')'
  351           | expr '.' "name" '(' expr_list ')'

  352 $@17: %empty

  353 $@18: %empty

  354 expr_field: expr '.' $@17 error $@18

  355 expr_call: name_in_namespace '(' ')'
  356          | name_in_namespace '(' make_struct_single ')'
  357          | name_in_namespace '(' expr_list ')'
  358          | basic_type_declaration '(' ')'
  359          | basic_type_declaration '(' expr_list ')'

  360 expr: "null"
  361     | name_in_namespace
  362     | expr_numeric_const
  363     | expr_reader
  364     | string_builder
  365     | make_decl
  366     | "true"
  367     | "false"
  368     | expr_field
  369     | expr_mtag
  370     | '!' expr
  371     | '~' expr
  372     | '+' expr
  373     | '-' expr
  374     | expr "<<" expr
  375     | expr ">>" expr
  376     | expr "<<<" expr
  377     | expr ">>>" expr
  378     | expr '+' expr
  379     | expr '-' expr
  380     | expr '*' expr
  381     | expr '/' expr
  382     | expr '%' expr
  383     | expr '<' expr
  384     | expr '>' expr
  385     | expr "==" expr
  386     | expr "!=" expr
  387     | expr "<=" expr
  388     | expr ">=" expr
  389     | expr '&' expr
  390     | expr '|' expr
  391     | expr '^' expr
  392     | expr "&&" expr
  393     | expr "||" expr
  394     | expr "^^" expr
  395     | expr ".." expr
  396     | "++" expr
  397     | "--" expr
  398     | expr "++"
  399     | expr "--"
  400     | '(' expr_list optional_comma ')'
  401     | expr '[' expr ']'
  402     | expr '.' '[' expr ']'
  403     | expr "?[" expr ']'
  404     | expr '.' "?[" expr ']'
  405     | expr "?." "name"
  406     | expr '.' "?." "name"
  407     | func_addr_expr
  408     | expr_call
  409     | '*' expr
  410     | "deref" '(' expr ')'
  411     | "addr" '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  415     | expr "??" expr
  416     | expr '?' expr ':' expr

  417 $@19: %empty

  418 $@20: %empty

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" basic_type_declaration
  421     | expr "is" "name"
  422     | expr "as" "name"

  423 $@21: %empty

  424 $@22: %empty

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" basic_type_declaration
  427     | expr '?' "as" "name"

  428 $@23: %empty

  429 $@24: %empty

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" basic_type_declaration
  432     | expr_type_info
  433     | expr_type_decl
  434     | expr_cast
  435     | expr_new
  436     | expr_method_call
  437     | expr_named_call
  438     | expr_full_block
  439     | expr "<|" expr
  440     | expr "|>" expr
  441     | expr "|>" basic_type_declaration
  442     | expr_call_pipe
  443     | "unsafe" '(' expr ')'

  444 expr_mtag: "$$" '(' expr ')'
  445          | "$i" '(' expr ')'
  446          | "$v" '(' expr ')'
  447          | "$b" '(' expr ')'
  448          | "$a" '(' expr ')'
  449          | "..."
  450          | "$c" '(' expr ')' '(' ')'
  451          | "$c" '(' expr ')' '(' expr_list ')'
  452          | expr '.' "$f" '(' expr ')'
  453          | expr "?." "$f" '(' expr ')'
  454          | expr '.' '.' "$f" '(' expr ')'
  455          | expr '.' "?." "$f" '(' expr ')'
  456          | expr "as" "$f" '(' expr ')'
  457          | expr '?' "as" "$f" '(' expr ')'
  458          | expr "is" "$f" '(' expr ')'
  459          | '@' '@' "$c" '(' expr ')'

  460 optional_field_annotation: %empty
  461                          | metadata_argument_list

  462 optional_override: %empty
  463                  | "override"
  464                  | "sealed"

  465 optional_constant: %empty
  466                  | "const"

  467 optional_public_or_private_member_variable: %empty
  468                                           | "public"
  469                                           | "private"

  470 optional_static_member_variable: %empty
  471                                | "static"

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  473 struct_variable_declaration_list: %empty

  474 $@25: %empty

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  476 $@26: %empty

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  478 $@27: %empty

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  481                              | "$a" '(' expr ')'

  482 function_argument_list: function_argument_declaration
  483                       | function_argument_list "end of expression" function_argument_declaration

  484 tuple_type: type_declaration
  485           | "name" ':' type_declaration

  486 tuple_type_list: tuple_type
  487                | tuple_type_list "end of expression" tuple_type

  488 tuple_alias_type_list: %empty
  489                      | tuple_alias_type_list "end of expression"
  490                      | tuple_alias_type_list tuple_type "end of expression"

  491 variant_type: "name" ':' type_declaration

  492 variant_type_list: variant_type
  493                  | variant_type_list "end of expression" variant_type

  494 variant_alias_type_list: %empty
  495                        | variant_alias_type_list "end of expression"
  496                        | variant_alias_type_list variant_type "end of expression"

  497 copy_or_move: '='
  498             | "<-"

  499 variable_declaration: variable_name_with_pos_list
  500                     | variable_name_with_pos_list '&'
  501                     | variable_name_with_pos_list ':' type_declaration
  502                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list copy_or_move expr

  504 copy_or_move_or_clone: '='
  505                      | "<-"
  506                      | ":="

  507 optional_ref: %empty
  508             | '&'

  509 let_variable_name_with_pos_list: "name"
  510                                | "$i" '(' expr ')'
  511                                | "name" "aka" "name"
  512                                | let_variable_name_with_pos_list ',' "name"
  513                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  514 global_let_variable_name_with_pos_list: "name"
  515                                       | global_let_variable_name_with_pos_list ',' "name"

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  521                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  522 optional_shared: %empty
  523                | "shared"

  524 optional_public_or_private_variable: %empty
  525                                    | "private"
  526                                    | "public"

  527 $@28: %empty

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

  529 enum_expression: "name"
  530                | "name" '=' expr

  531 enum_list: %empty
  532          | enum_expression
  533          | enum_list ',' enum_expression

  534 optional_public_or_private_alias: %empty
  535                                 | "private"
  536                                 | "public"

  537 $@29: %empty

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration

  539 alias_declaration: "typedef" single_alias "end of expression"

  540 optional_public_or_private_enum: %empty
  541                                | "private"
  542                                | "public"

  543 enum_name: "name"

  544 optional_enum_basic_type_declaration: %empty
  545                                     | ':' enum_basic_type_declaration

  546 $@30: %empty

  547 $@31: %empty

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

  549 optional_structure_parent: %empty
  550                          | ':' name_in_namespace

  551 optional_sealed: %empty
  552                | "sealed"

  553 structure_name: optional_sealed "name" optional_structure_parent

  554 class_or_struct: "class"
  555                | "struct"

  556 optional_public_or_private_structure: %empty
  557                                     | "private"
  558                                     | "public"

  559 optional_struct_variable_declaration_list: %empty
  560                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  561 $@32: %empty

  562 $@33: %empty

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

  564 variable_name_with_pos_list: "name"
  565                            | "$i" '(' expr ')'
  566                            | "name" "aka" "name"
  567                            | variable_name_with_pos_list ',' "name"
  568                            | variable_name_with_pos_list ',' "name" "aka" "name"

  569 basic_type_declaration: "bool"
  570                       | "string"
  571                       | "int"
  572                       | "int8"
  573                       | "int16"
  574                       | "int64"
  575                       | "int2"
  576                       | "int3"
  577                       | "int4"
  578                       | "uint"
  579                       | "uint8"
  580                       | "uint16"
  581                       | "uint64"
  582                       | "uint2"
  583                       | "uint3"
  584                       | "uint4"
  585                       | "float"
  586                       | "float2"
  587                       | "float3"
  588                       | "float4"
  589                       | "void"
  590                       | "range"
  591                       | "urange"
  592                       | "range64"
  593                       | "urange64"
  594                       | "double"
  595                       | "bitfield"

  596 enum_basic_type_declaration: "int"
  597                            | "int8"
  598                            | "int16"
  599                            | "uint"
  600                            | "uint8"
  601                            | "uint16"
  602                            | "int64"
  603                            | "uint64"

  604 structure_type_declaration: name_in_namespace

  605 auto_type_declaration: "auto"
  606                      | "auto" '(' "name" ')'
  607                      | "$t" '(' expr ')'

  608 bitfield_bits: "name"
  609              | bitfield_bits "end of expression" "name"

  610 bitfield_alias_bits: %empty
  611                    | "name"
  612                    | bitfield_alias_bits ',' "name"

  613 $@34: %empty

  614 $@35: %empty

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  616 table_type_pair: type_declaration
  617                | type_declaration "end of expression" type_declaration

  618 dim_list: '[' expr ']'
  619         | '[' ']'
  620         | dim_list '[' expr ']'
  621         | dim_list '[' ']'

  622 type_declaration_no_options: type_declaration_no_options_no_dim
  623                            | type_declaration_no_options_no_dim dim_list

  624 type_declaration_no_options_no_dim: basic_type_declaration
  625                                   | auto_type_declaration
  626                                   | bitfield_type_declaration
  627                                   | structure_type_declaration

  628 $@36: %empty

  629 $@37: %empty

  630 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37
  631                                   | "typedecl" '(' expr ')'
  632                                   | '$' name_in_namespace '(' optional_expr_list ')'

  633 $@38: %empty

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  635                                   | type_declaration_no_options_no_dim '-' '[' ']'
  636                                   | type_declaration_no_options_no_dim "explicit"
  637                                   | type_declaration_no_options_no_dim "const"
  638                                   | type_declaration_no_options_no_dim '-' "const"
  639                                   | type_declaration_no_options_no_dim '&'
  640                                   | type_declaration_no_options_no_dim '-' '&'
  641                                   | type_declaration_no_options_no_dim '#'
  642                                   | type_declaration_no_options_no_dim "implicit"
  643                                   | type_declaration_no_options_no_dim '-' '#'
  644                                   | type_declaration_no_options_no_dim "==" "const"
  645                                   | type_declaration_no_options_no_dim "==" '&'
  646                                   | type_declaration_no_options_no_dim '*'

  647 $@39: %empty

  648 $@40: %empty

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40
  650                                   | type_declaration_no_options_no_dim "??"

  651 $@41: %empty

  652 $@42: %empty

  653 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42

  654 $@43: %empty

  655 $@44: %empty

  656 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44

  657 $@45: %empty

  658 $@46: %empty

  659 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46
  660                                   | "block"

  661 $@47: %empty

  662 $@48: %empty

  663 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48

  664 $@49: %empty

  665 $@50: %empty

  666 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50
  667                                   | "function"

  668 $@51: %empty

  669 $@52: %empty

  670 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52

  671 $@53: %empty

  672 $@54: %empty

  673 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54
  674                                   | "lambda"

  675 $@55: %empty

  676 $@56: %empty

  677 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56

  678 $@57: %empty

  679 $@58: %empty

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58

  681 $@59: %empty

  682 $@60: %empty

  683 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60

  684 $@61: %empty

  685 $@62: %empty

  686 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62

  687 type_declaration: type_declaration_no_options
  688                 | type_declaration '|' type_declaration_no_options
  689                 | type_declaration '|' '#'

  690 $@63: %empty

  691 $@64: %empty

  692 $@65: %empty

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

  694 $@66: %empty

  695 $@67: %empty

  696 $@68: %empty

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

  698 $@69: %empty

  699 $@70: %empty

  700 $@71: %empty

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

  702 make_decl: make_struct_decl
  703          | make_dim_decl
  704          | make_table_decl
  705          | array_comprehension
  706          | make_tuple_call

  707 make_struct_fields: "name" copy_or_move expr
  708                   | "name" ":=" expr
  709                   | make_struct_fields ',' "name" copy_or_move expr
  710                   | make_struct_fields ',' "name" ":=" expr
  711                   | "$f" '(' expr ')' copy_or_move expr
  712                   | "$f" '(' expr ')' ":=" expr
  713                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  715 make_variant_dim: make_struct_fields

  716 make_struct_single: make_struct_fields

  717 make_struct_dim_list: '(' make_struct_fields ')'
  718                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  719 make_struct_dim_decl: make_struct_fields
  720                     | make_struct_dim_list optional_comma

  721 optional_make_struct_dim_decl: make_struct_dim_decl
  722                              | %empty

  723 use_initializer: %empty
  724                | "uninitialized"

  725 $@72: %empty

  726 $@73: %empty

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

  728 $@74: %empty

  729 $@75: %empty

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

  731 $@76: %empty

  732 $@77: %empty

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

  734 $@78: %empty

  735 $@79: %empty

  736 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer

  737 make_map_tuple: expr "=>" expr
  738               | expr

  739 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  740 $@80: %empty

  741 $@81: %empty

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

  743 make_dim_decl: '[' expr_list optional_comma ']'

  744 $@82: %empty

  745 $@83: %empty

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

  747 $@84: %empty

  748 $@85: %empty

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

  750 $@86: %empty

  751 $@87: %empty

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  753              | "array" '(' expr_list optional_comma ')'

  754 $@88: %empty

  755 $@89: %empty

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'
  757              | "fixed_array" '(' expr_list optional_comma ')'

  758 $@90: %empty

  759 $@91: %empty

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

  761 expr_map_tuple_list: make_map_tuple
  762                    | expr_map_tuple_list ',' make_map_tuple

  763 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  764                | "table" '(' expr_map_tuple_list optional_comma ')'
  765                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  766                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  767 array_comprehension_where: %empty
  768                          | "end of expression" "where" expr

  769 optional_comma: %empty
  770               | ','

  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  772                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  773                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 370
    '#' (35) 641 643 689
    '$' (36) 20 295 632 634
    '%' (37) 35 39 140 382
    '&' (38) 148 298 389 500 508 639 640 645
    '(' (40) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 448 450 451 452 453 454 455 456 457 458 459 481 510 565 606 607 631 632 634 711 712 713 714 717 718 727 730 733 739 742 746 749 752 753 756 757 760 764 765 766
    ')' (41) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 448 450 451 452 453 454 455 456 457 458 459 481 510 565 606 607 631 632 634 711 712 713 714 717 718 727 730 733 739 742 746 749 752 753 756 757 760 764 765 766
    '*' (42) 138 380 409 646
    '+' (43) 136 372 378
    ',' (44) 48 82 95 111 270 291 303 336 512 513 515 533 567 568 612 709 710 713 714 718 762 770
    '-' (45) 137 373 379 635 638 640 643
    '.' (46) 40 165 167 168 348 349 350 351 354 402 404 406 452 454 455
    '/' (47) 41 139 381
    ':' (58) 50 51 118 271 416 485 491 501 502 516 517 519 520 545 550
    "end of expression" (59) 9 15 16 69 214 215 216 221 223 224 225 226 229 230 231 240 271 272 289 475 477 483 487 489 490 493 495 496 516 517 518 519 520 521 539 609 617 766 768 771 772 773
    '<' (60) 141 248 277 280 283 286 288 289 344 347 383 412 413 414 419 425 430 615 630 634 649 653 656 659 663 666 670 673 677 680 683 686 727 730 733 736 742 746 749 752 756 760 765 766
    '=' (61) 74 86 87 88 89 90 91 93 299 317 497 504 530 538
    '>' (62) 142 248 277 280 283 286 288 289 344 347 384 412 413 414 419 425 430 615 630 634 649 653 656 659 663 666 670 673 677 680 683 686 727 730 733 736 742 746 749 752 756 760 765 766
    '?' (63) 177 178 416 427 430 431 457
    '@' (64) 96 97 296 297 341 344 347 459
    '[' (91) 113 163 335 336 401 402 618 619 620 621 635 743 771 772
    ']' (93) 113 163 164 335 336 401 402 403 404 618 619 620 621 635 743 771 772
    '^' (94) 150 391
    "begin of code block" (123) 211 212 308 548 560 693 697 701 763 773
    '|' (124) 149 390 688 689
    "end of code block" (125) 211 212 308 548 560 693 697 701 763 773
    '~' (126) 121 371
    error (256) 234 354
    "lexer error" (258)
    "capture" (259) 305
    "struct" (260) 555 727 746
    "class" (261) 554 730
    "let" (262) 262 265
    "def" (263) 204 477 479
    "while" (264) 72
    "if" (265) 59 69
    "static_if" (266) 60
    "else" (267) 57 62
    "for" (268) 70 771 772 773
    "recover" (269) 261
    "true" (270) 79 90 366
    "false" (271) 80 91 367
    "new" (272) 249 250 251 252 253
    "typeinfo" (273) 287 288 289
    "type" (274) 84 286 419 425 430 630
    "in" (275) 70 85 771 772 773
    "is" (276) 173 175 419 420 421 458
    "as" (277) 43 174 176 177 178 422 425 426 427 430 431 456 457
    "elif" (278) 54
    "static_elif" (279) 55
    "array" (280) 653 746 749 752 753 756
    "return" (281) 256 257 258
    "null" (282) 360
    "break" (283) 254
    "try" (284) 261
    "options" (285) 36
    "table" (286) 656 764 765 766
    "expect" (287) 46
    "const" (288) 466 637 638 644
    "require" (289) 37 99
    "operator" (290) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (291) 548
    "finally" (292) 212
    "delete" (293) 171 244 245
    "deref" (294) 410
    "typedef" (295) 539
    "typedecl" (296) 631
    "with" (297) 73
    "aka" (298) 511 513 566 568
    "assume" (299) 74
    "cast" (300) 277
    "override" (301) 463
    "abstract" (302) 477
    "upcast" (303) 280
    "iterator" (304) 659 772
    "var" (305) 263 266
    "addr" (306) 411
    "continue" (307) 255
    "where" (308) 768
    "pass" (309) 231
    "reinterpret" (310) 283
    "module" (311) 22
    "public" (312) 18 45 207 468 526 536 542 558
    "label" (313) 51 52
    "goto" (314) 52 53
    "implicit" (315) 642
    "explicit" (316) 245 636
    "shared" (317) 523
    "private" (318) 19 100 206 469 525 535 541 557
    "smart_ptr" (319) 649
    "unsafe" (320) 71 443
    "inscope" (321) 267
    "static" (322) 471
    "fixed_array" (323) 757 760
    "default" (324) 736
    "uninitialized" (325) 724
    "bool" (326) 179 569
    "void" (327) 589
    "string" (328) 180 570
    "auto" (329) 605 606
    "int" (330) 181 571 596
    "int2" (331) 182 575
    "int3" (332) 183 576
    "int4" (333) 184 577
    "uint" (334) 185 578 599
    "bitfield" (335) 595 615 701
    "uint2" (336) 186 582
    "uint3" (337) 187 583
    "uint4" (338) 188 584
    "float" (339) 189 585
    "float2" (340) 190 586
    "float3" (341) 191 587
    "float4" (342) 192 588
    "range" (343) 193 590
    "urange" (344) 194 591
    "range64" (345) 195 592
    "urange64" (346) 196 593
    "block" (347) 660 663 666
    "int64" (348) 197 574 602
    "uint64" (349) 198 581 603
    "double" (350) 199 594
    "function" (351) 667 670 673
    "lambda" (352) 674 677 680
    "int8" (353) 200 572 597
    "uint8" (354) 201 579 600
    "int16" (355) 202 573 598
    "uint16" (356) 203 580 601
    "tuple" (357) 683 693 739 742 749
    "variant" (358) 686 697 733 752
    "generator" (359) 412 413 414
    "yield" (360) 259 260
    "sealed" (361) 464 552
    "+=" (362) 122 326
    "-=" (363) 123 327
    "/=" (364) 125 329
    "*=" (365) 124 328
    "%=" (366) 126 330
    "&=" (367) 127 320
    "|=" (368) 128 321
    "^=" (369) 129 322
    "<<" (370) 155 374
    ">>" (371) 156 375
    "++" (372) 151 153 396 398
    "--" (373) 152 154 397 399
    "<=" (374) 146 387
    "<<=" (375) 157 331
    ">>=" (376) 158 332
    ">=" (377) 147 388
    "==" (378) 144 385 644 645
    "!=" (379) 145 386
    "->" (380) 337 338
    "<-" (381) 258 260 294 300 318 498 505
    "??" (382) 172 415 650
    "?." (383) 166 169 405 406 453 455
    "?[" (384) 164 403 404
    "<|" (385) 439
    "|>" (386) 109 440 441
    ":=" (387) 168 170 301 319 506 708 710 712 714
    "<<<" (388) 159 376
    ">>>" (389) 160 377
    "<<<=" (390) 161 333
    ">>>=" (391) 162 334
    "=>" (392) 293 294 737
    "::" (393) 242 243
    "&&" (394) 105 133 392
    "||" (395) 106 134 393
    "^^" (396) 107 135 394
    "&&=" (397) 130 323
    "||=" (398) 131 324
    "^^=" (399) 132 325
    ".." (400) 143 395
    "$$" (401) 444
    "$i" (402) 340 445 510 565
    "$v" (403) 446
    "$b" (404) 447
    "$a" (405) 448 481
    "$t" (406) 607
    "$c" (407) 450 451 459
    "$f" (408) 452 453 454 455 456 457 458 711 712 713 714
    "..." (409) 449
    "integer constant" <i> (410) 49 50 51 52 77 88 309
    "long integer constant" <i64> (411) 311
    "unsigned integer constant" <ui> (412) 310
    "unsigned long integer constant" <ui64> (413) 312
    "unsigned int8 constant" <ui> (414) 313
    "floating point constant" <fd> (415) 78 89 314
    "double constant" <d> (416) 315
    "name" <s> (417) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 241 242 243 269 270 288 289 298 299 300 301 337 338 348 349 350 351 405 406 421 422 427 485 491 509 511 512 513 514 515 529 530 538 543 553 564 566 567 568 606 608 609 611 612 693 697 701 707 708 709 710
    "start of the string" (418) 27 31
    STRING_CHARACTER <ch> (419) 23 25 32 33
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 31
    "{" (422) 30
    "}" (423) 30
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (217)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (218)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (219)
        on left: 31
        on right: 364
    reader_character_sequence (220)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (221)
        on left: 35
        on right: 16 363
    $@1 (222)
        on left: 34
        on right: 35
    options_declaration (223)
        on left: 36
        on right: 9
    require_declaration (224)
        on left: 37
        on right: 8
    require_module_name <s> (225)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (226)
        on left: 42 43
        on right: 37
    is_public_module <b> (227)
        on left: 44 45
        on right: 42 43
    expect_declaration (228)
        on left: 46
        on right: 7
    expect_list (229)
        on left: 47 48
        on right: 46 48
    expect_error (230)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (231)
        on left: 51
        on right: 229
    expression_goto <pExpression> (232)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (233)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (234)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (235)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (236)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (237)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (238)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (239)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (240)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (241)
        on left: 72
        on right: 218
    expression_with <pExpression> (242)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (243)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (244)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (245)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (246)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (247)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (248)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (249)
        on left: 96 97
        on right: 97 461
    annotation_declaration_name <s> (250)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (251)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (252)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (253)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (254)
        on left: 112 113
        on right: 204 306 307 477 479 548 563
    optional_function_argument_list <pVarDeclList> (255)
        on left: 114 115 116
        on right: 208 306 307 347 666 673 680
    optional_function_type <pTypeDecl> (256)
        on left: 117 118
        on right: 208 306 307 347 666 673 680
    function_name <s> (257)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (258)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (260)
        on left: 208
        on right: 210 477 479
    function_declaration <pFuncDecl> (261)
        on left: 210
        on right: 204
    $@2 (262)
        on left: 209
        on right: 210
    expression_block <pExpression> (263)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 261 292 307 414 479
    expr_call_pipe <pExpression> (264)
        on left: 213
        on right: 442
    expression_any <pExpression> (265)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (266)
        on left: 232 233 234
        on right: 211 212 233 234 308
    optional_expr_list <pExpression> (267)
        on left: 235 236
        on right: 250 632 634 756
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 237 238
        on right: 765 766
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 239 240
        on right: 240 634
    name_in_namespace <s> (270)
        on left: 241 242 243
        on right: 35 98 287 288 289 335 336 339 355 356 357 361 550 604 632 634
    expression_delete <pExpression> (271)
        on left: 244 245
        on right: 216
    new_type_declaration <pTypeDecl> (272)
        on left: 248
        on right: 251 252
    $@3 (273)
        on left: 246
        on right: 248
    $@4 (274)
        on left: 247
        on right: 248
    expr_new <pExpression> (275)
        on left: 249 250 251 252 253
        on right: 435
    expression_break <pExpression> (276)
        on left: 254
        on right: 66 223
    expression_continue <pExpression> (277)
        on left: 255
        on right: 67 224
    expression_return <pExpression> (278)
        on left: 256 257 258
        on right: 64 225
    expression_yield <pExpression> (279)
        on left: 259 260
        on right: 65 226
    expression_try_catch <pExpression> (280)
        on left: 261
        on right: 228
    kwd_let_var_or_nothing <b> (281)
        on left: 262 263 264
        on right: 480
    kwd_let <b> (282)
        on left: 265 266
        on right: 273 274 528
    optional_in_scope <b> (283)
        on left: 267 268
        on right: 273 274
    tuple_expansion <pNameList> (284)
        on left: 269 270
        on right: 270 271 272
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 271 272
        on right: 274
    expression_let <pExpression> (286)
        on left: 273 274
        on right: 217
    expr_cast <pExpression> (287)
        on left: 277 280 283
        on right: 434
    $@5 (288)
        on left: 275
        on right: 277
    $@6 (289)
        on left: 276
        on right: 277
    $@7 (290)
        on left: 278
        on right: 280
    $@8 (291)
        on left: 279
        on right: 280
    $@9 (292)
        on left: 281
        on right: 283
    $@10 (293)
        on left: 282
        on right: 283
    expr_type_decl <pExpression> (294)
        on left: 286
        on right: 433
    $@11 (295)
        on left: 284
        on right: 286
    $@12 (296)
        on left: 285
        on right: 286
    expr_type_info <pExpression> (297)
        on left: 287 288 289
        on right: 432
    expr_list <pExpression> (298)
        on left: 290 291
        on right: 70 236 291 336 338 351 357 359 400 451 739 743 753 757 760 771 772 773
    block_or_simple_block <pExpression> (299)
        on left: 292 293 294
        on right: 306
    block_or_lambda <i> (300)
        on left: 295 296 297
        on right: 306 307
    capture_entry <pCapt> (301)
        on left: 298 299 300 301
        on right: 302 303
    capture_list <pCaptList> (302)
        on left: 302 303
        on right: 303 305
    optional_capture_list <pCaptList> (303)
        on left: 304 305
        on right: 306 307 412 413 414
    expr_full_block <pExpression> (304)
        on left: 306
        on right: 438
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 307 308
        on right: 213
    expr_numeric_const <pExpression> (306)
        on left: 309 310 311 312 313 314 315
        on right: 362
    expr_assign <pExpression> (307)
        on left: 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334
        on right: 215
    expr_named_call <pExpression> (308)
        on left: 335 336
        on right: 437
    expr_method_call <pExpression> (309)
        on left: 337 338
        on right: 436
    func_addr_name <pExpression> (310)
        on left: 339 340
        on right: 341 344 347
    func_addr_expr <pExpression> (311)
        on left: 341 344 347
        on right: 407
    $@13 (312)
        on left: 342
        on right: 344
    $@14 (313)
        on left: 343
        on right: 344
    $@15 (314)
        on left: 345
        on right: 347
    $@16 (315)
        on left: 346
        on right: 347
    expr_field <pExpression> (316)
        on left: 348 349 350 351 354
        on right: 368
    $@17 (317)
        on left: 352
        on right: 354
    $@18 (318)
        on left: 353
        on right: 354
    expr_call <pExpression> (319)
        on left: 355 356 357 358 359
        on right: 213 408
    expr <pExpression> (320)
        on left: 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 419 420 421 422 425 426 427 430 431 432 433 434 435 436 437 438 439 440 441 442 443
        on right
    $@19 (321)
        on left: 417
        on right: 419
    $@20 (322)
        on left: 418
        on right: 419
    $@21 (323)
        on left: 423
        on right: 425
    $@22 (324)
        on left: 424
        on right: 425
    $@23 (325)
        on left: 428
        on right: 430
    $@24 (326)
        on left: 429
        on right: 430
    expr_mtag <pExpression> (327)
        on left: 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459
        on right: 369
    optional_field_annotation <aaList> (328)
        on left: 460 461
        on right: 472 480 528
    optional_override <i> (329)
        on left: 462 463 464
        on right: 472 479
    optional_constant <b> (330)
        on left: 465 466
        on right: 477 479
    optional_public_or_private_member_variable <b> (331)
        on left: 467 468 469
        on right: 472 477 479
    optional_static_member_variable <b> (332)
        on left: 470 471
        on right: 472 479
    structure_variable_declaration <pVarDecl> (333)
        on left: 472
        on right: 475
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 473 475 477 479
        on right: 475 477 479 560
    $@25 (335)
        on left: 474
        on right: 475
    $@26 (336)
        on left: 476
        on right: 477
    $@27 (337)
        on left: 478
        on right: 479
    function_argument_declaration <pVarDecl> (338)
        on left: 480 481
        on right: 482 483
    function_argument_list <pVarDeclList> (339)
        on left: 482 483
        on right: 116 483
    tuple_type <pVarDecl> (340)
        on left: 484 485
        on right: 486 487 490
    tuple_type_list <pVarDeclList> (341)
        on left: 486 487
        on right: 487 683
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 488 489 490
        on right: 489 490 693
    variant_type <pVarDecl> (343)
        on left: 491
        on right: 492 493 496
    variant_type_list <pVarDeclList> (344)
        on left: 492 493
        on right: 493 686
    variant_alias_type_list <pVarDeclList> (345)
        on left: 494 495 496
        on right: 495 496 697
    copy_or_move <b> (346)
        on left: 497 498
        on right: 502 503 707 709 711 713
    variable_declaration <pVarDecl> (347)
        on left: 499 500 501 502 503
        on right: 472 480
    copy_or_move_or_clone <i> (348)
        on left: 504 505 506
        on right: 271 272 517 518 520 521
    optional_ref <b> (349)
        on left: 507 508
        on right: 272 518 521
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 509 510 511 512 513
        on right: 512 513 516 517 518
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 514 515
        on right: 515 519 520 521
    let_variable_declaration <pVarDecl> (352)
        on left: 516 517 518
        on right: 273
    global_let_variable_declaration <pVarDecl> (353)
        on left: 519 520 521
        on right: 528
    optional_shared <b> (354)
        on left: 522 523
        on right: 22 528
    optional_public_or_private_variable <b> (355)
        on left: 524 525 526
        on right: 528
    global_let (356)
        on left: 528
        on right: 5
    $@28 (357)
        on left: 527
        on right: 528
    enum_expression <pEnumPair> (358)
        on left: 529 530
        on right: 532 533
    enum_list <pEnum> (359)
        on left: 531 532 533
        on right: 533 548
    optional_public_or_private_alias <b> (360)
        on left: 534 535 536
        on right: 538 693 697 701
    single_alias (361)
        on left: 538
        on right: 539
    $@29 (362)
        on left: 537
        on right: 538
    alias_declaration (363)
        on left: 539
        on right: 10
    optional_public_or_private_enum <b> (364)
        on left: 540 541 542
        on right: 548
    enum_name <pEnum> (365)
        on left: 543
        on right: 548
    optional_enum_basic_type_declaration <type> (366)
        on left: 544 545
        on right: 548
    enum_declaration (367)
        on left: 548
        on right: 4
    $@30 (368)
        on left: 546
        on right: 548
    $@31 (369)
        on left: 547
        on right: 548
    optional_structure_parent <s> (370)
        on left: 549 550
        on right: 553
    optional_sealed <b> (371)
        on left: 551 552
        on right: 553
    structure_name <pStructure> (372)
        on left: 553
        on right: 563
    class_or_struct <b> (373)
        on left: 554 555
        on right: 563
    optional_public_or_private_structure <b> (374)
        on left: 556 557 558
        on right: 563
    optional_struct_variable_declaration_list <pVarDeclList> (375)
        on left: 559 560
        on right: 563
    structure_declaration (376)
        on left: 563
        on right: 3
    $@32 (377)
        on left: 561
        on right: 563
    $@33 (378)
        on left: 562
        on right: 563
    variable_name_with_pos_list <pNameWithPosList> (379)
        on left: 564 565 566 567 568
        on right: 70 499 500 501 502 503 567 568 771 772 773
    basic_type_declaration <type> (380)
        on left: 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595
        on right: 358 359 420 426 431 441 624
    enum_basic_type_declaration <type> (381)
        on left: 596 597 598 599 600 601 602 603
        on right: 545
    structure_type_declaration <pTypeDecl> (382)
        on left: 604
        on right: 249 250 627
    auto_type_declaration <pTypeDecl> (383)
        on left: 605 606 607
        on right: 625
    bitfield_bits <pNameList> (384)
        on left: 608 609
        on right: 609 615
    bitfield_alias_bits <pNameList> (385)
        on left: 610 611 612
        on right: 612 701
    bitfield_type_declaration <pTypeDecl> (386)
        on left: 615
        on right: 626
    $@34 (387)
        on left: 613
        on right: 615
    $@35 (388)
        on left: 614
        on right: 615
    table_type_pair <aTypePair> (389)
        on left: 616 617
        on right: 656
    dim_list <pTypeDecl> (390)
        on left: 618 619 620 621
        on right: 620 621 623
    type_declaration_no_options <pTypeDecl> (391)
        on left: 622 623
        on right: 271 277 280 283 344 412 413 414 419 516 517 519 520 687 688 727 730 733 736 742 746 749 752 756 760 765 766
    type_declaration_no_options_no_dim <pTypeDecl> (392)
        on left: 624 625 626 627 630 631 632 634 635 636 637 638 639 640 641 642 643 644 645 646 649 650 653 656 659 660 663 666 667 670 673 674 677 680 683 686
        on right: 622 623 635 636 637 638 639 640 641 642 643 644 645 646 650
    $@36 (393)
        on left: 628
        on right: 630
    $@37 (394)
        on left: 629
        on right: 630
    $@38 (395)
        on left: 633
        on right: 634
    $@39 (396)
        on left: 647
        on right: 649
    $@40 (397)
        on left: 648
        on right: 649
    $@41 (398)
        on left: 651
        on right: 653
    $@42 (399)
        on left: 652
        on right: 653
    $@43 (400)
        on left: 654
        on right: 656
    $@44 (401)
        on left: 655
        on right: 656
    $@45 (402)
        on left: 657
        on right: 659
    $@46 (403)
        on left: 658
        on right: 659
    $@47 (404)
        on left: 661
        on right: 663
    $@48 (405)
        on left: 662
        on right: 663
    $@49 (406)
        on left: 664
        on right: 666
    $@50 (407)
        on left: 665
        on right: 666
    $@51 (408)
        on left: 668
        on right: 670
    $@52 (409)
        on left: 669
        on right: 670
    $@53 (410)
        on left: 671
        on right: 673
    $@54 (411)
        on left: 672
        on right: 673
    $@55 (412)
        on left: 675
        on right: 677
    $@56 (413)
        on left: 676
        on right: 677
    $@57 (414)
        on left: 678
        on right: 680
    $@58 (415)
        on left: 679
        on right: 680
    $@59 (416)
        on left: 681
        on right: 683
    $@60 (417)
        on left: 682
        on right: 683
    $@61 (418)
        on left: 684
        on right: 686
    $@62 (419)
        on left: 685
        on right: 686
    type_declaration <pTypeDecl> (420)
        on left: 687 688 689
        on right: 118 239 240 248 286 425 430 484 485 491 501 502 538 616 617 630 649 653 659 663 670 677 688 689
    tuple_alias_declaration (421)
        on left: 693
        on right: 12
    $@63 (422)
        on left: 690
        on right: 693
    $@64 (423)
        on left: 691
        on right: 693
    $@65 (424)
        on left: 692
        on right: 693
    variant_alias_declaration (425)
        on left: 697
        on right: 11
    $@66 (426)
        on left: 694
        on right: 697
    $@67 (427)
        on left: 695
        on right: 697
    $@68 (428)
        on left: 696
        on right: 697
    bitfield_alias_declaration (429)
        on left: 701
        on right: 13
    $@69 (430)
        on left: 698
        on right: 701
    $@70 (431)
        on left: 699
        on right: 701
    $@71 (432)
        on left: 700
        on right: 701
    make_decl <pExpression> (433)
        on left: 702 703 704 705 706
        on right: 253 365
    make_struct_fields <pMakeStruct> (434)
        on left: 707 708 709 710 711 712 713 714
        on right: 335 336 709 710 713 714 715 716 717 718 719
    make_variant_dim <pExpression> (435)
        on left: 715
        on right: 733 752
    make_struct_single <pExpression> (436)
        on left: 716
        on right: 252 356
    make_struct_dim_list <pExpression> (437)
        on left: 717 718
        on right: 718 720
    make_struct_dim_decl <pExpression> (438)
        on left: 719 720
        on right: 721
    optional_make_struct_dim_decl <pExpression> (439)
        on left: 721 722
        on right: 727 730 742 746 749
    use_initializer <b> (440)
        on left: 723 724
        on right: 251 252 727 730 736 742 746 749
    make_struct_decl <pExpression> (441)
        on left: 727 730 733 736
        on right: 702
    $@72 (442)
        on left: 725
        on right: 727
    $@73 (443)
        on left: 726
        on right: 727
    $@74 (444)
        on left: 728
        on right: 730
    $@75 (445)
        on left: 729
        on right: 730
    $@76 (446)
        on left: 731
        on right: 733
    $@77 (447)
        on left: 732
        on right: 733
    $@78 (448)
        on left: 734
        on right: 736
    $@79 (449)
        on left: 735
        on right: 736
    make_map_tuple <pExpression> (450)
        on left: 737 738
        on right: 761 762 773
    make_tuple_call <pExpression> (451)
        on left: 739 742
        on right: 706
    $@80 (452)
        on left: 740
        on right: 742
    $@81 (453)
        on left: 741
        on right: 742
    make_dim_decl <pExpression> (454)
        on left: 743 746 749 752 753 756 757 760
        on right: 703
    $@82 (455)
        on left: 744
        on right: 746
    $@83 (456)
        on left: 745
        on right: 746
    $@84 (457)
        on left: 747
        on right: 749
    $@85 (458)
        on left: 748
        on right: 749
    $@86 (459)
        on left: 750
        on right: 752
    $@87 (460)
        on left: 751
        on right: 752
    $@88 (461)
        on left: 754
        on right: 756
    $@89 (462)
        on left: 755
        on right: 756
    $@90 (463)
        on left: 758
        on right: 760
    $@91 (464)
        on left: 759
        on right: 760
    expr_map_tuple_list <pExpression> (465)
        on left: 761 762
        on right: 238 762 763 764
    make_table_decl <pExpression> (466)
        on left: 763 764 765 766
        on right: 704
    array_comprehension_where <pExpression> (467)
        on left: 767 768
        on right: 771 772 773
    optional_comma <b> (468)
        on left: 769 770
        on right: 236 238 400 548 701 720 739 743 753 757 760 763 764
    array_comprehension <pExpression> (469)
        on left: 771 772 773
        on right: 705


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  265 kwd_let: "let" .

    $default  reduce using rule 265 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  539 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  266 kwd_let: "var" .

    $default  reduce using rule 266 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  701 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  693 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  697 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 534 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  548 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"
  563 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 70
    "class"   shift, and go to state 71
    "def"     shift, and go to state 72
    "enum"    shift, and go to state 73

    class_or_struct  go to state 74


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  528 global_let: kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 75

    $default  reduce using rule 522 (optional_shared)

    optional_shared  go to state 76


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 77

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 78

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 79

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list .
   48 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 80

    $default  reduce using rule 46 (expect_declaration)


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 81


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 82
    "public"  shift, and go to state 83
    '/'       shift, and go to state 84
    '.'       shift, and go to state 85

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 86


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  536 optional_public_or_private_alias: "public" .

    $default  reduce using rule 536 (optional_public_or_private_alias)


State 46

  535 optional_public_or_private_alias: "private" .

    $default  reduce using rule 535 (optional_public_or_private_alias)


State 47

  538 single_alias: optional_public_or_private_alias . "name" $@29 '=' type_declaration

    "name"  shift, and go to state 87


State 48

  539 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 88


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 75

    $default  reduce using rule 522 (optional_shared)

    optional_shared  go to state 89


State 52

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 90


State 53

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "name"  shift, and go to state 91


State 54

  697 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "name"  shift, and go to state 92


State 55

  243 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 93


State 56

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"

    "::"  shift, and go to state 94

    $default  reduce using rule 241 (name_in_namespace)


State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 95


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 99

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 103
    ']'  shift, and go to state 104


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

  555 class_or_struct: "struct" .

    $default  reduce using rule 555 (class_or_struct)


State 71

  554 class_or_struct: "class" .

    $default  reduce using rule 554 (class_or_struct)


State 72

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 105
    "private"  shift, and go to state 106

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 107
    function_declaration                 go to state 108


State 73

  548 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 540 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 111


State 74

  563 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 556 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 114


State 75

  523 optional_shared: "shared" .

    $default  reduce using rule 523 (optional_shared)


State 76

  528 global_let: kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 524 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 117


State 77

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 118
    "false"                    shift, and go to state 119
    "integer constant"         shift, and go to state 120
    "floating point constant"  shift, and go to state 121
    "name"                     shift, and go to state 122
    "start of the string"      shift, and go to state 123
    '('                        shift, and go to state 124

    string_constant  go to state 125


State 78

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 126


State 79

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 127


State 80

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 128


State 81

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 85

    $default  reduce using rule 39 (require_module_name)


State 82

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 129


State 83

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 84

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 130


State 85

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 131


State 86

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 87

  538 single_alias: optional_public_or_private_alias "name" . $@29 '=' type_declaration

    $default  reduce using rule 537 ($@29)

    $@29  go to state 132


State 88

  539 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 539 (alias_declaration)


State 89

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 133
    "private"  shift, and go to state 134

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 135


State 90

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 698 ($@69)

    $@69  go to state 136


State 91

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 690 ($@63)

    $@63  go to state 137


State 92

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 694 ($@66)

    $@66  go to state 138


State 93

  243 name_in_namespace: "::" "name" .

    $default  reduce using rule 243 (name_in_namespace)


State 94

  242 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 95

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 96

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 97

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 98

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102
    ')'   shift, and go to state 142


State 99

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 143


State 100

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 105

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 106

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 107

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 148


State 108

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 109

  542 optional_public_or_private_enum: "public" .

    $default  reduce using rule 542 (optional_public_or_private_enum)


State 110

  541 optional_public_or_private_enum: "private" .

    $default  reduce using rule 541 (optional_public_or_private_enum)


State 111

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 149

    enum_name  go to state 150


State 112

  558 optional_public_or_private_structure: "public" .

    $default  reduce using rule 558 (optional_public_or_private_structure)


State 113

  557 optional_public_or_private_structure: "private" .

    $default  reduce using rule 557 (optional_public_or_private_structure)


State 114

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 561 ($@32)

    $@32  go to state 151


State 115

  526 optional_public_or_private_variable: "public" .

    $default  reduce using rule 526 (optional_public_or_private_variable)


State 116

  525 optional_public_or_private_variable: "private" .

    $default  reduce using rule 525 (optional_public_or_private_variable)


State 117

  528 global_let: kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation global_let_variable_declaration

    $default  reduce using rule 527 ($@28)

    $@28  go to state 152


State 118

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 119

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 121

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 122

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 123

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154

    character_sequence  go to state 155


State 124

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant                 go to state 161
    annotation_argument_value       go to state 162
    annotation_argument_value_list  go to state 163


State 125

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 126

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 127

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 128

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 129

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 83

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 164


State 130

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 131

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 132

  538 single_alias: optional_public_or_private_alias "name" $@29 . '=' type_declaration

    '='  shift, and go to state 165


State 133

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 134

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 135

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 136

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 . "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "begin of code block"  shift, and go to state 166


State 137

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 . "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "begin of code block"  shift, and go to state 167


State 138

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 . "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "begin of code block"  shift, and go to state 168


State 139

  242 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 242 (name_in_namespace)


State 140

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 141

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 169

    $default  reduce using rule 35 (expr_reader)


State 142

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 143

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 78
    ')'  shift, and go to state 170


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 100
    "^^"  shift, and go to state 102

    $default  reduce using rule 106 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 100

    $default  reduce using rule 107 (annotation_declaration)


State 147

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 111 (annotation_list)


State 148

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 201


State 149

  543 enum_name: "name" .

    $default  reduce using rule 543 (enum_name)


State 150

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    ':'  shift, and go to state 202

    $default  reduce using rule 544 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 203


State 151

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 204

    $default  reduce using rule 551 (optional_sealed)

    optional_sealed  go to state 205
    structure_name   go to state 206


State 152

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list     go to state 208
    optional_field_annotation  go to state 209


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211
    "end of the string"   shift, and go to state 212


State 156

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 157

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 159

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 161

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 162

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 163

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 213
    ')'  shift, and go to state 214


State 164

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 165

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 263


State 166

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" . $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 699 ($@70)

    $@70  go to state 264


State 167

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" . $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 691 ($@64)

    $@64  go to state 265


State 168

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" . $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 695 ($@67)

    $@67  go to state 266


State 169

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 170

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 171

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 267
    "as"      shift, and go to state 268
    "delete"  shift, and go to state 269
    "+="      shift, and go to state 270
    "-="      shift, and go to state 271
    "/="      shift, and go to state 272
    "*="      shift, and go to state 273
    "%="      shift, and go to state 274
    "&="      shift, and go to state 275
    "|="      shift, and go to state 276
    "^="      shift, and go to state 277
    "<<"      shift, and go to state 278
    ">>"      shift, and go to state 279
    "++"      shift, and go to state 280
    "--"      shift, and go to state 281
    "<="      shift, and go to state 282
    "<<="     shift, and go to state 283
    ">>="     shift, and go to state 284
    ">="      shift, and go to state 285
    "=="      shift, and go to state 286
    "!="      shift, and go to state 287
    "??"      shift, and go to state 288
    "?."      shift, and go to state 289
    "?["      shift, and go to state 290
    ":="      shift, and go to state 291
    "<<<"     shift, and go to state 292
    ">>>"     shift, and go to state 293
    "<<<="    shift, and go to state 294
    ">>>="    shift, and go to state 295
    "&&"      shift, and go to state 296
    "||"      shift, and go to state 297
    "^^"      shift, and go to state 298
    "&&="     shift, and go to state 299
    "||="     shift, and go to state 300
    "^^="     shift, and go to state 301
    ".."      shift, and go to state 302
    '?'       shift, and go to state 303
    '|'       shift, and go to state 304
    '^'       shift, and go to state 305
    '&'       shift, and go to state 306
    '<'       shift, and go to state 307
    '>'       shift, and go to state 308
    '-'       shift, and go to state 309
    '+'       shift, and go to state 310
    '*'       shift, and go to state 311
    '/'       shift, and go to state 312
    '%'       shift, and go to state 313
    '~'       shift, and go to state 314
    '!'       shift, and go to state 315
    '.'       shift, and go to state 316
    '['       shift, and go to state 317


State 172

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 173

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 197

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 318


State 198

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 319


State 199

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 200

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 321


State 201

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 323


State 202

  545 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 324
    "uint"    shift, and go to state 325
    "int64"   shift, and go to state 326
    "uint64"  shift, and go to state 327
    "int8"    shift, and go to state 328
    "uint8"   shift, and go to state 329
    "int16"   shift, and go to state 330
    "uint16"  shift, and go to state 331

    enum_basic_type_declaration  go to state 332


State 203

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "begin of code block"  shift, and go to state 333


State 204

  552 optional_sealed: "sealed" .

    $default  reduce using rule 552 (optional_sealed)


State 205

  553 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 334


State 206

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 562 ($@33)

    $@33  go to state 335


State 207

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 336


State 208

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  461 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 337

    $default  reduce using rule 461 (optional_field_annotation)


State 209

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 338

    global_let_variable_name_with_pos_list  go to state 339
    global_let_variable_declaration         go to state 340


State 210

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 211

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 212

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 213

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 123

    string_constant            go to state 161
    annotation_argument_value  go to state 341


State 214

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 215

  630 type_declaration_no_options_no_dim: "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 342


State 216

  653 type_declaration_no_options_no_dim: "array" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 343


State 217

  656 type_declaration_no_options_no_dim: "table" . '<' $@43 table_type_pair '>' $@44

    '<'  shift, and go to state 344


State 218

  631 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 345


State 219

  659 type_declaration_no_options_no_dim: "iterator" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 346


State 220

  649 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@39 type_declaration '>' $@40

    '<'  shift, and go to state 347


State 221

  569 basic_type_declaration: "bool" .

    $default  reduce using rule 569 (basic_type_declaration)


State 222

  589 basic_type_declaration: "void" .

    $default  reduce using rule 589 (basic_type_declaration)


State 223

  570 basic_type_declaration: "string" .

    $default  reduce using rule 570 (basic_type_declaration)


State 224

  605 auto_type_declaration: "auto" .
  606                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 348

    $default  reduce using rule 605 (auto_type_declaration)


State 225

  571 basic_type_declaration: "int" .

    $default  reduce using rule 571 (basic_type_declaration)


State 226

  575 basic_type_declaration: "int2" .

    $default  reduce using rule 575 (basic_type_declaration)


State 227

  576 basic_type_declaration: "int3" .

    $default  reduce using rule 576 (basic_type_declaration)


State 228

  577 basic_type_declaration: "int4" .

    $default  reduce using rule 577 (basic_type_declaration)


State 229

  578 basic_type_declaration: "uint" .

    $default  reduce using rule 578 (basic_type_declaration)


State 230

  595 basic_type_declaration: "bitfield" .
  615 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 349

    $default  reduce using rule 595 (basic_type_declaration)


State 231

  582 basic_type_declaration: "uint2" .

    $default  reduce using rule 582 (basic_type_declaration)


State 232

  583 basic_type_declaration: "uint3" .

    $default  reduce using rule 583 (basic_type_declaration)


State 233

  584 basic_type_declaration: "uint4" .

    $default  reduce using rule 584 (basic_type_declaration)


State 234

  585 basic_type_declaration: "float" .

    $default  reduce using rule 585 (basic_type_declaration)


State 235

  586 basic_type_declaration: "float2" .

    $default  reduce using rule 586 (basic_type_declaration)


State 236

  587 basic_type_declaration: "float3" .

    $default  reduce using rule 587 (basic_type_declaration)


State 237

  588 basic_type_declaration: "float4" .

    $default  reduce using rule 588 (basic_type_declaration)


State 238

  590 basic_type_declaration: "range" .

    $default  reduce using rule 590 (basic_type_declaration)


State 239

  591 basic_type_declaration: "urange" .

    $default  reduce using rule 591 (basic_type_declaration)


State 240

  592 basic_type_declaration: "range64" .

    $default  reduce using rule 592 (basic_type_declaration)


State 241

  593 basic_type_declaration: "urange64" .

    $default  reduce using rule 593 (basic_type_declaration)


State 242

  660 type_declaration_no_options_no_dim: "block" .
  663                                   | "block" . '<' $@47 type_declaration '>' $@48
  666                                   | "block" . '<' $@49 optional_function_argument_list optional_function_type '>' $@50

    '<'  shift, and go to state 350

    $default  reduce using rule 660 (type_declaration_no_options_no_dim)


State 243

  574 basic_type_declaration: "int64" .

    $default  reduce using rule 574 (basic_type_declaration)


State 244

  581 basic_type_declaration: "uint64" .

    $default  reduce using rule 581 (basic_type_declaration)


State 245

  594 basic_type_declaration: "double" .

    $default  reduce using rule 594 (basic_type_declaration)


State 246

  667 type_declaration_no_options_no_dim: "function" .
  670                                   | "function" . '<' $@51 type_declaration '>' $@52
  673                                   | "function" . '<' $@53 optional_function_argument_list optional_function_type '>' $@54

    '<'  shift, and go to state 351

    $default  reduce using rule 667 (type_declaration_no_options_no_dim)


State 247

  674 type_declaration_no_options_no_dim: "lambda" .
  677                                   | "lambda" . '<' $@55 type_declaration '>' $@56
  680                                   | "lambda" . '<' $@57 optional_function_argument_list optional_function_type '>' $@58

    '<'  shift, and go to state 352

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 248

  572 basic_type_declaration: "int8" .

    $default  reduce using rule 572 (basic_type_declaration)


State 249

  579 basic_type_declaration: "uint8" .

    $default  reduce using rule 579 (basic_type_declaration)


State 250

  573 basic_type_declaration: "int16" .

    $default  reduce using rule 573 (basic_type_declaration)


State 251

  580 basic_type_declaration: "uint16" .

    $default  reduce using rule 580 (basic_type_declaration)


State 252

  683 type_declaration_no_options_no_dim: "tuple" . '<' $@59 tuple_type_list '>' $@60

    '<'  shift, and go to state 353


State 253

  686 type_declaration_no_options_no_dim: "variant" . '<' $@61 variant_type_list '>' $@62

    '<'  shift, and go to state 354


State 254

  607 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 355


State 255

  632 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  634                                   | '$' . name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 356


State 256

  604 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 604 (structure_type_declaration)


State 257

  624 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 624 (type_declaration_no_options_no_dim)


State 258

  627 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 627 (type_declaration_no_options_no_dim)


State 259

  625 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 625 (type_declaration_no_options_no_dim)


State 260

  626 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 626 (type_declaration_no_options_no_dim)


State 261

  687 type_declaration: type_declaration_no_options .

    $default  reduce using rule 687 (type_declaration)


State 262

  622 type_declaration_no_options: type_declaration_no_options_no_dim .
  623                            | type_declaration_no_options_no_dim . dim_list
  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  636                                   | type_declaration_no_options_no_dim . "explicit"
  637                                   | type_declaration_no_options_no_dim . "const"
  638                                   | type_declaration_no_options_no_dim . '-' "const"
  639                                   | type_declaration_no_options_no_dim . '&'
  640                                   | type_declaration_no_options_no_dim . '-' '&'
  641                                   | type_declaration_no_options_no_dim . '#'
  642                                   | type_declaration_no_options_no_dim . "implicit"
  643                                   | type_declaration_no_options_no_dim . '-' '#'
  644                                   | type_declaration_no_options_no_dim . "==" "const"
  645                                   | type_declaration_no_options_no_dim . "==" '&'
  646                                   | type_declaration_no_options_no_dim . '*'
  650                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 357
    "implicit"  shift, and go to state 358
    "explicit"  shift, and go to state 359
    "=="        shift, and go to state 360
    "??"        shift, and go to state 361
    '&'         shift, and go to state 362
    '-'         shift, and go to state 363
    '*'         shift, and go to state 364
    '['         shift, and go to state 365
    '#'         shift, and go to state 366

    $default  reduce using rule 622 (type_declaration_no_options)

    dim_list  go to state 367


State 263

  538 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 538 (single_alias)


State 264

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 . bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 369

    $default  reduce using rule 610 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 370


State 265

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 . tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 488 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 371


State 266

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 . variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 494 (variant_alias_type_list)

    variant_alias_type_list  go to state 372


State 267

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 173 (function_name)


State 268

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 174 (function_name)


State 269

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 270

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 271

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 272

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 273

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 274

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 275

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 276

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 277

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 278

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 279

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 280

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 281

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 282

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 283

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 284

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 285

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 286

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 287

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 288

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 289

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 166 (function_name)


State 290

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 376


State 291

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 292

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 293

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 295

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 296

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 297

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 298

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 299

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 300

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 301

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 302

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 303

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 377


State 304

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 305

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 306

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 307

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 308

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 309

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 310

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 311

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 312

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 313

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 314

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 315

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 316

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 378

    $default  reduce using rule 165 (function_name)


State 317

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 379


State 318

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 319

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 320

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 380
    ')'   shift, and go to state 381
    '@'   shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 383
    function_argument_list         go to state 384


State 321

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 386


State 322

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 387


State 323

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 324

  596 enum_basic_type_declaration: "int" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 325

  599 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 599 (enum_basic_type_declaration)


State 326

  602 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 602 (enum_basic_type_declaration)


State 327

  603 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 603 (enum_basic_type_declaration)


State 328

  597 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 329

  600 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 600 (enum_basic_type_declaration)


State 330

  598 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 331

  601 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 601 (enum_basic_type_declaration)


State 332

  545 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 545 (optional_enum_basic_type_declaration)


State 333

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@30 enum_list optional_comma $@31 "end of code block"

    $default  reduce using rule 546 ($@30)

    $@30  go to state 388


State 334

  553 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 389

    $default  reduce using rule 549 (optional_structure_parent)

    optional_structure_parent  go to state 390


State 335

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 391

    $default  reduce using rule 559 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 392


State 336

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 337

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 393


State 338

  514 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 514 (global_let_variable_name_with_pos_list)


State 339

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  519 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  521                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 394
    ':'  shift, and go to state 395
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 397


State 340

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 528 (global_let)


State 341

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 342

  630 type_declaration_no_options_no_dim: "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 628 ($@36)

    $@36  go to state 398


State 343

  653 type_declaration_no_options_no_dim: "array" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 651 ($@41)

    $@41  go to state 399


State 344

  656 type_declaration_no_options_no_dim: "table" '<' . $@43 table_type_pair '>' $@44

    $default  reduce using rule 654 ($@43)

    $@43  go to state 400


State 345

  631 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 466
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 346

  659 type_declaration_no_options_no_dim: "iterator" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 657 ($@45)

    $@45  go to state 475


State 347

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@39 type_declaration '>' $@40

    $default  reduce using rule 647 ($@39)

    $@39  go to state 476


State 348

  606 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 477


State 349

  615 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 613 ($@34)

    $@34  go to state 478


State 350

  663 type_declaration_no_options_no_dim: "block" '<' . $@47 type_declaration '>' $@48
  666                                   | "block" '<' . $@49 optional_function_argument_list optional_function_type '>' $@50

    ':'       reduce using rule 664 ($@49)
    '>'       reduce using rule 664 ($@49)
    '('       reduce using rule 664 ($@49)
    $default  reduce using rule 661 ($@47)

    $@47  go to state 479
    $@49  go to state 480


State 351

  670 type_declaration_no_options_no_dim: "function" '<' . $@51 type_declaration '>' $@52
  673                                   | "function" '<' . $@53 optional_function_argument_list optional_function_type '>' $@54

    ':'       reduce using rule 671 ($@53)
    '>'       reduce using rule 671 ($@53)
    '('       reduce using rule 671 ($@53)
    $default  reduce using rule 668 ($@51)

    $@51  go to state 481
    $@53  go to state 482


State 352

  677 type_declaration_no_options_no_dim: "lambda" '<' . $@55 type_declaration '>' $@56
  680                                   | "lambda" '<' . $@57 optional_function_argument_list optional_function_type '>' $@58

    ':'       reduce using rule 678 ($@57)
    '>'       reduce using rule 678 ($@57)
    '('       reduce using rule 678 ($@57)
    $default  reduce using rule 675 ($@55)

    $@55  go to state 483
    $@57  go to state 484


State 353

  683 type_declaration_no_options_no_dim: "tuple" '<' . $@59 tuple_type_list '>' $@60

    $default  reduce using rule 681 ($@59)

    $@59  go to state 485


State 354

  686 type_declaration_no_options_no_dim: "variant" '<' . $@61 variant_type_list '>' $@62

    $default  reduce using rule 684 ($@61)

    $@61  go to state 486


State 355

  607 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 487
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 356

  632 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  634                                   | '$' name_in_namespace . '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 488
    '('  shift, and go to state 489


State 357

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 358

  642 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 359

  636 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 360

  644 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  645                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 490
    '&'      shift, and go to state 491


State 361

  650 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 650 (type_declaration_no_options_no_dim)


State 362

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 363

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  638                                   | type_declaration_no_options_no_dim '-' . "const"
  640                                   | type_declaration_no_options_no_dim '-' . '&'
  643                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 492
    '&'      shift, and go to state 493
    '['      shift, and go to state 494
    '#'      shift, and go to state 495


State 364

  646 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '*' .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 365

  618 dim_list: '[' . expr ']'
  619         | '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    ']'                               shift, and go to state 496
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 497
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 366

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 367

  620 dim_list: dim_list . '[' expr ']'
  621         | dim_list . '[' ']'
  623 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 498

    $default  reduce using rule 623 (type_declaration_no_options)


State 368

  688 type_declaration: type_declaration '|' . type_declaration_no_options
  689                 | type_declaration '|' . '#'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255
    '#'          shift, and go to state 499

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 500
    type_declaration_no_options_no_dim  go to state 262


State 369

  611 bitfield_alias_bits: "name" .

    $default  reduce using rule 611 (bitfield_alias_bits)


State 370

  612 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits . optional_comma $@71 "end of code block"

    ','  shift, and go to state 501

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 502


State 371

  489 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  490                      | tuple_alias_type_list . tuple_type "end of expression"
  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list . $@65 "end of code block"

    "type"               shift, and go to state 215
    "array"              shift, and go to state 216
    "table"              shift, and go to state 217
    "typedecl"           shift, and go to state 218
    "iterator"           shift, and go to state 219
    "smart_ptr"          shift, and go to state 220
    "bool"               shift, and go to state 221
    "void"               shift, and go to state 222
    "string"             shift, and go to state 223
    "auto"               shift, and go to state 224
    "int"                shift, and go to state 225
    "int2"               shift, and go to state 226
    "int3"               shift, and go to state 227
    "int4"               shift, and go to state 228
    "uint"               shift, and go to state 229
    "bitfield"           shift, and go to state 230
    "uint2"              shift, and go to state 231
    "uint3"              shift, and go to state 232
    "uint4"              shift, and go to state 233
    "float"              shift, and go to state 234
    "float2"             shift, and go to state 235
    "float3"             shift, and go to state 236
    "float4"             shift, and go to state 237
    "range"              shift, and go to state 238
    "urange"             shift, and go to state 239
    "range64"            shift, and go to state 240
    "urange64"           shift, and go to state 241
    "block"              shift, and go to state 242
    "int64"              shift, and go to state 243
    "uint64"             shift, and go to state 244
    "double"             shift, and go to state 245
    "function"           shift, and go to state 246
    "lambda"             shift, and go to state 247
    "int8"               shift, and go to state 248
    "uint8"              shift, and go to state 249
    "int16"              shift, and go to state 250
    "uint16"             shift, and go to state 251
    "tuple"              shift, and go to state 252
    "variant"            shift, and go to state 253
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 254
    "name"               shift, and go to state 503
    "end of expression"  shift, and go to state 504
    '$'                  shift, and go to state 255

    $default  reduce using rule 692 ($@65)

    name_in_namespace                   go to state 256
    tuple_type                          go to state 505
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 506
    $@65                                go to state 507


State 372

  495 variant_alias_type_list: variant_alias_type_list . "end of expression"
  496                        | variant_alias_type_list . variant_type "end of expression"
  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list . $@68 "end of code block"

    "name"               shift, and go to state 508
    "end of expression"  shift, and go to state 509

    $default  reduce using rule 696 ($@68)

    variant_type  go to state 510
    $@68          go to state 511


State 373

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 374

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 375

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 376

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 377

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 512

    $default  reduce using rule 177 (function_name)


State 378

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 513

    $default  reduce using rule 167 (function_name)


State 379

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 380

  481 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 514


State 381

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 382

  480 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 515
    "var"  shift, and go to state 516

    $default  reduce using rule 264 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 517


State 383

  482 function_argument_list: function_argument_declaration .

    $default  reduce using rule 482 (function_argument_list)


State 384

  116 optional_function_argument_list: '(' function_argument_list . ')'
  483 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 518
    ')'                  shift, and go to state 519


State 385

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 520


State 386

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 387

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 521
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 522
    "if"                              shift, and go to state 523
    "static_if"                       shift, and go to state 524
    "for"                             shift, and go to state 525
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 527
    "try"                             shift, and go to state 528
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 529
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 530
    "assume"                          shift, and go to state 531
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 532
    "pass"                            shift, and go to state 533
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 534
    "goto"                            shift, and go to state 535
    "unsafe"                          shift, and go to state 536
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 538
    "end of expression"               shift, and go to state 539
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 540
    expression_goto          go to state 541
    if_or_static_if          go to state 542
    expression_if_one_liner  go to state 543
    expression_if_then_else  go to state 544
    expression_for_loop      go to state 545
    expression_unsafe        go to state 546
    expression_while_loop    go to state 547
    expression_with          go to state 548
    expression_with_alias    go to state 549
    expr_call_pipe           go to state 452
    expression_any           go to state 550
    name_in_namespace        go to state 453
    expression_delete        go to state 551
    expr_new                 go to state 454
    expression_break         go to state 552
    expression_continue      go to state 553
    expression_return        go to state 554
    expression_yield         go to state 555
    expression_try_catch     go to state 556
    kwd_let                  go to state 557
    expression_let           go to state 558
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 559
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 560
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 388

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 . enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 561

    $default  reduce using rule 531 (enum_list)

    enum_expression  go to state 562
    enum_list        go to state 563


State 389

  550 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 564


State 390

  553 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 553 (structure_name)


State 391

  560 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 473 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 565


State 392

  563 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list .

    $default  reduce using rule 563 (structure_declaration)


State 393

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 394

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 566


State 395

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 567
    type_declaration_no_options_no_dim  go to state 262


State 396

  508 optional_ref: '&' .

    $default  reduce using rule 508 (optional_ref)


State 397

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 568
    ":="  shift, and go to state 569
    '='   shift, and go to state 570

    copy_or_move_or_clone  go to state 571


State 398

  630 type_declaration_no_options_no_dim: "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 572


State 399

  653 type_declaration_no_options_no_dim: "array" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 573


State 400

  656 type_declaration_no_options_no_dim: "table" '<' $@43 . table_type_pair '>' $@44

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    table_type_pair                     go to state 574
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 575


State 401

  727 make_struct_decl: "struct" . '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 576


State 402

  730 make_struct_decl: "class" . '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 577


State 403

  366 expr: "true" .

    $default  reduce using rule 366 (expr)


State 404

  367 expr: "false" .

    $default  reduce using rule 367 (expr)


State 405

  249 expr_new: "new" . structure_type_declaration
  250         | "new" . structure_type_declaration '(' optional_expr_list ')'
  251         | "new" . new_type_declaration '(' use_initializer ')'
  252         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" . make_decl

    "struct"               shift, and go to state 401
    "class"                shift, and go to state 402
    "array"                shift, and go to state 408
    "table"                shift, and go to state 410
    "fixed_array"          shift, and go to state 417
    "default"              shift, and go to state 418
    "tuple"                shift, and go to state 420
    "variant"              shift, and go to state 421
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 440
    '<'                    shift, and go to state 578
    '['                    shift, and go to state 446

    name_in_namespace           go to state 256
    new_type_declaration        go to state 579
    structure_type_declaration  go to state 580
    make_decl                   go to state 581
    make_struct_decl            go to state 470
    make_tuple_call             go to state 471
    make_dim_decl               go to state 472
    make_table_decl             go to state 473
    array_comprehension         go to state 474


State 406

  287 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  288               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 582


State 407

  286 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 583


State 408

  746 make_dim_decl: "array" . "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'
  749              | "array" . "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'
  752              | "array" . "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  753              | "array" . '(' expr_list optional_comma ')'
  756              | "array" . '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "struct"   shift, and go to state 584
    "tuple"    shift, and go to state 585
    "variant"  shift, and go to state 586
    '<'        shift, and go to state 587
    '('        shift, and go to state 588


State 409

  360 expr: "null" .

    $default  reduce using rule 360 (expr)


State 410

  764 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  765                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  766                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 589
    '('  shift, and go to state 590


State 411

  410 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 591


State 412

  277 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 592


State 413

  280 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 593


State 414

  411 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 594


State 415

  283 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 595


State 416

  443 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 596


State 417

  757 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  760              | "fixed_array" . '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 597
    '('  shift, and go to state 598


State 418

  736 make_struct_decl: "default" . '<' $@78 type_declaration_no_options '>' $@79 use_initializer

    '<'  shift, and go to state 599


State 419

  595 basic_type_declaration: "bitfield" .

    $default  reduce using rule 595 (basic_type_declaration)


State 420

  739 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  742                | "tuple" . '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 600
    '('  shift, and go to state 601


State 421

  733 make_struct_decl: "variant" . '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    '<'  shift, and go to state 602


State 422

  412 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 603


State 423

  396 expr: "++" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 604
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 424

  397 expr: "--" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 605
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 425

  444 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 606


State 426

  445 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 607


State 427

  446 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 608


State 428

  447 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 609


State 429

  448 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 610


State 430

  450 expr_mtag: "$c" . '(' expr ')' '(' ')'
  451          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 611


State 431

  449 expr_mtag: "..." .

    $default  reduce using rule 449 (expr_mtag)


State 432

  309 expr_numeric_const: "integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 433

  311 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 434

  310 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 435

  312 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 436

  313 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 437

  314 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 438

  315 expr_numeric_const: "double constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 439

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 612


State 440

  763 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  773 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 613
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 614
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 615
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    expr_map_tuple_list     go to state 616
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 441

  373 expr: '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 617
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 442

  372 expr: '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 618
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 443

  409 expr: '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 619
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 444

  371 expr: '~' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 620
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 445

  370 expr: '!' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 621
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 446

  743 make_dim_decl: '[' . expr_list optional_comma ']'
  771 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  772                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 622
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 623
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 624
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 447

  400 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 626
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 448

  295 block_or_lambda: '$' .

    $default  reduce using rule 295 (block_or_lambda)


State 449

  296 block_or_lambda: '@' .
  297                | '@' . '@'
  341 func_addr_expr: '@' . '@' func_addr_name
  344               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  459 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 627

    $default  reduce using rule 296 (block_or_lambda)


State 450

  364 expr: string_builder .

    $default  reduce using rule 364 (expr)


State 451

  363 expr: expr_reader .

    $default  reduce using rule 363 (expr)


State 452

  442 expr: expr_call_pipe .

    $default  reduce using rule 442 (expr)


State 453

  335 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace . '(' ')'
  356          | name_in_namespace . '(' make_struct_single ')'
  357          | name_in_namespace . '(' expr_list ')'
  361 expr: name_in_namespace .

    '('  shift, and go to state 628

    $default  reduce using rule 361 (expr)


State 454

  435 expr: expr_new .

    $default  reduce using rule 435 (expr)


State 455

  434 expr: expr_cast .

    $default  reduce using rule 434 (expr)


State 456

  433 expr: expr_type_decl .

    $default  reduce using rule 433 (expr)


State 457

  432 expr: expr_type_info .

    $default  reduce using rule 432 (expr)


State 458

  306 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 629


State 459

  438 expr: expr_full_block .

    $default  reduce using rule 438 (expr)


State 460

  362 expr: expr_numeric_const .

    $default  reduce using rule 362 (expr)


State 461

  437 expr: expr_named_call .

    $default  reduce using rule 437 (expr)


State 462

  436 expr: expr_method_call .

    $default  reduce using rule 436 (expr)


State 463

  407 expr: func_addr_expr .

    $default  reduce using rule 407 (expr)


State 464

  368 expr: expr_field .

    $default  reduce using rule 368 (expr)


State 465

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  408 expr: expr_call .

    "begin of code block"  shift, and go to state 630
    '$'                    shift, and go to state 448
    '@'                    shift, and go to state 631

    $default  reduce using rule 408 (expr)

    block_or_lambda                go to state 632
    expr_full_block_assumed_piped  go to state 633


State 466

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  631 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 669


State 467

  369 expr: expr_mtag .

    $default  reduce using rule 369 (expr)


State 468

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 670


State 469

  365 expr: make_decl .

    $default  reduce using rule 365 (expr)


State 470

  702 make_decl: make_struct_decl .

    $default  reduce using rule 702 (make_decl)


State 471

  706 make_decl: make_tuple_call .

    $default  reduce using rule 706 (make_decl)


State 472

  703 make_decl: make_dim_decl .

    $default  reduce using rule 703 (make_decl)


State 473

  704 make_decl: make_table_decl .

    $default  reduce using rule 704 (make_decl)


State 474

  705 make_decl: array_comprehension .

    $default  reduce using rule 705 (make_decl)


State 475

  659 type_declaration_no_options_no_dim: "iterator" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 671


State 476

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 . type_declaration '>' $@40

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 672


State 477

  606 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 673


State 478

  615 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 674

    bitfield_bits  go to state 675


State 479

  663 type_declaration_no_options_no_dim: "block" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 676


State 480

  666 type_declaration_no_options_no_dim: "block" '<' $@49 . optional_function_argument_list optional_function_type '>' $@50

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 677


State 481

  670 type_declaration_no_options_no_dim: "function" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 678


State 482

  673 type_declaration_no_options_no_dim: "function" '<' $@53 . optional_function_argument_list optional_function_type '>' $@54

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 679


State 483

  677 type_declaration_no_options_no_dim: "lambda" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 680


State 484

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 . optional_function_argument_list optional_function_type '>' $@58

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 681


State 485

  683 type_declaration_no_options_no_dim: "tuple" '<' $@59 . tuple_type_list '>' $@60

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 503
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 682
    tuple_type_list                     go to state 683
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 506


State 486

  686 type_declaration_no_options_no_dim: "variant" '<' $@61 . variant_type_list '>' $@62

    "name"  shift, and go to state 508

    variant_type       go to state 684
    variant_type_list  go to state 685


State 487

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  607 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 686


State 488

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 633 ($@38)

    $@38  go to state 687


State 489

  632 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 688
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 689
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 490

  644 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 491

  645 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 492

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 493

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 494

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 690


State 495

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 496

  619 dim_list: '[' ']' .

    $default  reduce using rule 619 (dim_list)


State 497

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  618 dim_list: '[' expr . ']'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 691


State 498

  620 dim_list: dim_list '[' . expr ']'
  621         | dim_list '[' . ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    ']'                               shift, and go to state 692
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 693
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 499

  689 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 689 (type_declaration)


State 500

  688 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 688 (type_declaration)


State 501

  612 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  770 optional_comma: ',' .

    "name"  shift, and go to state 694

    $default  reduce using rule 770 (optional_comma)


State 502

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma . $@71 "end of code block"

    $default  reduce using rule 700 ($@71)

    $@71  go to state 695


State 503

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  485 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 94
    ':'   shift, and go to state 696

    $default  reduce using rule 241 (name_in_namespace)


State 504

  489 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 489 (tuple_alias_type_list)


State 505

  490 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 697


State 506

  484 tuple_type: type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 484 (tuple_type)


State 507

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 . "end of code block"

    "end of code block"  shift, and go to state 698


State 508

  491 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 699


State 509

  495 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 495 (variant_alias_type_list)


State 510

  496 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 700


State 511

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 . "end of code block"

    "end of code block"  shift, and go to state 701


State 512

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 513

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 514

  481 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 702
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 515

  262 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 262 (kwd_let_var_or_nothing)


State 516

  263 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 263 (kwd_let_var_or_nothing)


State 517

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_declaration         go to state 705
    variable_name_with_pos_list  go to state 706


State 518

  483 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 380
    '@'   shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list         go to state 208
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 707


State 519

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 520

  118 optional_function_type: ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 118 (optional_function_type)


State 521

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 522

   72 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 708


State 523

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 524

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 525

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 709


State 526

  256 expression_return: "return" .
  257                  | "return" . expr
  258                  | "return" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 710
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 256 (expression_return)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 711
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 527

  254 expression_break: "break" .

    $default  reduce using rule 254 (expression_break)


State 528

  261 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 712


State 529

  244 expression_delete: "delete" . expr
  245                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "explicit"                        shift, and go to state 713
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 714
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 530

   73 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 715


State 531

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 716


State 532

  255 expression_continue: "continue" .

    $default  reduce using rule 255 (expression_continue)


State 533

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 717


State 534

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 718


State 535

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 719
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 720
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 536

   71 expression_unsafe: "unsafe" . expression_block
  443 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 322
    '('                    shift, and go to state 596

    expression_block  go to state 721


State 537

  259 expression_yield: "yield" . expr
  260                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 722
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 723
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 538

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 724

    $default  reduce using rule 211 (expression_block)


State 539

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 540

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 725


State 541

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 726


State 542

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 727


State 543

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 728


State 544

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 545

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 546

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 547

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 548

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 549

  221 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 729


State 550

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 551

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 730


State 552

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 731

    $default  reduce using rule 66 (expression_if_one_liner)


State 553

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 732

    $default  reduce using rule 67 (expression_if_one_liner)


State 554

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 733

    $default  reduce using rule 64 (expression_if_one_liner)


State 555

   65 expression_if_one_liner: expression_yield .
  226 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 734

    $default  reduce using rule 65 (expression_if_one_liner)


State 556

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 557

  273 expression_let: kwd_let . optional_in_scope let_variable_declaration
  274               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 735

    $default  reduce using rule 268 (optional_in_scope)

    optional_in_scope  go to state 736


State 558

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 559

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 737


State 560

   63 expression_if_one_liner: expr .
  316 expr_assign: expr .
  317            | expr . '=' expr
  318            | expr . "<-" expr
  319            | expr . ":=" expr
  320            | expr . "&=" expr
  321            | expr . "|=" expr
  322            | expr . "^=" expr
  323            | expr . "&&=" expr
  324            | expr . "||=" expr
  325            | expr . "^^=" expr
  326            | expr . "+=" expr
  327            | expr . "-=" expr
  328            | expr . "*=" expr
  329            | expr . "/=" expr
  330            | expr . "%=" expr
  331            | expr . "<<=" expr
  332            | expr . ">>=" expr
  333            | expr . "<<<=" expr
  334            | expr . ">>>=" expr
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 634
    "as"    shift, and go to state 635
    "+="    shift, and go to state 738
    "-="    shift, and go to state 739
    "/="    shift, and go to state 740
    "*="    shift, and go to state 741
    "%="    shift, and go to state 742
    "&="    shift, and go to state 743
    "|="    shift, and go to state 744
    "^="    shift, and go to state 745
    "<<"    shift, and go to state 636
    ">>"    shift, and go to state 637
    "++"    shift, and go to state 638
    "--"    shift, and go to state 639
    "<="    shift, and go to state 640
    "<<="   shift, and go to state 746
    ">>="   shift, and go to state 747
    ">="    shift, and go to state 641
    "=="    shift, and go to state 642
    "!="    shift, and go to state 643
    "->"    shift, and go to state 644
    "<-"    shift, and go to state 748
    "??"    shift, and go to state 645
    "?."    shift, and go to state 646
    "?["    shift, and go to state 647
    "<|"    shift, and go to state 648
    "|>"    shift, and go to state 649
    ":="    shift, and go to state 749
    "<<<"   shift, and go to state 650
    ">>>"   shift, and go to state 651
    "<<<="  shift, and go to state 750
    ">>>="  shift, and go to state 751
    "&&"    shift, and go to state 652
    "||"    shift, and go to state 653
    "^^"    shift, and go to state 654
    "&&="   shift, and go to state 752
    "||="   shift, and go to state 753
    "^^="   shift, and go to state 754
    ".."    shift, and go to state 655
    '='     shift, and go to state 755
    '?'     shift, and go to state 656
    '|'     shift, and go to state 657
    '^'     shift, and go to state 658
    '&'     shift, and go to state 659
    '<'     shift, and go to state 660
    '>'     shift, and go to state 661
    '-'     shift, and go to state 662
    '+'     shift, and go to state 663
    '*'     shift, and go to state 664
    '/'     shift, and go to state 665
    '%'     shift, and go to state 666
    '.'     shift, and go to state 667
    '['     shift, and go to state 668

    "end of expression"  reduce using rule 316 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 561

  529 enum_expression: "name" .
  530                | "name" . '=' expr

    '='  shift, and go to state 756

    $default  reduce using rule 529 (enum_expression)


State 562

  532 enum_list: enum_expression .

    $default  reduce using rule 532 (enum_list)


State 563

  533 enum_list: enum_list . ',' enum_expression
  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list . optional_comma $@31 "end of code block"

    ','  shift, and go to state 757

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 758


State 564

  550 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 550 (optional_structure_parent)


State 565

  475 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  477                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  560 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 759
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 474 ($@25)

    optional_annotation_list  go to state 760
    $@25                      go to state 761


State 566

  515 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 515 (global_let_variable_name_with_pos_list)


State 567

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  520                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 568
    ":="                 shift, and go to state 569
    "end of expression"  shift, and go to state 762
    '='                  shift, and go to state 570

    copy_or_move_or_clone  go to state 763


State 568

  505 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 505 (copy_or_move_or_clone)


State 569

  506 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 506 (copy_or_move_or_clone)


State 570

  504 copy_or_move_or_clone: '=' .

    $default  reduce using rule 504 (copy_or_move_or_clone)


State 571

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 764
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 572

  630 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration . '>' $@37
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 765


State 573

  653 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration . '>' $@42
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 766


State 574

  656 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair . '>' $@44

    '>'  shift, and go to state 767


State 575

  616 table_type_pair: type_declaration .
  617                | type_declaration . "end of expression" type_declaration
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 768
    '|'                  shift, and go to state 368

    $default  reduce using rule 616 (table_type_pair)


State 576

  727 make_struct_decl: "struct" '<' . $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 725 ($@72)

    $@72  go to state 769


State 577

  730 make_struct_decl: "class" '<' . $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 728 ($@74)

    $@74  go to state 770


State 578

  248 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 246 ($@3)

    $@3  go to state 771


State 579

  251 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  252         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 772


State 580

  249 expr_new: "new" structure_type_declaration .
  250         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 773

    $default  reduce using rule 249 (expr_new)


State 581

  253 expr_new: "new" make_decl .

    $default  reduce using rule 253 (expr_new)


State 582

  287 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  288               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 774
    '('  shift, and go to state 775


State 583

  286 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 284 ($@11)

    $@11  go to state 776


State 584

  746 make_dim_decl: "array" "struct" . '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 777


State 585

  749 make_dim_decl: "array" "tuple" . '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 778


State 586

  752 make_dim_decl: "array" "variant" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    '<'  shift, and go to state 779


State 587

  756 make_dim_decl: "array" '<' . $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    $default  reduce using rule 754 ($@88)

    $@88  go to state 780


State 588

  753 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 781
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 589

  765 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  766                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 782
    type_declaration_no_options_no_dim  go to state 262


State 590

  764 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 614
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 615
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    expr_map_tuple_list     go to state 783
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 591

  410 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 784
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 592

  277 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 275 ($@5)

    $@5  go to state 785


State 593

  280 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 278 ($@7)

    $@7  go to state 786


State 594

  411 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 787
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 595

  283 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 281 ($@9)

    $@9  go to state 788


State 596

  443 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 789
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 597

  760 make_dim_decl: "fixed_array" '<' . $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 758 ($@90)

    $@90  go to state 790


State 598

  757 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 791
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 599

  736 make_struct_decl: "default" '<' . $@78 type_declaration_no_options '>' $@79 use_initializer

    $default  reduce using rule 734 ($@78)

    $@78  go to state 792


State 600

  742 make_tuple_call: "tuple" '<' . $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 740 ($@80)

    $@80  go to state 793


State 601

  739 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 794
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 602

  733 make_struct_decl: "variant" '<' . $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    $default  reduce using rule 731 ($@76)

    $@76  go to state 795


State 603

  412 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 796
    type_declaration_no_options_no_dim  go to state 262


State 604

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  396     | "++" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 396 (expr)


State 605

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  397     | "--" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 397 (expr)


State 606

  444 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 797
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 607

  445 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 798
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 608

  446 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 799
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 609

  447 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 800
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 610

  448 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 801
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 611

  450 expr_mtag: "$c" '(' . expr ')' '(' ')'
  451          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 802
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 612

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 803
    "{"                   shift, and go to state 804

    character_sequence  go to state 805


State 613

  773 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_name_with_pos_list  go to state 806


State 614

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  737 make_map_tuple: expr . "=>" expr
  738               | expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "=>"   shift, and go to state 807
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 738 (make_map_tuple)


State 615

  761 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 761 (expr_map_tuple_list)


State 616

  762 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  763 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 808

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 809


State 617

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  373 expr: '-' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 373 (expr)


State 618

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  372 expr: '+' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 372 (expr)


State 619

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  409     | '*' expr .
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 409 (expr)


State 620

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  371 expr: '~' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 371 (expr)


State 621

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  370 expr: '!' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 370 (expr)


State 622

  771 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_name_with_pos_list  go to state 810


State 623

  772 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 811


State 624

  291 expr_list: expr_list . ',' expr
  743 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 813


State 625

  290 expr_list: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 290 (expr_list)


State 626

  291 expr_list: expr_list . ',' expr
  400 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 814


State 627

  297 block_or_lambda: '@' '@' .
  341 func_addr_expr: '@' '@' . func_addr_name
  344               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  459 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 815
    "$c"    shift, and go to state 816
    "name"  shift, and go to state 56
    '<'     shift, and go to state 817

    $default  reduce using rule 297 (block_or_lambda)

    name_in_namespace  go to state 818
    func_addr_name     go to state 819


State 628

  335 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace '(' . ')'
  356          | name_in_namespace '(' . make_struct_single ')'
  357          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 820
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 821
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 822
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 823
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 824
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 825
    make_struct_single      go to state 826
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 629

  306 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 827

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 828


State 630

  308 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 829


State 631

  296 block_or_lambda: '@' .
  297                | '@' . '@'

    '@'  shift, and go to state 830

    $default  reduce using rule 296 (block_or_lambda)


State 632

  307 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 831


State 633

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 634

  419 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" . basic_type_declaration
  421     | expr "is" . "name"
  458 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 832
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 833
    "name"      shift, and go to state 834

    basic_type_declaration  go to state 835


State 635

  422 expr: expr "as" . "name"
  425     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" . basic_type_declaration
  456 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 836
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 837
    "name"      shift, and go to state 838

    basic_type_declaration  go to state 839


State 636

  374 expr: expr "<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 840
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 637

  375 expr: expr ">>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 841
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 638

  398 expr: expr "++" .

    $default  reduce using rule 398 (expr)


State 639

  399 expr: expr "--" .

    $default  reduce using rule 399 (expr)


State 640

  387 expr: expr "<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 842
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 641

  388 expr: expr ">=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 843
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 642

  385 expr: expr "==" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 844
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 643

  386 expr: expr "!=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 845
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 644

  337 expr_method_call: expr "->" . "name" '(' ')'
  338                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 846


State 645

  415 expr: expr "??" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 847
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 646

  405 expr: expr "?." . "name"
  453 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 848
    "name"  shift, and go to state 849


State 647

  403 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 850
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 648

  439 expr: expr "<|" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 851
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 649

  440 expr: expr "|>" . expr
  441     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 852
    expr_mtag               go to state 467
    basic_type_declaration  go to state 853
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 650

  376 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 854
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 651

  377 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 855
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 652

  392 expr: expr "&&" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 856
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 653

  393 expr: expr "||" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 857
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 654

  394 expr: expr "^^" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 858
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 655

  395 expr: expr ".." . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 859
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 656

  416 expr: expr '?' . expr ':' expr
  427     | expr '?' . "as" "name"
  430     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' . "as" basic_type_declaration
  457 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "as"                              shift, and go to state 860
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 861
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 657

  390 expr: expr '|' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 862
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 658

  391 expr: expr '^' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 863
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 659

  389 expr: expr '&' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 864
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 660

  383 expr: expr '<' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 865
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 661

  384 expr: expr '>' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 866
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 662

  379 expr: expr '-' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 867
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 663

  378 expr: expr '+' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 868
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 664

  380 expr: expr '*' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 869
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 665

  381 expr: expr '/' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 870
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 666

  382 expr: expr '%' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 871
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 667

  348 expr_field: expr '.' . "name"
  349           | expr '.' . '.' "name"
  350           | expr '.' . "name" '(' ')'
  351           | expr '.' . "name" '(' expr_list ')'
  354           | expr '.' . $@17 error $@18
  402 expr: expr '.' . '[' expr ']'
  404     | expr '.' . "?[" expr ']'
  406     | expr '.' . "?." "name"
  452 expr_mtag: expr '.' . "$f" '(' expr ')'
  454          | expr '.' . '.' "$f" '(' expr ')'
  455          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 872
    "?["    shift, and go to state 873
    "$f"    shift, and go to state 874
    "name"  shift, and go to state 875
    '.'     shift, and go to state 876
    '['     shift, and go to state 877

    $default  reduce using rule 352 ($@17)

    $@17  go to state 878


State 668

  401 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 879
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 669

  631 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 631 (type_declaration_no_options_no_dim)


State 670

  358 expr_call: basic_type_declaration '(' . ')'
  359          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 880
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 881
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 671

  659 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration . '>' $@46
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 882


State 672

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration . '>' $@40
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 883


State 673

  606 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 606 (auto_type_declaration)


State 674

  608 bitfield_bits: "name" .

    $default  reduce using rule 608 (bitfield_bits)


State 675

  609 bitfield_bits: bitfield_bits . "end of expression" "name"
  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    "end of expression"  shift, and go to state 884
    '>'                  shift, and go to state 885


State 676

  663 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration . '>' $@48
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 886


State 677

  666 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list . optional_function_type '>' $@50

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 887


State 678

  670 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration . '>' $@52
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 888


State 679

  673 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list . optional_function_type '>' $@54

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 889


State 680

  677 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration . '>' $@56
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 890


State 681

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list . optional_function_type '>' $@58

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 891


State 682

  486 tuple_type_list: tuple_type .

    $default  reduce using rule 486 (tuple_type_list)


State 683

  487 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  683 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list . '>' $@60

    "end of expression"  shift, and go to state 892
    '>'                  shift, and go to state 893


State 684

  492 variant_type_list: variant_type .

    $default  reduce using rule 492 (variant_type_list)


State 685

  493 variant_type_list: variant_type_list . "end of expression" variant_type
  686 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list . '>' $@62

    "end of expression"  shift, and go to state 894
    '>'                  shift, and go to state 895


State 686

  607 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 607 (auto_type_declaration)


State 687

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    type_declaration_no_options_list    go to state 896
    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 897


State 688

  632 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 898


State 689

  236 optional_expr_list: expr_list . optional_comma
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 899


State 690

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 691

  618 dim_list: '[' expr ']' .

    $default  reduce using rule 618 (dim_list)


State 692

  621 dim_list: dim_list '[' ']' .

    $default  reduce using rule 621 (dim_list)


State 693

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  620 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 900


State 694

  612 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 612 (bitfield_alias_bits)


State 695

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 . "end of code block"

    "end of code block"  shift, and go to state 901


State 696

  485 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 902


State 697

  490 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 490 (tuple_alias_type_list)


State 698

  693 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block" .

    $default  reduce using rule 693 (tuple_alias_declaration)


State 699

  491 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 903


State 700

  496 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 496 (variant_alias_type_list)


State 701

  697 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block" .

    $default  reduce using rule 697 (variant_alias_declaration)


State 702

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  481 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 904


State 703

  565 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 905


State 704

  564 variable_name_with_pos_list: "name" .
  566                            | "name" . "aka" "name"

    "aka"  shift, and go to state 906

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 705

  480 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 480 (function_argument_declaration)


State 706

  499 variable_declaration: variable_name_with_pos_list .
  500                     | variable_name_with_pos_list . '&'
  501                     | variable_name_with_pos_list . ':' type_declaration
  502                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list . copy_or_move expr
  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 907
    ','   shift, and go to state 908
    '='   shift, and go to state 909
    ':'   shift, and go to state 910
    '&'   shift, and go to state 911

    $default  reduce using rule 499 (variable_declaration)

    copy_or_move  go to state 912


State 707

  483 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 483 (function_argument_list)


State 708

   72 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 913
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 709

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_name_with_pos_list  go to state 914


State 710

  258 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 915
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 711

  257 expression_return: "return" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 257 (expression_return)


State 712

  261 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 916


State 713

  245 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 917
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 714

  244 expression_delete: "delete" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 244 (expression_delete)


State 715

   73 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 918
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 716

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 919


State 717

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 718

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 920


State 719

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 921


State 720

   53 expression_goto: "goto" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 53 (expression_goto)


State 721

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 722

  260 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 922
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 723

  259 expression_yield: "yield" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 259 (expression_yield)


State 724

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 923


State 725

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 726

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 727

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 924
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 728

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 925


State 729

  221 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 730

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 731

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 732

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 733

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 734

  226 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 735

  267 optional_in_scope: "inscope" .

    $default  reduce using rule 267 (optional_in_scope)


State 736

  273 expression_let: kwd_let optional_in_scope . let_variable_declaration
  274               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 926
    "name"  shift, and go to state 927
    '('     shift, and go to state 928

    tuple_expansion_variable_declaration  go to state 929
    let_variable_name_with_pos_list       go to state 930
    let_variable_declaration              go to state 931


State 737

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 738

  326 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 932
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 739

  327 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 933
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 740

  329 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 934
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 741

  328 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 935
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 742

  330 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 936
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 743

  320 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 937
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 744

  321 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 938
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 745

  322 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 939
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 746

  331 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 940
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 747

  332 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 941
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 748

  318 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 942
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 749

  319 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 943
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 750

  333 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 944
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 751

  334 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 945
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 752

  323 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 946
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 753

  324 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 947
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 754

  325 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 948
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 755

  317 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 949
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 756

  530 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 950
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 757

  533 enum_list: enum_list ',' . enum_expression
  770 optional_comma: ',' .

    "name"  shift, and go to state 561

    $default  reduce using rule 770 (optional_comma)

    enum_expression  go to state 951


State 758

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma . $@31 "end of code block"

    $default  reduce using rule 547 ($@31)

    $@31  go to state 952


State 759

  560 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 560 (optional_struct_variable_declaration_list)


State 760

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 953


State 761

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 207

    $default  reduce using rule 460 (optional_field_annotation)

    metadata_argument_list          go to state 208
    optional_field_annotation       go to state 954
    structure_variable_declaration  go to state 955


State 762

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 519 (global_let_variable_declaration)


State 763

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 956
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 764

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 957
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 765

  630 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 629 ($@37)

    $@37  go to state 958


State 766

  653 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 652 ($@42)

    $@42  go to state 959


State 767

  656 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' . $@44

    $default  reduce using rule 655 ($@44)

    $@44  go to state 960


State 768

  617 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 961


State 769

  727 make_struct_decl: "struct" '<' $@72 . type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 962
    type_declaration_no_options_no_dim  go to state 262


State 770

  730 make_struct_decl: "class" '<' $@74 . type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 963
    type_declaration_no_options_no_dim  go to state 262


State 771

  248 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 964


State 772

  251 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  252         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 966


State 773

  250 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 967
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 689
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 774

  288 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 968


State 775

  287 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 969
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 776

  286 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 970


State 777

  746 make_dim_decl: "array" "struct" '<' . $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 744 ($@82)

    $@82  go to state 971


State 778

  749 make_dim_decl: "array" "tuple" '<' . $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 747 ($@84)

    $@84  go to state 972


State 779

  752 make_dim_decl: "array" "variant" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    $default  reduce using rule 750 ($@86)

    $@86  go to state 973


State 780

  756 make_dim_decl: "array" '<' $@88 . type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 974
    type_declaration_no_options_no_dim  go to state 262


State 781

  291 expr_list: expr_list . ',' expr
  753 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 975


State 782

  765 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  766                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 976
    '>'                  shift, and go to state 977


State 783

  762 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  764 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 978


State 784

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  410     | "deref" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 979


State 785

  277 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 262


State 786

  280 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 981
    type_declaration_no_options_no_dim  go to state 262


State 787

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  411     | "addr" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 982


State 788

  283 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 983
    type_declaration_no_options_no_dim  go to state 262


State 789

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  443     | "unsafe" '(' expr . ')'
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 984


State 790

  760 make_dim_decl: "fixed_array" '<' $@90 . type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 262


State 791

  291 expr_list: expr_list . ',' expr
  757 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 986


State 792

  736 make_struct_decl: "default" '<' $@78 . type_declaration_no_options '>' $@79 use_initializer

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 987
    type_declaration_no_options_no_dim  go to state 262


State 793

  742 make_tuple_call: "tuple" '<' $@80 . type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 988
    type_declaration_no_options_no_dim  go to state 262


State 794

  291 expr_list: expr_list . ',' expr
  739 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 989


State 795

  733 make_struct_decl: "variant" '<' $@76 . type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 990
    type_declaration_no_options_no_dim  go to state 262


State 796

  412 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 991


State 797

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$$" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 992


State 798

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  445 expr_mtag: "$i" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 993


State 799

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  446 expr_mtag: "$v" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 994


State 800

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  447 expr_mtag: "$b" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 995


State 801

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  448 expr_mtag: "$a" '(' expr . ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 996


State 802

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  450 expr_mtag: "$c" '(' expr . ')' '(' ')'
  451          | "$c" '(' expr . ')' '(' expr_list ')'
  452          | expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 997


State 803

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 804

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 998
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 805

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 210
    STRING_CHARACTER_ESC  shift, and go to state 211

    $default  reduce using rule 29 (string_builder_body)


State 806

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 999
    ','   shift, and go to state 908


State 807

  737 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1000
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 808

  762 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  770 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 770 (optional_comma)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 614
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 1001
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 809

  763 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1002


State 810

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  771 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1003
    ','   shift, and go to state 908


State 811

  772 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_name_with_pos_list  go to state 1004


State 812

  291 expr_list: expr_list ',' . expr
  770 optional_comma: ',' .

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 770 (optional_comma)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1005
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 813

  743 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1006


State 814

  400 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1007


State 815

  340 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1008


State 816

  459 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1009


State 817

  344 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 345 ($@15)
    '>'       reduce using rule 345 ($@15)
    '('       reduce using rule 345 ($@15)
    $default  reduce using rule 342 ($@13)

    $@13  go to state 1010
    $@15  go to state 1011


State 818

  339 func_addr_name: name_in_namespace .

    $default  reduce using rule 339 (func_addr_name)


State 819

  341 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 341 (func_addr_expr)


State 820

  711 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  712                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1012


State 821

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  707 make_struct_fields: "name" . copy_or_move expr
  708                   | "name" . ":=" expr

    "<-"  shift, and go to state 907
    ":="  shift, and go to state 1013
    "::"  shift, and go to state 94
    '='   shift, and go to state 909

    $default  reduce using rule 241 (name_in_namespace)

    copy_or_move  go to state 1014


State 822

  335 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  743 make_dim_decl: '[' . expr_list optional_comma ']'
  771 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  772                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 622
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 623
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 820
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 821
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 624
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 1015
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 823

  355 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 355 (expr_call)


State 824

  291 expr_list: expr_list . ',' expr
  336 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  357 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1017


State 825

  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  716 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 716 (make_struct_single)


State 826

  356 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1019


State 827

  305 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1020


State 828

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1021


State 829

  233 expressions: expressions . expression_any
  234            | expressions . error
  308 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 521
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 522
    "if"                              shift, and go to state 523
    "static_if"                       shift, and go to state 524
    "for"                             shift, and go to state 525
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 527
    "try"                             shift, and go to state 528
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 529
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 530
    "assume"                          shift, and go to state 531
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 532
    "pass"                            shift, and go to state 533
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 534
    "goto"                            shift, and go to state 535
    "unsafe"                          shift, and go to state 536
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 1022
    "end of expression"               shift, and go to state 539
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 540
    expression_goto          go to state 541
    if_or_static_if          go to state 542
    expression_if_one_liner  go to state 543
    expression_if_then_else  go to state 544
    expression_for_loop      go to state 545
    expression_unsafe        go to state 546
    expression_while_loop    go to state 547
    expression_with          go to state 548
    expression_with_alias    go to state 549
    expr_call_pipe           go to state 452
    expression_any           go to state 550
    name_in_namespace        go to state 453
    expression_delete        go to state 551
    expr_new                 go to state 454
    expression_break         go to state 552
    expression_continue      go to state 553
    expression_return        go to state 554
    expression_yield         go to state 555
    expression_try_catch     go to state 556
    kwd_let                  go to state 557
    expression_let           go to state 558
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 559
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 560
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 830

  297 block_or_lambda: '@' '@' .

    $default  reduce using rule 297 (block_or_lambda)


State 831

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 827

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1023


State 832

  419 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1024


State 833

  458 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1025


State 834

  421 expr: expr "is" "name" .

    $default  reduce using rule 421 (expr)


State 835

  420 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 420 (expr)


State 836

  425 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1026


State 837

  456 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1027


State 838

  422 expr: expr "as" "name" .

    $default  reduce using rule 422 (expr)


State 839

  426 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 426 (expr)


State 840

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  374     | expr "<<" expr .
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '-'   shift, and go to state 662
    '+'   shift, and go to state 663
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 374 (expr)


State 841

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  375     | expr ">>" expr .
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '-'   shift, and go to state 662
    '+'   shift, and go to state 663
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 375 (expr)


State 842

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  387     | expr "<=" expr .
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 387 (expr)


State 843

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  388     | expr ">=" expr .
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 388 (expr)


State 844

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  385     | expr "==" expr .
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 385 (expr)


State 845

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  386     | expr "!=" expr .
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 386 (expr)


State 846

  337 expr_method_call: expr "->" "name" . '(' ')'
  338                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1028


State 847

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  415     | expr "??" expr .
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 415 (expr)


State 848

  453 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1029


State 849

  405 expr: expr "?." "name" .

    $default  reduce using rule 405 (expr)


State 850

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  403     | expr "?[" expr . ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 1030


State 851

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  439     | expr "<|" expr .
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 439 (expr)


State 852

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  440     | expr "|>" expr .
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 644
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 440 (expr)


State 853

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'
  441 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 670

    $default  reduce using rule 441 (expr)


State 854

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  376     | expr "<<<" expr .
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '-'   shift, and go to state 662
    '+'   shift, and go to state 663
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 376 (expr)


State 855

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  377     | expr ">>>" expr .
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '-'   shift, and go to state 662
    '+'   shift, and go to state 663
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 377 (expr)


State 856

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  392     | expr "&&" expr .
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 392 (expr)


State 857

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  393     | expr "||" expr .
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "^^"   shift, and go to state 654
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 393 (expr)


State 858

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  394     | expr "^^" expr .
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 394 (expr)


State 859

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  395     | expr ".." expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    ".."  error (nonassociative)

    $default  reduce using rule 395 (expr)


State 860

  427 expr: expr '?' "as" . "name"
  430     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" . basic_type_declaration
  457 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1031
    "bool"      shift, and go to state 221
    "void"      shift, and go to state 222
    "string"    shift, and go to state 223
    "int"       shift, and go to state 225
    "int2"      shift, and go to state 226
    "int3"      shift, and go to state 227
    "int4"      shift, and go to state 228
    "uint"      shift, and go to state 229
    "bitfield"  shift, and go to state 419
    "uint2"     shift, and go to state 231
    "uint3"     shift, and go to state 232
    "uint4"     shift, and go to state 233
    "float"     shift, and go to state 234
    "float2"    shift, and go to state 235
    "float3"    shift, and go to state 236
    "float4"    shift, and go to state 237
    "range"     shift, and go to state 238
    "urange"    shift, and go to state 239
    "range64"   shift, and go to state 240
    "urange64"  shift, and go to state 241
    "int64"     shift, and go to state 243
    "uint64"    shift, and go to state 244
    "double"    shift, and go to state 245
    "int8"      shift, and go to state 248
    "uint8"     shift, and go to state 249
    "int16"     shift, and go to state 250
    "uint16"    shift, and go to state 251
    "$f"        shift, and go to state 1032
    "name"      shift, and go to state 1033

    basic_type_declaration  go to state 1034


State 861

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr . ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    ':'    shift, and go to state 1035
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668


State 862

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  390     | expr '|' expr .
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 390 (expr)


State 863

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  391     | expr '^' expr .
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 391 (expr)


State 864

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  389     | expr '&' expr .
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 389 (expr)


State 865

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  383     | expr '<' expr .
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 383 (expr)


State 866

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  384     | expr '>' expr .
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 384 (expr)


State 867

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  379     | expr '-' expr .
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 379 (expr)


State 868

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  378     | expr '+' expr .
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '*'   shift, and go to state 664
    '/'   shift, and go to state 665
    '%'   shift, and go to state 666
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 378 (expr)


State 869

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  380     | expr '*' expr .
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 380 (expr)


State 870

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  381     | expr '/' expr .
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 381 (expr)


State 871

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  382     | expr '%' expr .
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 634
    "as"  shift, and go to state 635
    "++"  shift, and go to state 638
    "--"  shift, and go to state 639
    "->"  shift, and go to state 644
    "??"  shift, and go to state 645
    "?."  shift, and go to state 646
    "?["  shift, and go to state 647
    "<|"  shift, and go to state 648
    "|>"  shift, and go to state 649
    '.'   shift, and go to state 667
    '['   shift, and go to state 668

    $default  reduce using rule 382 (expr)


State 872

  406 expr: expr '.' "?." . "name"
  455 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1036
    "name"  shift, and go to state 1037


State 873

  404 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1038
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 874

  452 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1039


State 875

  348 expr_field: expr '.' "name" .
  350           | expr '.' "name" . '(' ')'
  351           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1040

    $default  reduce using rule 348 (expr_field)


State 876

  349 expr_field: expr '.' '.' . "name"
  454 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1041
    "name"  shift, and go to state 1042


State 877

  402 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1043
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 878

  354 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1044


State 879

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  401     | expr '[' expr . ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 1045


State 880

  358 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 358 (expr_call)


State 881

  291 expr_list: expr_list . ',' expr
  359 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1047


State 882

  659 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 658 ($@46)

    $@46  go to state 1048


State 883

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' . $@40

    $default  reduce using rule 648 ($@40)

    $@40  go to state 1049


State 884

  609 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1050


State 885

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 614 ($@35)

    $@35  go to state 1051


State 886

  663 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 662 ($@48)

    $@48  go to state 1052


State 887

  666 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type . '>' $@50

    '>'  shift, and go to state 1053


State 888

  670 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 669 ($@52)

    $@52  go to state 1054


State 889

  673 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type . '>' $@54

    '>'  shift, and go to state 1055


State 890

  677 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 676 ($@56)

    $@56  go to state 1056


State 891

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type . '>' $@58

    '>'  shift, and go to state 1057


State 892

  487 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 503
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    tuple_type                          go to state 1058
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 506


State 893

  683 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' . $@60

    $default  reduce using rule 682 ($@60)

    $@60  go to state 1059


State 894

  493 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 508

    variant_type  go to state 1060


State 895

  686 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' . $@62

    $default  reduce using rule 685 ($@62)

    $@62  go to state 1061


State 896

  240 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1062
    '>'                  shift, and go to state 1063


State 897

  239 type_declaration_no_options_list: type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 239 (type_declaration_no_options_list)


State 898

  632 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 899

  236 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 236 (optional_expr_list)


State 900

  620 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 620 (dim_list)


State 901

  701 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block" .

    $default  reduce using rule 701 (bitfield_alias_declaration)


State 902

  485 tuple_type: "name" ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 485 (tuple_type)


State 903

  491 variant_type: "name" ':' type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 491 (variant_type)


State 904

  481 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 481 (function_argument_declaration)


State 905

  565 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1064
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 906

  566 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1065


State 907

  498 copy_or_move: "<-" .

    $default  reduce using rule 498 (copy_or_move)


State 908

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  568                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1066


State 909

  497 copy_or_move: '=' .

    $default  reduce using rule 497 (copy_or_move)


State 910

  501 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  502                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1067


State 911

  500 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 500 (variable_declaration)


State 912

  503 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1068
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 913

   72 expression_while_loop: "while" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1069


State 914

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1070
    ','   shift, and go to state 908


State 915

  258 expression_return: "return" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 258 (expression_return)


State 916

  261 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1071


State 917

  245 expression_delete: "delete" "explicit" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 245 (expression_delete)


State 918

   73 expression_with: "with" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1072


State 919

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1073
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 920

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 921

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 922

  260 expression_yield: "yield" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 260 (expression_yield)


State 923

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1074


State 924

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1075


State 925

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1076
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 926

  510 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1077


State 927

  509 let_variable_name_with_pos_list: "name" .
  511                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1078

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 928

  271 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1079

    tuple_expansion  go to state 1080


State 929

  274 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 274 (expression_let)


State 930

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  513                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  516 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  518                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1081
    ':'  shift, and go to state 1082
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 1083


State 931

  273 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 273 (expression_let)


State 932

  326 expr_assign: expr "+=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 326 (expr_assign)


State 933

  327 expr_assign: expr "-=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 327 (expr_assign)


State 934

  329 expr_assign: expr "/=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 329 (expr_assign)


State 935

  328 expr_assign: expr "*=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 328 (expr_assign)


State 936

  330 expr_assign: expr "%=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 330 (expr_assign)


State 937

  320 expr_assign: expr "&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 320 (expr_assign)


State 938

  321 expr_assign: expr "|=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 321 (expr_assign)


State 939

  322 expr_assign: expr "^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 322 (expr_assign)


State 940

  331 expr_assign: expr "<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 331 (expr_assign)


State 941

  332 expr_assign: expr ">>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 332 (expr_assign)


State 942

  318 expr_assign: expr "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 318 (expr_assign)


State 943

  319 expr_assign: expr ":=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 319 (expr_assign)


State 944

  333 expr_assign: expr "<<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 333 (expr_assign)


State 945

  334 expr_assign: expr ">>>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 334 (expr_assign)


State 946

  323 expr_assign: expr "&&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 323 (expr_assign)


State 947

  324 expr_assign: expr "||=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 324 (expr_assign)


State 948

  325 expr_assign: expr "^^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 325 (expr_assign)


State 949

  317 expr_assign: expr '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 317 (expr_assign)


State 950

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  530 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 530 (enum_expression)


State 951

  533 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 533 (enum_list)


State 952

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 . "end of code block"

    "end of code block"  shift, and go to state 1084


State 953

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1085
    "private"  shift, and go to state 1086

    $default  reduce using rule 467 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1087


State 954

  472 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1088

    $default  reduce using rule 470 (optional_static_member_variable)

    optional_static_member_variable  go to state 1089


State 955

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1090


State 956

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1091
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 957

  521 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 521 (global_let_variable_declaration)


State 958

  630 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 630 (type_declaration_no_options_no_dim)


State 959

  653 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 653 (type_declaration_no_options_no_dim)


State 960

  656 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44 .

    $default  reduce using rule 656 (type_declaration_no_options_no_dim)


State 961

  617 table_type_pair: type_declaration "end of expression" type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 617 (table_type_pair)


State 962

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options . '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1092


State 963

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options . '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1093


State 964

  248 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1094


State 965

  724 use_initializer: "uninitialized" .

    $default  reduce using rule 724 (use_initializer)


State 966

  251 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  252         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    ')'     shift, and go to state 1096

    make_struct_fields  go to state 825
    make_struct_single  go to state 1097


State 967

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1098


State 968

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1099
    '>'                  shift, and go to state 1100


State 969

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1101


State 970

  286 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1102


State 971

  746 make_dim_decl: "array" "struct" '<' $@82 . type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1103
    type_declaration_no_options_no_dim  go to state 262


State 972

  749 make_dim_decl: "array" "tuple" '<' $@84 . type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1104
    type_declaration_no_options_no_dim  go to state 262


State 973

  752 make_dim_decl: "array" "variant" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1105
    type_declaration_no_options_no_dim  go to state 262


State 974

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options . '>' $@89 '(' optional_expr_list ')'

    '>'  shift, and go to state 1106


State 975

  753 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1107


State 976

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1108
    type_declaration_no_options_no_dim  go to state 262


State 977

  765 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1109


State 978

  764 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1110


State 979

  410 expr: "deref" '(' expr ')' .

    $default  reduce using rule 410 (expr)


State 980

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1111


State 981

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1112


State 982

  411 expr: "addr" '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 983

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1113


State 984

  443 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 443 (expr)


State 985

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options . '>' $@91 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1114


State 986

  757 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1115


State 987

  736 make_struct_decl: "default" '<' $@78 type_declaration_no_options . '>' $@79 use_initializer

    '>'  shift, and go to state 1116


State 988

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options . '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1117


State 989

  739 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1118


State 990

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options . '>' $@77 '(' make_variant_dim ')'

    '>'  shift, and go to state 1119


State 991

  412 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 827

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1120


State 992

  444 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 993

  445 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 445 (expr_mtag)


State 994

  446 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 446 (expr_mtag)


State 995

  447 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 447 (expr_mtag)


State 996

  448 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 448 (expr_mtag)


State 997

  450 expr_mtag: "$c" '(' expr ')' . '(' ')'
  451          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1121


State 998

   30 string_builder_body: string_builder_body "{" expr . "}"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    "}"    shift, and go to state 1122
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668


State 999

  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1123
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1000

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  737 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 737 (make_map_tuple)


State 1001

  762 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 762 (expr_map_tuple_list)


State 1002

  763 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 763 (make_table_decl)


State 1003

  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1124
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1004

  567 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  568                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1125
    ','   shift, and go to state 908


State 1005

  291 expr_list: expr_list ',' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 291 (expr_list)


State 1006

  743 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 743 (make_dim_decl)


State 1007

  400 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 400 (expr)


State 1008

  340 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1126
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1009

  459 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1127
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1010

  344 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1128
    type_declaration_no_options_no_dim  go to state 262


State 1011

  347 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1129


State 1012

  711 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  712                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1130
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1013

  708 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1131
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1014

  707 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1132
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1015

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1018
    ']'  shift, and go to state 1133


State 1016

  291 expr_list: expr_list ',' . expr
  336 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 1134
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1005
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1017

  357 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 357 (expr_call)


State 1018

  709 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  710                   | make_struct_fields ',' . "name" ":=" expr
  713                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1135
    "name"  shift, and go to state 1136


State 1019

  356 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 356 (expr_call)


State 1020

  305 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1141
    capture_list   go to state 1142


State 1021

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1143


State 1022

  308 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 308 (expr_full_block_assumed_piped)


State 1023

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 320

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1144


State 1024

  419 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 417 ($@19)

    $@19  go to state 1145


State 1025

  458 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1146
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1026

  425 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 423 ($@21)

    $@21  go to state 1147


State 1027

  456 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1148
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1028

  337 expr_method_call: expr "->" "name" '(' . ')'
  338                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1149
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1150
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1029

  453 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1151
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1030

  403 expr: expr "?[" expr ']' .

    $default  reduce using rule 403 (expr)


State 1031

  430 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1152


State 1032

  457 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1153


State 1033

  427 expr: expr '?' "as" "name" .

    $default  reduce using rule 427 (expr)


State 1034

  431 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 431 (expr)


State 1035

  416 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1154
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1036

  455 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1155


State 1037

  406 expr: expr '.' "?." "name" .

    $default  reduce using rule 406 (expr)


State 1038

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  404     | expr '.' "?[" expr . ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 1156


State 1039

  452 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1157
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1040

  350 expr_field: expr '.' "name" '(' . ')'
  351           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1158
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1159
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1041

  454 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1160


State 1042

  349 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 349 (expr_field)


State 1043

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  402     | expr '.' '[' expr . ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ']'    shift, and go to state 1161


State 1044

  354 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 353 ($@18)

    $@18  go to state 1162


State 1045

  401 expr: expr '[' expr ']' .

    $default  reduce using rule 401 (expr)


State 1046

  291 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1005
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1047

  359 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 359 (expr_call)


State 1048

  659 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 1049

  649 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40 .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 1050

  609 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 609 (bitfield_bits)


State 1051

  615 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 615 (bitfield_type_declaration)


State 1052

  663 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 1053

  666 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' . $@50

    $default  reduce using rule 665 ($@50)

    $@50  go to state 1163


State 1054

  670 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 1055

  673 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' . $@54

    $default  reduce using rule 672 ($@54)

    $@54  go to state 1164


State 1056

  677 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 1057

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' . $@58

    $default  reduce using rule 679 ($@58)

    $@58  go to state 1165


State 1058

  487 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 487 (tuple_type_list)


State 1059

  683 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60 .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 1060

  493 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 493 (variant_type_list)


State 1061

  686 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62 .

    $default  reduce using rule 686 (type_declaration_no_options_no_dim)


State 1062

  240 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1166


State 1063

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1167


State 1064

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  565 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1168


State 1065

  566 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 566 (variable_name_with_pos_list)


State 1066

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  568                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1169

    $default  reduce using rule 567 (variable_name_with_pos_list)


State 1067

  501 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  502                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 907
    '='   shift, and go to state 909
    '|'   shift, and go to state 368

    $default  reduce using rule 501 (variable_declaration)

    copy_or_move  go to state 1170


State 1068

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  503 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 503 (variable_declaration)


State 1069

   72 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1171


State 1070

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1172
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1071

  261 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 261 (expression_try_catch)


State 1072

   73 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1173


State 1073

   74 expression_with_alias: "assume" "name" '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 74 (expression_with_alias)


State 1074

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 521
    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 522
    "if"                              shift, and go to state 523
    "static_if"                       shift, and go to state 524
    "for"                             shift, and go to state 525
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 527
    "try"                             shift, and go to state 528
    "table"                           shift, and go to state 410
    "delete"                          shift, and go to state 529
    "deref"                           shift, and go to state 411
    "with"                            shift, and go to state 530
    "assume"                          shift, and go to state 531
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 532
    "pass"                            shift, and go to state 533
    "reinterpret"                     shift, and go to state 415
    "label"                           shift, and go to state 534
    "goto"                            shift, and go to state 535
    "unsafe"                          shift, and go to state 536
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    "end of code block"               shift, and go to state 1174
    "end of expression"               shift, and go to state 539
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_label         go to state 540
    expression_goto          go to state 541
    if_or_static_if          go to state 542
    expression_if_one_liner  go to state 543
    expression_if_then_else  go to state 544
    expression_for_loop      go to state 545
    expression_unsafe        go to state 546
    expression_while_loop    go to state 547
    expression_with          go to state 548
    expression_with_alias    go to state 549
    expr_call_pipe           go to state 452
    expression_any           go to state 550
    name_in_namespace        go to state 453
    expression_delete        go to state 551
    expr_new                 go to state 454
    expression_break         go to state 552
    expression_continue      go to state 553
    expression_return        go to state 554
    expression_yield         go to state 555
    expression_try_catch     go to state 556
    kwd_let                  go to state 557
    expression_let           go to state 558
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_assign              go to state 559
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 560
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 1075

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1175


State 1076

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1176


State 1077

  510 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1177
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1078

  511 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1178


State 1079

  269 tuple_expansion: "name" .

    $default  reduce using rule 269 (tuple_expansion)


State 1080

  270 tuple_expansion: tuple_expansion . ',' "name"
  271 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1179
    ')'  shift, and go to state 1180


State 1081

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  513                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1181


State 1082

  516 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  517                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1182
    type_declaration_no_options_no_dim  go to state 262


State 1083

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 568
    ":="  shift, and go to state 569
    '='   shift, and go to state 570

    copy_or_move_or_clone  go to state 1183


State 1084

  548 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block" .

    $default  reduce using rule 548 (enum_declaration)


State 1085

  468 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 468 (optional_public_or_private_member_variable)


State 1086

  469 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 469 (optional_public_or_private_member_variable)


State 1087

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  479                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1184
    "static"    shift, and go to state 1088

    $default  reduce using rule 470 (optional_static_member_variable)

    optional_static_member_variable  go to state 1185


State 1088

  471 optional_static_member_variable: "static" .

    $default  reduce using rule 471 (optional_static_member_variable)


State 1089

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1186
    "sealed"    shift, and go to state 1187

    $default  reduce using rule 462 (optional_override)

    optional_override  go to state 1188


State 1090

  475 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 475 (struct_variable_declaration_list)


State 1091

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 520 (global_let_variable_declaration)


State 1092

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' . $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 726 ($@73)

    $@73  go to state 1189


State 1093

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' . $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 729 ($@75)

    $@75  go to state 1190


State 1094

  248 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 247 ($@4)

    $@4  go to state 1191


State 1095

  707 make_struct_fields: "name" . copy_or_move expr
  708                   | "name" . ":=" expr

    "<-"  shift, and go to state 907
    ":="  shift, and go to state 1013
    '='   shift, and go to state 909

    copy_or_move  go to state 1014


State 1096

  251 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 251 (expr_new)


State 1097

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1192


State 1098

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expr_new)


State 1099

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1193


State 1100

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1194


State 1101

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1102

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 285 ($@12)

    $@12  go to state 1195


State 1103

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options . '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1196


State 1104

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options . '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1197


State 1105

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_variant_dim ')'

    '>'  shift, and go to state 1198


State 1106

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' . $@89 '(' optional_expr_list ')'

    $default  reduce using rule 755 ($@89)

    $@89  go to state 1199


State 1107

  753 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 753 (make_dim_decl)


State 1108

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1200


State 1109

  765 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 450
    expr_reader                   go to state 451
    expr_call_pipe                go to state 452
    optional_expr_map_tuple_list  go to state 1201
    name_in_namespace             go to state 453
    expr_new                      go to state 454
    expr_cast                     go to state 455
    expr_type_decl                go to state 456
    expr_type_info                go to state 457
    block_or_lambda               go to state 458
    expr_full_block               go to state 459
    expr_numeric_const            go to state 460
    expr_named_call               go to state 461
    expr_method_call              go to state 462
    func_addr_expr                go to state 463
    expr_field                    go to state 464
    expr_call                     go to state 465
    expr                          go to state 614
    expr_mtag                     go to state 467
    basic_type_declaration        go to state 468
    make_decl                     go to state 469
    make_struct_decl              go to state 470
    make_map_tuple                go to state 615
    make_tuple_call               go to state 471
    make_dim_decl                 go to state 472
    expr_map_tuple_list           go to state 1202
    make_table_decl               go to state 473
    array_comprehension           go to state 474


State 1110

  764 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 764 (make_table_decl)


State 1111

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 276 ($@6)

    $@6  go to state 1203


State 1112

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 279 ($@8)

    $@8  go to state 1204


State 1113

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 282 ($@10)

    $@10  go to state 1205


State 1114

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' . $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 759 ($@91)

    $@91  go to state 1206


State 1115

  757 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 757 (make_dim_decl)


State 1116

  736 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' . $@79 use_initializer

    $default  reduce using rule 735 ($@79)

    $@79  go to state 1207


State 1117

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' . $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 741 ($@81)

    $@81  go to state 1208


State 1118

  739 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 739 (make_tuple_call)


State 1119

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' . $@77 '(' make_variant_dim ')'

    $default  reduce using rule 732 ($@77)

    $@77  go to state 1209


State 1120

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 322
    '('                    shift, and go to state 1210

    expression_block  go to state 1211


State 1121

  450 expr_mtag: "$c" '(' expr ')' '(' . ')'
  451          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1212
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1213
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1122

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1123

  291 expr_list: expr_list . ',' expr
  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1214
    ','                  shift, and go to state 1046


State 1124

  291 expr_list: expr_list . ',' expr
  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1215
    ','                  shift, and go to state 1046


State 1125

  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1216
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1126

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  340 func_addr_name: "$i" '(' expr . ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1217


State 1127

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  459          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1218


State 1128

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1219


State 1129

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1220


State 1130

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  712                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1221


State 1131

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 708 (make_struct_fields)


State 1132

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 707 (make_struct_fields)


State 1133

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1222


State 1134

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  743 make_dim_decl: '[' . expr_list optional_comma ']'
  771 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  772                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "for"                             shift, and go to state 622
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "iterator"                        shift, and go to state 623
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "$f"                              shift, and go to state 820
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 821
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 624
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_fields      go to state 1223
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1135

  713 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  714                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1224


State 1136

  709 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  710                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 907
    ":="  shift, and go to state 1225
    '='   shift, and go to state 909

    copy_or_move  go to state 1226


State 1137

  300 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1227


State 1138

  301 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1228


State 1139

  299 capture_entry: '=' . "name"

    "name"  shift, and go to state 1229


State 1140

  298 capture_entry: '&' . "name"

    "name"  shift, and go to state 1230


State 1141

  302 capture_list: capture_entry .

    $default  reduce using rule 302 (capture_list)


State 1142

  303 capture_list: capture_list . ',' capture_entry
  305 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1231
    ')'  shift, and go to state 1232


State 1143

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1233
    "begin of code block"  shift, and go to state 322

    expression_block       go to state 1234
    block_or_simple_block  go to state 1235


State 1144

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 385

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1236


State 1145

  419 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1237
    type_declaration_no_options_no_dim  go to state 262


State 1146

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  458          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1238


State 1147

  425 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1239


State 1148

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  456          | expr "as" "$f" '(' expr . ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1240


State 1149

  337 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 337 (expr_method_call)


State 1150

  291 expr_list: expr_list . ',' expr
  338 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1241


State 1151

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  453          | expr "?." "$f" '(' expr . ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1242


State 1152

  430 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 428 ($@23)

    $@23  go to state 1243


State 1153

  457 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1244
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1154

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr ':' expr .
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 416 (expr)


State 1155

  455 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1245
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1156

  404 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 404 (expr)


State 1157

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr '.' "$f" '(' expr . ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1246


State 1158

  350 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 350 (expr_field)


State 1159

  291 expr_list: expr_list . ',' expr
  351 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1247


State 1160

  454 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1248
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1161

  402 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 402 (expr)


State 1162

  354 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 354 (expr_field)


State 1163

  666 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50 .

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 1164

  673 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54 .

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 1165

  680 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58 .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 1166

  240 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368

    $default  reduce using rule 240 (type_declaration_no_options_list)


State 1167

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 1249
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 689
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1168

  565 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 565 (variable_name_with_pos_list)


State 1169

  568 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1250


State 1170

  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1251
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1171

   72 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 1172

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1252


State 1173

   73 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_with)


State 1174

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1175

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1253
    "elif"         shift, and go to state 1254
    "static_elif"  shift, and go to state 1255

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1256
    expression_else      go to state 1257


State 1176

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1258

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1259


State 1177

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  510 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1260


State 1178

  511 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 511 (let_variable_name_with_pos_list)


State 1179

  270 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1261


State 1180

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1262
    '&'  shift, and go to state 396

    $default  reduce using rule 507 (optional_ref)

    optional_ref  go to state 1263


State 1181

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  513                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1264

    $default  reduce using rule 512 (let_variable_name_with_pos_list)


State 1182

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 568
    ":="                 shift, and go to state 569
    "end of expression"  shift, and go to state 1265
    '='                  shift, and go to state 570

    copy_or_move_or_clone  go to state 1266


State 1183

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1267
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1184

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1268

    $default  reduce using rule 465 (optional_constant)

    optional_constant  go to state 1269


State 1185

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1186
    "sealed"    shift, and go to state 1187

    $default  reduce using rule 462 (optional_override)

    optional_override  go to state 1270


State 1186

  463 optional_override: "override" .

    $default  reduce using rule 463 (optional_override)


State 1187

  464 optional_override: "sealed" .

    $default  reduce using rule 464 (optional_override)


State 1188

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1085
    "private"  shift, and go to state 1086

    $default  reduce using rule 467 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1271


State 1189

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1272


State 1190

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1273


State 1191

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 248 (new_type_declaration)


State 1192

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 252 (expr_new)


State 1193

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1274


State 1194

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1275
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1195

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 286 (expr_type_decl)


State 1196

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' . $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 745 ($@83)

    $@83  go to state 1276


State 1197

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' . $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 748 ($@85)

    $@85  go to state 1277


State 1198

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_variant_dim ')'

    $default  reduce using rule 751 ($@87)

    $@87  go to state 1278


State 1199

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 . '(' optional_expr_list ')'

    '('  shift, and go to state 1279


State 1200

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1280


State 1201

  765 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1281


State 1202

  238 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  762 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 808

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 1282


State 1203

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1283
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1204

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1284
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1205

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1285
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1206

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1286


State 1207

  736 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 . use_initializer

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1287


State 1208

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1288


State 1209

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 . '(' make_variant_dim ')'

    '('  shift, and go to state 1289


State 1210

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    ')'                               shift, and go to state 1290
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1291
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1211

  414 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 414 (expr)


State 1212

  450 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1213

  291 expr_list: expr_list . ',' expr
  451 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1292


State 1214

  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 614
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_map_tuple          go to state 1293
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1215

  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1294
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1216

  291 expr_list: expr_list . ',' expr
  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1295
    ','                  shift, and go to state 1046


State 1217

  340 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 340 (func_addr_name)


State 1218

  459 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1219

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 343 ($@14)

    $@14  go to state 1296


State 1220

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1297


State 1221

  711 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  712                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 907
    ":="  shift, and go to state 1298
    '='   shift, and go to state 909

    copy_or_move  go to state 1299


State 1222

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 335 (expr_named_call)


State 1223

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1018
    ']'  shift, and go to state 1300


State 1224

  713 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  714                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1301
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1225

  710 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1302
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1226

  709 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1303
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1227

  300 capture_entry: "<-" "name" .

    $default  reduce using rule 300 (capture_entry)


State 1228

  301 capture_entry: ":=" "name" .

    $default  reduce using rule 301 (capture_entry)


State 1229

  299 capture_entry: '=' "name" .

    $default  reduce using rule 299 (capture_entry)


State 1230

  298 capture_entry: '&' "name" .

    $default  reduce using rule 298 (capture_entry)


State 1231

  303 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1304


State 1232

  305 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 305 (optional_capture_list)


State 1233

  293 block_or_simple_block: "=>" . expr
  294                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "<-"                              shift, and go to state 1305
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1306
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1234

  292 block_or_simple_block: expression_block .

    $default  reduce using rule 292 (block_or_simple_block)


State 1235

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 306 (expr_full_block)


State 1236

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1307


State 1237

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1308


State 1238

  458 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1239

  425 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1309


State 1240

  456 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1241

  338 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 338 (expr_method_call)


State 1242

  453 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1243

  430 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 261
    type_declaration_no_options_no_dim  go to state 262
    type_declaration                    go to state 1310


State 1244

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr '?' "as" "$f" '(' expr . ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1311


State 1245

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr '.' "?." "$f" '(' expr . ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1312


State 1246

  452 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1247

  351 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 351 (expr_field)


State 1248

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr '.' '.' "$f" '(' expr . ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1313


State 1249

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1314


State 1250

  568 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 568 (variable_name_with_pos_list)


State 1251

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 502 (variable_declaration)


State 1252

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1315


State 1253

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1316


State 1254

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1255

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1256

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1317


State 1257

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1258

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "return"                          shift, and go to state 526
    "null"                            shift, and go to state 409
    "break"                           shift, and go to state 527
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "continue"                        shift, and go to state 532
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "yield"                           shift, and go to state 537
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder           go to state 450
    expr_reader              go to state 451
    expression_if_one_liner  go to state 1318
    expr_call_pipe           go to state 452
    name_in_namespace        go to state 453
    expr_new                 go to state 454
    expression_break         go to state 1319
    expression_continue      go to state 1320
    expression_return        go to state 1321
    expression_yield         go to state 1322
    expr_cast                go to state 455
    expr_type_decl           go to state 456
    expr_type_info           go to state 457
    block_or_lambda          go to state 458
    expr_full_block          go to state 459
    expr_numeric_const       go to state 460
    expr_named_call          go to state 461
    expr_method_call         go to state 462
    func_addr_expr           go to state 463
    expr_field               go to state 464
    expr_call                go to state 465
    expr                     go to state 1323
    expr_mtag                go to state 467
    basic_type_declaration   go to state 468
    make_decl                go to state 469
    make_struct_decl         go to state 470
    make_tuple_call          go to state 471
    make_dim_decl            go to state 472
    make_table_decl          go to state 473
    array_comprehension      go to state 474


State 1259

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1324


State 1260

  510 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 1261

  270 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 270 (tuple_expansion)


State 1262

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 215
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "typedecl"   shift, and go to state 218
    "iterator"   shift, and go to state 219
    "smart_ptr"  shift, and go to state 220
    "bool"       shift, and go to state 221
    "void"       shift, and go to state 222
    "string"     shift, and go to state 223
    "auto"       shift, and go to state 224
    "int"        shift, and go to state 225
    "int2"       shift, and go to state 226
    "int3"       shift, and go to state 227
    "int4"       shift, and go to state 228
    "uint"       shift, and go to state 229
    "bitfield"   shift, and go to state 230
    "uint2"      shift, and go to state 231
    "uint3"      shift, and go to state 232
    "uint4"      shift, and go to state 233
    "float"      shift, and go to state 234
    "float2"     shift, and go to state 235
    "float3"     shift, and go to state 236
    "float4"     shift, and go to state 237
    "range"      shift, and go to state 238
    "urange"     shift, and go to state 239
    "range64"    shift, and go to state 240
    "urange64"   shift, and go to state 241
    "block"      shift, and go to state 242
    "int64"      shift, and go to state 243
    "uint64"     shift, and go to state 244
    "double"     shift, and go to state 245
    "function"   shift, and go to state 246
    "lambda"     shift, and go to state 247
    "int8"       shift, and go to state 248
    "uint8"      shift, and go to state 249
    "int16"      shift, and go to state 250
    "uint16"     shift, and go to state 251
    "tuple"      shift, and go to state 252
    "variant"    shift, and go to state 253
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 254
    "name"       shift, and go to state 56
    '$'          shift, and go to state 255

    name_in_namespace                   go to state 256
    basic_type_declaration              go to state 257
    structure_type_declaration          go to state 258
    auto_type_declaration               go to state 259
    bitfield_type_declaration           go to state 260
    type_declaration_no_options         go to state 1325
    type_declaration_no_options_no_dim  go to state 262


State 1263

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 568
    ":="  shift, and go to state 569
    '='   shift, and go to state 570

    copy_or_move_or_clone  go to state 1326


State 1264

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1327


State 1265

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 516 (let_variable_declaration)


State 1266

  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1328
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1267

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1329
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 1268

  466 optional_constant: "const" .

    $default  reduce using rule 466 (optional_constant)


State 1269

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 476 ($@26)

    $@26  go to state 1330


State 1270

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1268

    $default  reduce using rule 465 (optional_constant)

    optional_constant  go to state 1331


State 1271

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 703
    "name"  shift, and go to state 704

    variable_declaration         go to state 1332
    variable_name_with_pos_list  go to state 706


State 1272

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1333


State 1273

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1334


State 1274

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1335


State 1275

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1336


State 1276

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1337


State 1277

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1338


State 1278

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_variant_dim ')'

    '('  shift, and go to state 1339


State 1279

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    optional_expr_list      go to state 1340
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 689
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1280

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 450
    expr_reader                   go to state 451
    expr_call_pipe                go to state 452
    optional_expr_map_tuple_list  go to state 1341
    name_in_namespace             go to state 453
    expr_new                      go to state 454
    expr_cast                     go to state 455
    expr_type_decl                go to state 456
    expr_type_info                go to state 457
    block_or_lambda               go to state 458
    expr_full_block               go to state 459
    expr_numeric_const            go to state 460
    expr_named_call               go to state 461
    expr_method_call              go to state 462
    func_addr_expr                go to state 463
    expr_field                    go to state 464
    expr_call                     go to state 465
    expr                          go to state 614
    expr_mtag                     go to state 467
    basic_type_declaration        go to state 468
    make_decl                     go to state 469
    make_struct_decl              go to state 470
    make_map_tuple                go to state 615
    make_tuple_call               go to state 471
    make_dim_decl                 go to state 472
    expr_map_tuple_list           go to state 1202
    make_table_decl               go to state 473
    array_comprehension           go to state 474


State 1281

  765 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 765 (make_table_decl)


State 1282

  238 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 238 (optional_expr_map_tuple_list)


State 1283

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 277 (expr_cast)


State 1284

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 280 (expr_cast)


State 1285

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 283 (expr_cast)


State 1286

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    expr_list               go to state 1342
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 625
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1287

  736 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer .

    $default  reduce using rule 736 (make_struct_decl)


State 1288

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1343


State 1289

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1344
    make_variant_dim    go to state 1345


State 1290

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 412 (expr)


State 1291

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1346


State 1292

  451 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1293

  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1347

    $default  reduce using rule 767 (array_comprehension_where)

    array_comprehension_where  go to state 1348


State 1294

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1347
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668

    $default  reduce using rule 767 (array_comprehension_where)

    array_comprehension_where  go to state 1349


State 1295

  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1350
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1296

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 815
    "name"  shift, and go to state 56

    name_in_namespace  go to state 818
    func_addr_name     go to state 1351


State 1297

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 346 ($@16)

    $@16  go to state 1352


State 1298

  712 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1353
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1299

  711 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1354
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1300

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1355


State 1301

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  714                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1356


State 1302

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 710 (make_struct_fields)


State 1303

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 709 (make_struct_fields)


State 1304

  303 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 303 (capture_list)


State 1305

  294 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1357
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1306

  293 block_or_simple_block: "=>" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    ".."  error (nonassociative)

    $default  reduce using rule 293 (block_or_simple_block)


State 1307

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 307 (expr_full_block_assumed_piped)


State 1308

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 418 ($@20)

    $@20  go to state 1358


State 1309

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 424 ($@22)

    $@22  go to state 1359


State 1310

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  688 type_declaration: type_declaration . '|' type_declaration_no_options
  689                 | type_declaration . '|' '#'

    '|'  shift, and go to state 368
    '>'  shift, and go to state 1360


State 1311

  457 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1312

  455 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1313

  454 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1314

  634 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 1315

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1316

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1317

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1361
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1318

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1319

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1320

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1321

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1322

   65 expression_if_one_liner: expression_yield .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1323

   63 expression_if_one_liner: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 63 (expression_if_one_liner)


State 1324

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1325

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 568
    ":="  shift, and go to state 569
    '='   shift, and go to state 570

    copy_or_move_or_clone  go to state 1362


State 1326

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1363
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1327

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 513 (let_variable_name_with_pos_list)


State 1328

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1364
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 1329

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 518 (let_variable_declaration)


State 1330

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1365


State 1331

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 478 ($@27)

    $@27  go to state 1366


State 1332

  472 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 472 (structure_variable_declaration)


State 1333

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    '('     shift, and go to state 1367

    $default  reduce using rule 722 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1368
    make_struct_dim_list           go to state 1369
    make_struct_dim_decl           go to state 1370
    optional_make_struct_dim_decl  go to state 1371


State 1334

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    '('     shift, and go to state 1367

    $default  reduce using rule 722 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1368
    make_struct_dim_list           go to state 1369
    make_struct_dim_decl           go to state 1370
    optional_make_struct_dim_decl  go to state 1372


State 1335

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1373
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1336

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 288 (expr_type_info)


State 1337

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1374


State 1338

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 965

    $default  reduce using rule 723 (use_initializer)

    use_initializer  go to state 1375


State 1339

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1344
    make_variant_dim    go to state 1376


State 1340

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1377


State 1341

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1378


State 1342

  291 expr_list: expr_list . ',' expr
  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 812

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 1379


State 1343

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    '('     shift, and go to state 1367

    $default  reduce using rule 722 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1368
    make_struct_dim_list           go to state 1369
    make_struct_dim_decl           go to state 1370
    optional_make_struct_dim_decl  go to state 1380


State 1344

  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  715 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 715 (make_variant_dim)


State 1345

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1381


State 1346

  413 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 413 (expr)


State 1347

  768 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1382


State 1348

  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1383


State 1349

  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1384


State 1350

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1347
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668

    $default  reduce using rule 767 (array_comprehension_where)

    array_comprehension_where  go to state 1385


State 1351

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 344 (func_addr_expr)


State 1352

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 815
    "name"  shift, and go to state 56

    name_in_namespace  go to state 818
    func_addr_name     go to state 1386


State 1353

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  712 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 712 (make_struct_fields)


State 1354

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 711 (make_struct_fields)


State 1355

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 336 (expr_named_call)


State 1356

  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  714                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 907
    ":="  shift, and go to state 1387
    '='   shift, and go to state 909

    copy_or_move  go to state 1388


State 1357

  294 block_or_simple_block: "=>" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 294 (block_or_simple_block)


State 1358

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 419 (expr)


State 1359

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 425 (expr)


State 1360

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 429 ($@24)

    $@24  go to state 1389


State 1361

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1390


State 1362

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1391
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1363

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1392
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 1364

  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 517 (let_variable_declaration)


State 1365

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1393


State 1366

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1394


State 1367

  717 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1395


State 1368

  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  719 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 719 (make_struct_dim_decl)


State 1369

  718 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  720 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1396

    $default  reduce using rule 769 (optional_comma)

    optional_comma  go to state 1397


State 1370

  721 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 721 (optional_make_struct_dim_decl)


State 1371

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1398


State 1372

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1399


State 1373

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668
    ')'    shift, and go to state 1400


State 1374

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    '('     shift, and go to state 1367

    $default  reduce using rule 722 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1368
    make_struct_dim_list           go to state 1369
    make_struct_dim_decl           go to state 1370
    optional_make_struct_dim_decl  go to state 1401


State 1375

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095
    '('     shift, and go to state 1367

    $default  reduce using rule 722 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1368
    make_struct_dim_list           go to state 1369
    make_struct_dim_decl           go to state 1370
    optional_make_struct_dim_decl  go to state 1402


State 1376

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1403


State 1377

  756 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')' .

    $default  reduce using rule 756 (make_dim_decl)


State 1378

  766 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 766 (make_table_decl)


State 1379

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1404


State 1380

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1405


State 1381

  733 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')' .

    $default  reduce using rule 733 (make_struct_decl)


State 1382

  768 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1406
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1383

  773 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 773 (array_comprehension)


State 1384

  771 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 771 (array_comprehension)


State 1385

  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1407


State 1386

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 347 (func_addr_expr)


State 1387

  714 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1408
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1388

  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 401
    "class"                           shift, and go to state 402
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "array"                           shift, and go to state 408
    "null"                            shift, and go to state 409
    "table"                           shift, and go to state 410
    "deref"                           shift, and go to state 411
    "cast"                            shift, and go to state 412
    "upcast"                          shift, and go to state 413
    "addr"                            shift, and go to state 414
    "reinterpret"                     shift, and go to state 415
    "unsafe"                          shift, and go to state 416
    "fixed_array"                     shift, and go to state 417
    "default"                         shift, and go to state 418
    "bool"                            shift, and go to state 221
    "void"                            shift, and go to state 222
    "string"                          shift, and go to state 223
    "int"                             shift, and go to state 225
    "int2"                            shift, and go to state 226
    "int3"                            shift, and go to state 227
    "int4"                            shift, and go to state 228
    "uint"                            shift, and go to state 229
    "bitfield"                        shift, and go to state 419
    "uint2"                           shift, and go to state 231
    "uint3"                           shift, and go to state 232
    "uint4"                           shift, and go to state 233
    "float"                           shift, and go to state 234
    "float2"                          shift, and go to state 235
    "float3"                          shift, and go to state 236
    "float4"                          shift, and go to state 237
    "range"                           shift, and go to state 238
    "urange"                          shift, and go to state 239
    "range64"                         shift, and go to state 240
    "urange64"                        shift, and go to state 241
    "int64"                           shift, and go to state 243
    "uint64"                          shift, and go to state 244
    "double"                          shift, and go to state 245
    "int8"                            shift, and go to state 248
    "uint8"                           shift, and go to state 249
    "int16"                           shift, and go to state 250
    "uint16"                          shift, and go to state 251
    "tuple"                           shift, and go to state 420
    "variant"                         shift, and go to state 421
    "generator"                       shift, and go to state 422
    "++"                              shift, and go to state 423
    "--"                              shift, and go to state 424
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 425
    "$i"                              shift, and go to state 426
    "$v"                              shift, and go to state 427
    "$b"                              shift, and go to state 428
    "$a"                              shift, and go to state 429
    "$c"                              shift, and go to state 430
    "..."                             shift, and go to state 431
    "integer constant"                shift, and go to state 432
    "long integer constant"           shift, and go to state 433
    "unsigned integer constant"       shift, and go to state 434
    "unsigned long integer constant"  shift, and go to state 435
    "unsigned int8 constant"          shift, and go to state 436
    "floating point constant"         shift, and go to state 437
    "double constant"                 shift, and go to state 438
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 439
    "begin of code block"             shift, and go to state 440
    '-'                               shift, and go to state 441
    '+'                               shift, and go to state 442
    '*'                               shift, and go to state 443
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 444
    '!'                               shift, and go to state 445
    '['                               shift, and go to state 446
    '('                               shift, and go to state 447
    '$'                               shift, and go to state 448
    '@'                               shift, and go to state 449

    string_builder          go to state 450
    expr_reader             go to state 451
    expr_call_pipe          go to state 452
    name_in_namespace       go to state 453
    expr_new                go to state 454
    expr_cast               go to state 455
    expr_type_decl          go to state 456
    expr_type_info          go to state 457
    block_or_lambda         go to state 458
    expr_full_block         go to state 459
    expr_numeric_const      go to state 460
    expr_named_call         go to state 461
    expr_method_call        go to state 462
    func_addr_expr          go to state 463
    expr_field              go to state 464
    expr_call               go to state 465
    expr                    go to state 1409
    expr_mtag               go to state 467
    basic_type_declaration  go to state 468
    make_decl               go to state 469
    make_struct_decl        go to state 470
    make_tuple_call         go to state 471
    make_dim_decl           go to state 472
    make_table_decl         go to state 473
    array_comprehension     go to state 474


State 1389

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 430 (expr)


State 1390

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1410


State 1391

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 634
    "as"                 shift, and go to state 635
    "<<"                 shift, and go to state 636
    ">>"                 shift, and go to state 637
    "++"                 shift, and go to state 638
    "--"                 shift, and go to state 639
    "<="                 shift, and go to state 640
    ">="                 shift, and go to state 641
    "=="                 shift, and go to state 642
    "!="                 shift, and go to state 643
    "->"                 shift, and go to state 644
    "??"                 shift, and go to state 645
    "?."                 shift, and go to state 646
    "?["                 shift, and go to state 647
    "<|"                 shift, and go to state 648
    "|>"                 shift, and go to state 649
    "<<<"                shift, and go to state 650
    ">>>"                shift, and go to state 651
    "&&"                 shift, and go to state 652
    "||"                 shift, and go to state 653
    "^^"                 shift, and go to state 654
    ".."                 shift, and go to state 655
    "end of expression"  shift, and go to state 1411
    '?'                  shift, and go to state 656
    '|'                  shift, and go to state 657
    '^'                  shift, and go to state 658
    '&'                  shift, and go to state 659
    '<'                  shift, and go to state 660
    '>'                  shift, and go to state 661
    '-'                  shift, and go to state 662
    '+'                  shift, and go to state 663
    '*'                  shift, and go to state 664
    '/'                  shift, and go to state 665
    '%'                  shift, and go to state 666
    '.'                  shift, and go to state 667
    '['                  shift, and go to state 668


State 1392

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 272 (tuple_expansion_variable_declaration)


State 1393

  477 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 477 (struct_variable_declaration_list)


State 1394

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 322

    expression_block  go to state 1412


State 1395

  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  717 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1413


State 1396

  718 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  770 optional_comma: ',' .

    '('  shift, and go to state 1414

    $default  reduce using rule 770 (optional_comma)


State 1397

  720 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 720 (make_struct_dim_decl)


State 1398

  727 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 727 (make_struct_decl)


State 1399

  730 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 730 (make_struct_decl)


State 1400

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 289 (expr_type_info)


State 1401

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1415


State 1402

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1416


State 1403

  752 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')' .

    $default  reduce using rule 752 (make_dim_decl)


State 1404

  760 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')' .

    $default  reduce using rule 760 (make_dim_decl)


State 1405

  742 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 742 (make_tuple_call)


State 1406

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  768 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 768 (array_comprehension_where)


State 1407

  772 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 772 (array_comprehension)


State 1408

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  714 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 714 (make_struct_fields)


State 1409

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  452 expr_mtag: expr . '.' "$f" '(' expr ')'
  453          | expr . "?." "$f" '(' expr ')'
  454          | expr . '.' '.' "$f" '(' expr ')'
  455          | expr . '.' "?." "$f" '(' expr ')'
  456          | expr . "as" "$f" '(' expr ')'
  457          | expr . '?' "as" "$f" '(' expr ')'
  458          | expr . "is" "$f" '(' expr ')'
  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 634
    "as"   shift, and go to state 635
    "<<"   shift, and go to state 636
    ">>"   shift, and go to state 637
    "++"   shift, and go to state 638
    "--"   shift, and go to state 639
    "<="   shift, and go to state 640
    ">="   shift, and go to state 641
    "=="   shift, and go to state 642
    "!="   shift, and go to state 643
    "->"   shift, and go to state 644
    "??"   shift, and go to state 645
    "?."   shift, and go to state 646
    "?["   shift, and go to state 647
    "<|"   shift, and go to state 648
    "|>"   shift, and go to state 649
    "<<<"  shift, and go to state 650
    ">>>"  shift, and go to state 651
    "&&"   shift, and go to state 652
    "||"   shift, and go to state 653
    "^^"   shift, and go to state 654
    ".."   shift, and go to state 655
    '?'    shift, and go to state 656
    '|'    shift, and go to state 657
    '^'    shift, and go to state 658
    '&'    shift, and go to state 659
    '<'    shift, and go to state 660
    '>'    shift, and go to state 661
    '-'    shift, and go to state 662
    '+'    shift, and go to state 663
    '*'    shift, and go to state 664
    '/'    shift, and go to state 665
    '%'    shift, and go to state 666
    '.'    shift, and go to state 667
    '['    shift, and go to state 668

    $default  reduce using rule 713 (make_struct_fields)


State 1410

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1253
    "elif"         shift, and go to state 1254
    "static_elif"  shift, and go to state 1255

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1256
    expression_else      go to state 1417


State 1411

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 271 (tuple_expansion_variable_declaration)


State 1412

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 479 (struct_variable_declaration_list)


State 1413

  717 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 717 (make_struct_dim_list)


State 1414

  718 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 1095

    make_struct_fields  go to state 1418


State 1415

  746 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 746 (make_dim_decl)


State 1416

  749 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 749 (make_dim_decl)


State 1417

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)


State 1418

  709 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  710                   | make_struct_fields . ',' "name" ":=" expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  714                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  718 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1419


State 1419

  718 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 718 (make_struct_dim_list)
