Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration ';'
    9        | program options_declaration ';'
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 COMMA: ','
   17      | "emitted ,"

   18 SEMICOLON: ';'
   19          | "emitted ;"

   20 top_level_reader_macro: expr_reader ';'

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 string_builder_body: %empty
   34                    | string_builder_body character_sequence
   35                    | string_builder_body "{" expr "}"

   36 string_builder: "start of the string" string_builder_body "end of the string"

   37 reader_character_sequence: STRING_CHARACTER
   38                          | reader_character_sequence STRING_CHARACTER

   39 $@1: %empty

   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   41 options_declaration: "options" annotation_argument_list

   42 require_declaration: "require" require_module

   43 require_module_name: "name"
   44                    | '%' require_module_name
   45                    | require_module_name '.' "name"
   46                    | require_module_name '/' "name"

   47 require_module: require_module_name is_public_module
   48               | require_module_name "as" "name" is_public_module

   49 is_public_module: %empty
   50                 | "public"

   51 expect_declaration: "expect" expect_list

   52 expect_list: expect_error
   53            | expect_list ',' expect_error

   54 expect_error: "integer constant"
   55             | "integer constant" ':' "integer constant"

   56 expression_label: "label" "integer constant" ':'

   57 expression_goto: "goto" "label" "integer constant"
   58                | "goto" expr

   59 elif_or_static_elif: "elif"
   60                    | "static_elif"

   61 emit_semis: "emitted ;"
   62           | emit_semis "emitted ;"

   63 optional_emit_semis: %empty
   64                    | emit_semis

   65 expression_else: %empty
   66                | "else" optional_emit_semis expression_block
   67                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty
   71                          | "else" expression_if_one_liner

   72 expression_if_one_liner: expr
   73                        | expression_return
   74                        | expression_yield
   75                        | expression_break
   76                        | expression_continue

   77 semis: SEMICOLON
   78      | semis SEMICOLON

   79 optional_semis: %empty
   80               | semis

   81 $@2: %empty

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   84 $@3: %empty

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   86 expression_unsafe: "unsafe" optional_emit_semis expression_block

   87 $@4: %empty

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis expression_block

   89 $@5: %empty

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis expression_block

   91 expression_with_alias: "assume" "name" '=' expr

   92 annotation_argument_value: string_constant
   93                          | "name"
   94                          | "integer constant"
   95                          | "floating point constant"
   96                          | "true"
   97                          | "false"

   98 annotation_argument_value_list: annotation_argument_value
   99                               | annotation_argument_value_list ',' annotation_argument_value

  100 annotation_argument_name: "name"
  101                         | "type"
  102                         | "in"

  103 annotation_argument: annotation_argument_name '=' string_constant
  104                    | annotation_argument_name '=' "name"
  105                    | annotation_argument_name '=' "integer constant"
  106                    | annotation_argument_name '=' "floating point constant"
  107                    | annotation_argument_name '=' "true"
  108                    | annotation_argument_name '=' "false"
  109                    | annotation_argument_name
  110                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  111 annotation_argument_list: annotation_argument
  112                         | annotation_argument_list ',' annotation_argument

  113 metadata_argument_list: '@' annotation_argument
  114                       | metadata_argument_list '@' annotation_argument

  115 annotation_declaration_name: name_in_namespace
  116                            | "require"
  117                            | "private"

  118 annotation_declaration_basic: annotation_declaration_name
  119                             | annotation_declaration_name '(' annotation_argument_list ')'

  120 annotation_declaration: annotation_declaration_basic
  121                       | '!' annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration
  125                       | '(' annotation_declaration ')'
  126                       | "|>" annotation_declaration

  127 annotation_list: annotation_declaration
  128                | annotation_list ',' annotation_declaration

  129 optional_annotation_list: %empty
  130                         | '[' annotation_list ']'

  131 optional_function_argument_list: %empty
  132                                | '(' ')'
  133                                | '(' function_argument_list ')'

  134 optional_function_type: %empty
  135                       | ':' type_declaration

  136 function_name: "name"
  137              | "operator" '!'
  138              | "operator" '~'
  139              | "operator" "+="
  140              | "operator" "-="
  141              | "operator" "*="
  142              | "operator" "/="
  143              | "operator" "%="
  144              | "operator" "&="
  145              | "operator" "|="
  146              | "operator" "^="
  147              | "operator" "&&="
  148              | "operator" "||="
  149              | "operator" "^^="
  150              | "operator" "&&"
  151              | "operator" "||"
  152              | "operator" "^^"
  153              | "operator" '+'
  154              | "operator" '-'
  155              | "operator" '*'
  156              | "operator" '/'
  157              | "operator" '%'
  158              | "operator" '<'
  159              | "operator" '>'
  160              | "operator" ".."
  161              | "operator" "=="
  162              | "operator" "!="
  163              | "operator" "<="
  164              | "operator" ">="
  165              | "operator" '&'
  166              | "operator" '|'
  167              | "operator" '^'
  168              | "++" "operator"
  169              | "--" "operator"
  170              | "operator" "++"
  171              | "operator" "--"
  172              | "operator" "<<"
  173              | "operator" ">>"
  174              | "operator" "<<="
  175              | "operator" ">>="
  176              | "operator" "<<<"
  177              | "operator" ">>>"
  178              | "operator" "<<<="
  179              | "operator" ">>>="
  180              | "operator" '[' ']'
  181              | "operator" "?[" ']'
  182              | "operator" '.'
  183              | "operator" "?."
  184              | "operator" '.' "name"
  185              | "operator" '.' "name" ":="
  186              | "operator" "?." "name"
  187              | "operator" ":="
  188              | "operator" "delete"
  189              | "operator" "??"
  190              | "operator" "is"
  191              | "operator" "as"
  192              | "operator" "is" "name"
  193              | "operator" "as" "name"
  194              | "operator" '?' "as"
  195              | "operator" '?' "as" "name"
  196              | "bool"
  197              | "string"
  198              | "int"
  199              | "int2"
  200              | "int3"
  201              | "int4"
  202              | "uint"
  203              | "uint2"
  204              | "uint3"
  205              | "uint4"
  206              | "float"
  207              | "float2"
  208              | "float3"
  209              | "float4"
  210              | "range"
  211              | "urange"
  212              | "range64"
  213              | "urange64"
  214              | "int64"
  215              | "uint64"
  216              | "double"
  217              | "int8"
  218              | "uint8"
  219              | "int16"
  220              | "uint16"

  221 global_function_declaration: optional_annotation_list "def" function_declaration

  222 optional_public_or_private_function: %empty
  223                                    | "private"
  224                                    | "public"

  225 function_declaration_header: function_name optional_function_argument_list optional_function_type

  226 $@6: %empty

  227 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  228 expression_block_finally: %empty

  229 $@7: %empty

  230 $@8: %empty

  231 expression_block_finally: "finally" $@7 '{' expressions $@8 '}'

  232 $@9: %empty

  233 $@10: %empty

  234 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally

  235 expr_call_pipe: expr_call expr_full_block_assumed_piped

  236 expression_any: SEMICOLON
  237               | expr_assign SEMICOLON
  238               | expression_delete SEMICOLON
  239               | expression_let
  240               | expression_while_loop
  241               | expression_unsafe
  242               | expression_with
  243               | expression_with_alias SEMICOLON
  244               | expression_for_loop
  245               | expression_break SEMICOLON
  246               | expression_continue SEMICOLON
  247               | expression_return SEMICOLON
  248               | expression_yield SEMICOLON
  249               | expression_if_then_else
  250               | expression_if_then_else_oneliner
  251               | expression_try_catch
  252               | expression_label SEMICOLON
  253               | expression_goto SEMICOLON
  254               | "pass" SEMICOLON

  255 expressions: %empty
  256            | expressions expression_any
  257            | expressions error

  258 optional_expr_list: %empty
  259                   | expr_list optional_comma

  260 optional_expr_map_tuple_list: %empty
  261                             | expr_map_tuple_list optional_comma

  262 type_declaration_no_options_list: type_declaration
  263                                 | type_declaration_no_options_list c_or_s type_declaration

  264 name_in_namespace: "name"
  265                  | "name" "::" "name"
  266                  | "::" "name"

  267 expression_delete: "delete" expr
  268                  | "delete" "explicit" expr

  269 $@11: %empty

  270 $@12: %empty

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12
  272                     | structure_type_declaration

  273 expr_new: "new" new_type_declaration
  274         | "new" new_type_declaration '(' use_initializer ')'
  275         | "new" new_type_declaration '(' expr_list ')'
  276         | "new" new_type_declaration '(' make_struct_single ')'
  277         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  278         | "new" make_decl

  279 expression_break: "break"

  280 expression_continue: "continue"

  281 expression_return: "return"
  282                  | "return" expr
  283                  | "return" "<-" expr

  284 expression_yield: "yield" expr
  285                 | "yield" "<-" expr

  286 expression_try_catch: "try" expression_block "recover" expression_block

  287 kwd_let_var_or_nothing: "let"
  288                       | "var"
  289                       | %empty

  290 kwd_let: "let"
  291        | "var"

  292 optional_in_scope: "inscope"
  293                  | %empty

  294 tuple_expansion: "name"
  295                | tuple_expansion ',' "name"

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  297                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  298 expression_let: kwd_let optional_in_scope let_variable_declaration
  299               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  300               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  301 $@13: %empty

  302 $@14: %empty

  303 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  304 $@15: %empty

  305 $@16: %empty

  306 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  307 $@17: %empty

  308 $@18: %empty

  309 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  310 $@19: %empty

  311 $@20: %empty

  312 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  313 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  314               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  315               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  316 expr_list: expr
  317          | expr_list ',' expr

  318 block_or_simple_block: expression_block
  319                      | "=>" expr
  320                      | "=>" "<-" expr

  321 block_or_lambda: '$'
  322                | '@'
  323                | '@' '@'

  324 capture_entry: '&' "name"
  325              | '=' "name"
  326              | "<-" "name"
  327              | ":=" "name"
  328              | "name" '(' "name" ')'

  329 capture_list: capture_entry
  330             | capture_list ',' capture_entry

  331 optional_capture_list: %empty
  332                      | "capture" '(' capture_list ')'

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  335                              | '{' expressions '}'

  336 expr_numeric_const: "integer constant"
  337                   | "unsigned integer constant"
  338                   | "long integer constant"
  339                   | "unsigned long integer constant"
  340                   | "unsigned int8 constant"
  341                   | "floating point constant"
  342                   | "double constant"

  343 expr_assign: expr
  344            | expr '=' expr
  345            | expr "<-" expr
  346            | expr ":=" expr
  347            | expr "&=" expr
  348            | expr "|=" expr
  349            | expr "^=" expr
  350            | expr "&&=" expr
  351            | expr "||=" expr
  352            | expr "^^=" expr
  353            | expr "+=" expr
  354            | expr "-=" expr
  355            | expr "*=" expr
  356            | expr "/=" expr
  357            | expr "%=" expr
  358            | expr "<<=" expr
  359            | expr ">>=" expr
  360            | expr "<<<=" expr
  361            | expr ">>>=" expr

  362 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  363                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  364 expr_method_call: expr "->" "name" '(' ')'
  365                 | expr "->" "name" '(' expr_list ')'

  366 func_addr_name: name_in_namespace
  367               | "$i" '(' expr ')'

  368 func_addr_expr: '@' '@' func_addr_name

  369 $@21: %empty

  370 $@22: %empty

  371 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  372 $@23: %empty

  373 $@24: %empty

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  375 expr_field: expr '.' "name"
  376           | expr '.' '.' "name"
  377           | expr '.' "name" '(' ')'
  378           | expr '.' "name" '(' expr_list ')'
  379           | expr '.' basic_type_declaration '(' ')'
  380           | expr '.' basic_type_declaration '(' expr_list ')'

  381 $@25: %empty

  382 $@26: %empty

  383 expr_field: expr '.' $@25 error $@26

  384 expr_call: name_in_namespace '(' ')'
  385          | name_in_namespace '(' "uninitialized" ')'
  386          | name_in_namespace '(' make_struct_single ')'
  387          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  388          | name_in_namespace '(' expr_list ')'
  389          | basic_type_declaration '(' ')'
  390          | basic_type_declaration '(' expr_list ')'

  391 expr: "null"
  392     | name_in_namespace
  393     | expr_numeric_const
  394     | expr_reader
  395     | string_builder
  396     | make_decl
  397     | "true"
  398     | "false"
  399     | expr_field
  400     | expr_mtag
  401     | '!' expr
  402     | '~' expr
  403     | '+' expr
  404     | '-' expr
  405     | expr "<<" expr
  406     | expr ">>" expr
  407     | expr "<<<" expr
  408     | expr ">>>" expr
  409     | expr '+' expr
  410     | expr '-' expr
  411     | expr '*' expr
  412     | expr '/' expr
  413     | expr '%' expr
  414     | expr '<' expr
  415     | expr '>' expr
  416     | expr "==" expr
  417     | expr "!=" expr
  418     | expr "<=" expr
  419     | expr ">=" expr
  420     | expr '&' expr
  421     | expr '|' expr
  422     | expr '^' expr
  423     | expr "&&" expr
  424     | expr "||" expr
  425     | expr "^^" expr
  426     | expr ".." expr
  427     | "++" expr
  428     | "--" expr
  429     | expr "++"
  430     | expr "--"
  431     | '(' expr_list optional_comma ')'
  432     | expr '[' expr ']'
  433     | expr '.' '[' expr ']'
  434     | expr "?[" expr ']'
  435     | expr '.' "?[" expr ']'
  436     | expr "?." "name"
  437     | expr '.' "?." "name"
  438     | func_addr_expr
  439     | expr_call
  440     | '*' expr
  441     | "deref" '(' expr ')'
  442     | "addr" '(' expr ')'
  443     | expr_generator
  444     | expr "??" expr
  445     | expr '?' expr ':' expr

  446 $@27: %empty

  447 $@28: %empty

  448 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr "is" basic_type_declaration
  450     | expr "is" "name"
  451     | expr "as" "name"

  452 $@29: %empty

  453 $@30: %empty

  454 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr "as" basic_type_declaration
  456     | expr '?' "as" "name"

  457 $@31: %empty

  458 $@32: %empty

  459 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr '?' "as" basic_type_declaration
  461     | expr_type_info
  462     | expr_type_decl
  463     | expr_cast
  464     | expr_new
  465     | expr_method_call
  466     | expr_named_call
  467     | expr_full_block
  468     | expr "<|" expr
  469     | expr "|>" expr
  470     | expr "|>" basic_type_declaration
  471     | expr_call_pipe
  472     | "unsafe" '(' expr ')'

  473 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  474               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  475               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  476 expr_mtag: "$$" '(' expr ')'
  477          | "$i" '(' expr ')'
  478          | "$v" '(' expr ')'
  479          | "$b" '(' expr ')'
  480          | "$a" '(' expr ')'
  481          | "..."
  482          | "$c" '(' expr ')' '(' ')'
  483          | "$c" '(' expr ')' '(' expr_list ')'
  484          | expr '.' "$f" '(' expr ')'
  485          | expr "?." "$f" '(' expr ')'
  486          | expr '.' '.' "$f" '(' expr ')'
  487          | expr '.' "?." "$f" '(' expr ')'
  488          | expr "as" "$f" '(' expr ')'
  489          | expr '?' "as" "$f" '(' expr ')'
  490          | expr "is" "$f" '(' expr ')'
  491          | '@' '@' "$c" '(' expr ')'

  492 optional_field_annotation: %empty
  493                          | metadata_argument_list

  494 optional_override: %empty
  495                  | "override"
  496                  | "sealed"

  497 optional_constant: %empty
  498                  | "const"

  499 optional_public_or_private_member_variable: %empty
  500                                           | "public"
  501                                           | "private"

  502 optional_static_member_variable: %empty
  503                                | "static"

  504 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  505 struct_variable_declaration_list: %empty

  506 $@33: %empty

  507 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  508 $@34: %empty

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  510 $@35: %empty

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

  512 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  513                              | "$a" '(' expr ')'

  514 function_argument_list: function_argument_declaration
  515                       | function_argument_list ';' function_argument_declaration

  516 tuple_type: type_declaration
  517           | "name" ':' type_declaration

  518 tuple_type_list: tuple_type
  519                | tuple_type_list c_or_s tuple_type

  520 tuple_alias_type_list: %empty
  521                      | tuple_type
  522                      | tuple_alias_type_list semis tuple_type

  523 variant_type: "name" ':' type_declaration

  524 variant_type_list: variant_type
  525                  | variant_type_list c_or_s variant_type

  526 variant_alias_type_list: %empty
  527                        | variant_type
  528                        | variant_alias_type_list semis variant_type

  529 copy_or_move: '='
  530             | "<-"

  531 variable_declaration: variable_name_with_pos_list
  532                     | variable_name_with_pos_list '&'
  533                     | variable_name_with_pos_list ':' type_declaration
  534                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  535                     | variable_name_with_pos_list copy_or_move expr

  536 copy_or_move_or_clone: '='
  537                      | "<-"
  538                      | ":="

  539 optional_ref: %empty
  540             | '&'

  541 let_variable_name_with_pos_list: "name"
  542                                | "$i" '(' expr ')'
  543                                | "name" "aka" "name"
  544                                | let_variable_name_with_pos_list ',' "name"
  545                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  546 global_let_variable_name_with_pos_list: "name"
  547                                       | global_let_variable_name_with_pos_list ',' "name"

  548 variable_declaration_list: %empty
  549                          | variable_declaration_list ';'
  550                          | variable_declaration_list let_variable_declaration

  551 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  552                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  553                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  554 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  555                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  556                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'

  557 optional_shared: %empty
  558                | "shared"

  559 optional_public_or_private_variable: %empty
  560                                    | "private"
  561                                    | "public"

  562 global_variable_declaration_list: %empty
  563                                 | global_variable_declaration_list ';'

  564 $@36: %empty

  565 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  566 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  567 $@37: %empty

  568 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

  569 enum_expression: "name"
  570                | "name" '=' expr

  571 commas: COMMA
  572       | commas COMMA

  573 enum_list: %empty
  574          | enum_expression
  575          | enum_list commas enum_expression

  576 optional_public_or_private_alias: %empty
  577                                 | "private"
  578                                 | "public"

  579 $@38: %empty

  580 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  581 alias_declaration: "typedef" single_alias ';'

  582 optional_public_or_private_enum: %empty
  583                                | "private"
  584                                | "public"

  585 enum_name: "name"

  586 optional_enum_basic_type_declaration: %empty
  587                                     | ':' enum_basic_type_declaration

  588 optional_commas: %empty
  589                | commas

  590 emit_commas: "emitted ,"
  591            | emit_commas "emitted ,"

  592 optional_emit_commas: %empty
  593                     | emit_commas

  594 $@39: %empty

  595 $@40: %empty

  596 $@41: %empty

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

  598 optional_structure_parent: %empty
  599                          | ':' name_in_namespace

  600 optional_sealed: %empty
  601                | "sealed"

  602 structure_name: optional_sealed "name" optional_structure_parent

  603 class_or_struct: "class"
  604                | "struct"

  605 optional_public_or_private_structure: %empty
  606                                     | "private"
  607                                     | "public"

  608 optional_struct_variable_declaration_list: %empty
  609                                          | '{' struct_variable_declaration_list '}'

  610 $@42: %empty

  611 $@43: %empty

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

  613 variable_name_with_pos_list: "name"
  614                            | "$i" '(' expr ')'
  615                            | "name" "aka" "name"
  616                            | variable_name_with_pos_list ',' "name"
  617                            | variable_name_with_pos_list ',' "name" "aka" "name"

  618 basic_type_declaration: "bool"
  619                       | "string"
  620                       | "int"
  621                       | "int8"
  622                       | "int16"
  623                       | "int64"
  624                       | "int2"
  625                       | "int3"
  626                       | "int4"
  627                       | "uint"
  628                       | "uint8"
  629                       | "uint16"
  630                       | "uint64"
  631                       | "uint2"
  632                       | "uint3"
  633                       | "uint4"
  634                       | "float"
  635                       | "float2"
  636                       | "float3"
  637                       | "float4"
  638                       | "void"
  639                       | "range"
  640                       | "urange"
  641                       | "range64"
  642                       | "urange64"
  643                       | "double"
  644                       | "bitfield"

  645 enum_basic_type_declaration: "int"
  646                            | "int8"
  647                            | "int16"
  648                            | "uint"
  649                            | "uint8"
  650                            | "uint16"
  651                            | "int64"
  652                            | "uint64"

  653 structure_type_declaration: name_in_namespace

  654 auto_type_declaration: "auto"
  655                      | "auto" '(' "name" ')'
  656                      | "$t" '(' expr ')'

  657 bitfield_bits: "name"
  658              | bitfield_bits ';' "name"

  659 bitfield_alias_bits: %empty
  660                    | "name"
  661                    | bitfield_alias_bits commas "name"

  662 $@44: %empty

  663 $@45: %empty

  664 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' $@45

  665 c_or_s: COMMA
  666       | SEMICOLON

  667 table_type_pair: type_declaration
  668                | type_declaration c_or_s type_declaration

  669 dim_list: '[' expr ']'
  670         | '[' ']'
  671         | dim_list '[' expr ']'
  672         | dim_list '[' ']'

  673 type_declaration_no_options: type_declaration_no_options_no_dim
  674                            | type_declaration_no_options_no_dim dim_list

  675 type_declaration_no_options_no_dim: basic_type_declaration
  676                                   | auto_type_declaration
  677                                   | bitfield_type_declaration
  678                                   | structure_type_declaration

  679 $@46: %empty

  680 $@47: %empty

  681 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' $@47
  682                                   | "typedecl" '(' expr ')'
  683                                   | '$' name_in_namespace '(' optional_expr_list ')'

  684 $@48: %empty

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  686                                   | type_declaration_no_options_no_dim '-' '[' ']'
  687                                   | type_declaration_no_options_no_dim "explicit"
  688                                   | type_declaration_no_options_no_dim "const"
  689                                   | type_declaration_no_options_no_dim '-' "const"
  690                                   | type_declaration_no_options_no_dim '&'
  691                                   | type_declaration_no_options_no_dim '-' '&'
  692                                   | type_declaration_no_options_no_dim '#'
  693                                   | type_declaration_no_options_no_dim "implicit"
  694                                   | type_declaration_no_options_no_dim '-' '#'
  695                                   | type_declaration_no_options_no_dim "==" "const"
  696                                   | type_declaration_no_options_no_dim "==" '&'
  697                                   | type_declaration_no_options_no_dim '?'

  698 $@49: %empty

  699 $@50: %empty

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' $@50
  701                                   | type_declaration_no_options_no_dim "??"

  702 $@51: %empty

  703 $@52: %empty

  704 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' $@52

  705 $@53: %empty

  706 $@54: %empty

  707 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' $@54

  708 $@55: %empty

  709 $@56: %empty

  710 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' $@56
  711                                   | "block"

  712 $@57: %empty

  713 $@58: %empty

  714 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' $@58

  715 $@59: %empty

  716 $@60: %empty

  717 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  718                                   | "function"

  719 $@61: %empty

  720 $@62: %empty

  721 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' $@62

  722 $@63: %empty

  723 $@64: %empty

  724 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  725                                   | "lambda"

  726 $@65: %empty

  727 $@66: %empty

  728 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' $@66

  729 $@67: %empty

  730 $@68: %empty

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68

  732 $@69: %empty

  733 $@70: %empty

  734 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' $@70

  735 $@71: %empty

  736 $@72: %empty

  737 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' $@72

  738 type_declaration: type_declaration_no_options
  739                 | type_declaration '|' type_declaration_no_options
  740                 | type_declaration '|' '#'

  741 $@73: %empty

  742 $@74: %empty

  743 $@75: %empty

  744 $@76: %empty

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

  746 $@77: %empty

  747 $@78: %empty

  748 $@79: %empty

  749 $@80: %empty

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

  751 $@81: %empty

  752 $@82: %empty

  753 $@83: %empty

  754 $@84: %empty

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

  756 make_decl: make_struct_decl
  757          | make_dim_decl
  758          | make_table_decl
  759          | array_comprehension
  760          | make_tuple_call

  761 make_struct_fields: "name" copy_or_move expr
  762                   | "name" ":=" expr
  763                   | make_struct_fields ',' "name" copy_or_move expr
  764                   | make_struct_fields ',' "name" ":=" expr
  765                   | "$f" '(' expr ')' copy_or_move expr
  766                   | "$f" '(' expr ')' ":=" expr
  767                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  769 make_variant_dim: make_struct_fields

  770 make_struct_single: make_struct_fields

  771 make_struct_dim_list: '(' make_struct_fields ')'
  772                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  773 make_struct_dim_decl: make_struct_fields
  774                     | make_struct_dim_list optional_comma

  775 optional_make_struct_dim_decl: make_struct_dim_decl
  776                              | %empty

  777 use_initializer: %empty
  778                | "uninitialized"

  779 $@85: %empty

  780 $@86: %empty

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

  782 $@87: %empty

  783 $@88: %empty

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

  785 $@89: %empty

  786 $@90: %empty

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

  788 $@91: %empty

  789 $@92: %empty

  790 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 use_initializer

  791 make_map_tuple: expr "=>" expr
  792               | expr

  793 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  794 $@93: %empty

  795 $@94: %empty

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  797 make_dim_decl: '[' expr_list optional_comma ']'

  798 $@95: %empty

  799 $@96: %empty

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  801 $@97: %empty

  802 $@98: %empty

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  804 $@99: %empty

  805 $@100: %empty

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'
  807              | "array" '(' expr_list optional_comma ')'

  808 $@101: %empty

  809 $@102: %empty

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'
  811              | "fixed_array" '(' expr_list optional_comma ')'

  812 $@103: %empty

  813 $@104: %empty

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

  815 expr_map_tuple_list: make_map_tuple
  816                    | expr_map_tuple_list ',' make_map_tuple

  817 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  818                | "table" '(' expr_map_tuple_list optional_comma ')'
  819                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  820                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  821 array_comprehension_where: %empty
  822                          | ';' "where" expr

  823 optional_comma: %empty
  824               | ','

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  826                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  827                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 121 137 401
    '#' (35) 692 694 740
    '$' (36) 24 321 683 685
    '%' (37) 40 44 157 413
    '&' (38) 165 324 420 532 540 690 691 696
    '(' (40) 67 82 83 85 88 90 110 119 125 132 133 274 275 276 277 296 297 313 314 315 328 332 362 363 364 365 367 377 378 379 380 384 385 386 387 388 389 390 431 441 442 472 473 474 476 477 478 479 480 482 483 484 485 486 487 488 489 490 491 513 542 614 655 656 682 683 685 765 766 767 768 771 772 781 784 787 793 796 800 803 806 807 810 811 814 818 819 820 825 826 827
    ')' (41) 67 82 83 85 88 90 110 119 125 132 133 274 275 276 277 296 297 313 314 315 328 332 362 363 364 365 367 377 378 379 380 384 385 386 387 388 389 390 431 441 442 472 473 474 476 477 478 479 480 482 483 484 485 486 487 488 489 490 491 513 542 614 655 656 682 683 685 765 766 767 768 771 772 781 784 787 793 796 800 803 806 807 810 811 814 818 819 820 825 826 827
    '*' (42) 155 411 440
    '+' (43) 153 403 409
    ',' (44) 16 53 99 112 128 295 317 330 363 544 545 547 616 617 763 764 767 768 772 816 824
    '-' (45) 154 404 410 686 689 691 694
    '.' (46) 45 182 184 185 375 376 377 378 379 380 383 433 435 437 484 486 487
    '/' (47) 46 156 412
    ':' (58) 55 56 135 296 445 517 523 533 534 551 552 554 555 587 599
    ';' (59) 8 9 15 18 20 507 509 515 549 554 555 556 563 581 658 822 825 826 827
    '<' (60) 158 271 303 306 309 312 314 315 371 374 414 448 454 459 473 474 475 664 681 685 700 704 707 710 714 717 721 724 728 731 734 737 781 784 787 790 796 800 803 806 810 814 819 820
    '=' (61) 91 103 104 105 106 107 108 110 325 344 529 536 570 580
    '>' (62) 159 271 303 306 309 312 314 315 371 374 415 448 454 459 473 474 475 664 681 685 700 704 707 710 714 717 721 724 728 731 734 737 781 784 787 790 796 800 803 806 810 814 819 820
    '?' (63) 194 195 445 456 459 460 489 697
    '@' (64) 113 114 322 323 368 371 374 491
    '[' (91) 130 180 362 363 432 433 669 670 671 672 686 797 825 826
    ']' (93) 130 180 181 362 363 432 433 434 435 669 670 671 672 686 797 825 826
    '^' (94) 167 422
    '{' (123) 231 234 300 335 566 597 609 745 750 755 817 827
    '|' (124) 166 421 739 740
    '}' (125) 231 234 300 335 566 597 609 745 750 755 817 827
    '~' (126) 138 402
    error (256) 257 383
    "lexer error" (258)
    "capture" (259) 332
    "struct" (260) 604 781 800
    "class" (261) 603 784
    "let" (262) 287 290
    "def" (263) 221 509 511
    "while" (264) 88
    "if" (265) 68 83
    "static_if" (266) 69
    "else" (267) 66 71
    "for" (268) 85 825 826 827
    "recover" (269) 286
    "true" (270) 96 107 397
    "false" (271) 97 108 398
    "new" (272) 273 274 275 276 277 278
    "typeinfo" (273) 313 314 315
    "type" (274) 101 312 448 454 459 681
    "in" (275) 85 102 825 826 827
    "is" (276) 190 192 448 449 450 490
    "as" (277) 48 191 193 194 195 451 454 455 456 459 460 488 489
    "elif" (278) 59
    "static_elif" (279) 60
    "array" (280) 704 800 803 806 807 810
    "return" (281) 281 282 283
    "null" (282) 391
    "break" (283) 279
    "try" (284) 286
    "options" (285) 41
    "table" (286) 707 818 819 820
    "expect" (287) 51
    "const" (288) 498 688 689 695
    "require" (289) 42 116
    "operator" (290) 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
    "enum" (291) 597
    "finally" (292) 231
    "delete" (293) 188 267 268
    "deref" (294) 441
    "typedef" (295) 581
    "typedecl" (296) 682
    "with" (297) 90
    "aka" (298) 543 545 615 617
    "assume" (299) 91
    "cast" (300) 303
    "override" (301) 495
    "abstract" (302) 509
    "upcast" (303) 306
    "iterator" (304) 710 826
    "var" (305) 288 291
    "addr" (306) 442
    "continue" (307) 280
    "where" (308) 822
    "pass" (309) 254
    "reinterpret" (310) 309
    "module" (311) 26
    "public" (312) 22 50 224 500 561 578 584 607
    "label" (313) 56 57
    "goto" (314) 57 58
    "implicit" (315) 693
    "explicit" (316) 268 687
    "shared" (317) 558
    "private" (318) 23 117 223 501 560 577 583 606
    "smart_ptr" (319) 700
    "unsafe" (320) 86 472
    "inscope" (321) 292
    "static" (322) 503
    "fixed_array" (323) 811 814
    "default" (324) 790
    "uninitialized" (325) 277 385 387 778
    "bool" (326) 196 618
    "void" (327) 638
    "string" (328) 197 619
    "auto" (329) 654 655
    "int" (330) 198 620 645
    "int2" (331) 199 624
    "int3" (332) 200 625
    "int4" (333) 201 626
    "uint" (334) 202 627 648
    "bitfield" (335) 644 664 755
    "uint2" (336) 203 631
    "uint3" (337) 204 632
    "uint4" (338) 205 633
    "float" (339) 206 634
    "float2" (340) 207 635
    "float3" (341) 208 636
    "float4" (342) 209 637
    "range" (343) 210 639
    "urange" (344) 211 640
    "range64" (345) 212 641
    "urange64" (346) 213 642
    "block" (347) 711 714 717
    "int64" (348) 214 623 651
    "uint64" (349) 215 630 652
    "double" (350) 216 643
    "function" (351) 718 721 724
    "lambda" (352) 725 728 731
    "int8" (353) 217 621 646
    "uint8" (354) 218 628 649
    "int16" (355) 219 622 647
    "uint16" (356) 220 629 650
    "tuple" (357) 734 745 793 796 803
    "variant" (358) 737 750 787 806
    "generator" (359) 473 474 475
    "yield" (360) 284 285
    "sealed" (361) 496 601
    "+=" (362) 139 353
    "-=" (363) 140 354
    "/=" (364) 142 356
    "*=" (365) 141 355
    "%=" (366) 143 357
    "&=" (367) 144 347
    "|=" (368) 145 348
    "^=" (369) 146 349
    "<<" (370) 172 405
    ">>" (371) 173 406
    "++" (372) 168 170 427 429
    "--" (373) 169 171 428 430
    "<=" (374) 163 418
    "<<=" (375) 174 358
    ">>=" (376) 175 359
    ">=" (377) 164 419
    "==" (378) 161 416 695 696
    "!=" (379) 162 417
    "->" (380) 364 365
    "<-" (381) 283 285 320 326 345 530 537
    "??" (382) 189 444 701
    "?." (383) 183 186 436 437 485 487
    "?[" (384) 181 434 435
    "<|" (385) 468
    "|>" (386) 126 469 470
    ":=" (387) 185 187 327 346 538 762 764 766 768
    "<<<" (388) 176 407
    ">>>" (389) 177 408
    "<<<=" (390) 178 360
    ">>>=" (391) 179 361
    "=>" (392) 319 320 791
    "::" (393) 265 266
    "&&" (394) 122 150 423
    "||" (395) 123 151 424
    "^^" (396) 124 152 425
    "&&=" (397) 147 350
    "||=" (398) 148 351
    "^^=" (399) 149 352
    ".." (400) 160 426
    "$$" (401) 476
    "$i" (402) 367 477 542 614
    "$v" (403) 478
    "$b" (404) 479
    "$a" (405) 480 513
    "$t" (406) 656
    "$c" (407) 482 483 491
    "$f" (408) 484 485 486 487 488 489 490 765 766 767 768
    "..." (409) 481
    "integer constant" <i> (410) 54 55 56 57 94 105 336
    "long integer constant" <i64> (411) 338
    "unsigned integer constant" <ui> (412) 337
    "unsigned long integer constant" <ui64> (413) 339
    "unsigned int8 constant" <ui> (414) 340
    "floating point constant" <fd> (415) 95 106 341
    "double constant" <d> (416) 342
    "name" <s> (417) 25 43 45 46 48 91 93 100 104 136 184 185 186 192 193 195 264 265 266 294 295 314 315 324 325 326 327 328 364 365 375 376 377 378 436 437 450 451 456 517 523 541 543 544 545 546 547 569 570 580 585 602 613 615 616 617 655 657 658 660 661 745 750 755 761 762 763 764
    "emitted ," (418) 17 590 591
    "emitted ;" (419) 19 61 62
    "start of the string" (420) 31 32 36
    STRING_CHARACTER <ch> (421) 27 29 37 38
    STRING_CHARACTER_ESC (422) 28 30
    "end of the string" (423) 31 32 36
    "{" (424) 35
    "}" (425) 35
    "end of failed eader macro" (426)
    UNARY_MINUS (427)
    UNARY_PLUS (428)
    PRE_INC (429)
    PRE_DEC (430)
    LLPIPE (431)
    POST_INC (432)
    POST_DEC (433)
    DEREF (434)


Nonterminals, with rules where they appear

    $accept (207)
        on left: 0
    program (208)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (209)
        on left: 16 17
        on right: 571 572 665
    SEMICOLON (210)
        on left: 18 19
        on right: 77 78 83 236 237 238 243 245 246 247 248 252 253 254 296 297 551 552 553 666
    top_level_reader_macro (211)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (212)
        on left: 21 22 23
        on right: 26
    module_name <s> (213)
        on left: 24 25
        on right: 26
    module_declaration (214)
        on left: 26
        on right: 2
    character_sequence <s> (215)
        on left: 27 28 29 30
        on right: 29 30 31 34
    string_constant <s> (216)
        on left: 31 32
        on right: 92 103
    string_builder_body <pExpression> (217)
        on left: 33 34 35
        on right: 34 35 36
    string_builder <pExpression> (218)
        on left: 36
        on right: 395
    reader_character_sequence (219)
        on left: 37 38
        on right: 38 40
    expr_reader <pExpression> (220)
        on left: 40
        on right: 20 394
    $@1 (221)
        on left: 39
        on right: 40
    options_declaration (222)
        on left: 41
        on right: 9
    require_declaration (223)
        on left: 42
        on right: 8
    require_module_name <s> (224)
        on left: 43 44 45 46
        on right: 44 45 46 47 48
    require_module (225)
        on left: 47 48
        on right: 42
    is_public_module <b> (226)
        on left: 49 50
        on right: 47 48
    expect_declaration (227)
        on left: 51
        on right: 7
    expect_list (228)
        on left: 52 53
        on right: 51 53
    expect_error (229)
        on left: 54 55
        on right: 52 53
    expression_label <pExpression> (230)
        on left: 56
        on right: 252
    expression_goto <pExpression> (231)
        on left: 57 58
        on right: 253
    elif_or_static_elif <b> (232)
        on left: 59 60
        on right: 67
    emit_semis (233)
        on left: 61 62
        on right: 62 64
    optional_emit_semis (234)
        on left: 63 64
        on right: 66 67 82 85 86 88 90 333 334 475 745 750
    expression_else <pExpression> (235)
        on left: 65 66 67
        on right: 67 82
    if_or_static_if <b> (236)
        on left: 68 69
        on right: 82
    expression_else_one_liner <pExpression> (237)
        on left: 70 71
        on right: 83
    expression_if_one_liner <pExpression> (238)
        on left: 72 73 74 75 76
        on right: 71 83
    semis (239)
        on left: 77 78
        on right: 78 80 522 528
    optional_semis (240)
        on left: 79 80
        on right: 745 750
    expression_if_then_else <pExpression> (241)
        on left: 82
        on right: 249
    $@2 (242)
        on left: 81
        on right: 82
    expression_if_then_else_oneliner <pExpression> (243)
        on left: 83
        on right: 250
    expression_for_loop <pExpression> (244)
        on left: 85
        on right: 244
    $@3 (245)
        on left: 84
        on right: 85
    expression_unsafe <pExpression> (246)
        on left: 86
        on right: 241
    expression_while_loop <pExpression> (247)
        on left: 88
        on right: 240
    $@4 (248)
        on left: 87
        on right: 88
    expression_with <pExpression> (249)
        on left: 90
        on right: 242
    $@5 (250)
        on left: 89
        on right: 90
    expression_with_alias <pExpression> (251)
        on left: 91
        on right: 243
    annotation_argument_value <aa> (252)
        on left: 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_value_list <aaList> (253)
        on left: 98 99
        on right: 99 110
    annotation_argument_name <s> (254)
        on left: 100 101 102
        on right: 103 104 105 106 107 108 109 110
    annotation_argument <aa> (255)
        on left: 103 104 105 106 107 108 109 110
        on right: 111 112 113 114
    annotation_argument_list <aaList> (256)
        on left: 111 112
        on right: 41 112 119
    metadata_argument_list <aaList> (257)
        on left: 113 114
        on right: 114 493
    annotation_declaration_name <s> (258)
        on left: 115 116 117
        on right: 118 119
    annotation_declaration_basic <fa> (259)
        on left: 118 119
        on right: 120
    annotation_declaration <fa> (260)
        on left: 120 121 122 123 124 125 126
        on right: 121 122 123 124 125 126 127 128
    annotation_list <faList> (261)
        on left: 127 128
        on right: 128 130
    optional_annotation_list <faList> (262)
        on left: 129 130
        on right: 221 333 334 509 511 597 612
    optional_function_argument_list <pVarDeclList> (263)
        on left: 131 132 133
        on right: 225 333 334 374 717 724 731
    optional_function_type <pTypeDecl> (264)
        on left: 134 135
        on right: 225 333 334 374 717 724 731
    function_name <s> (265)
        on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
        on right: 225
    global_function_declaration (266)
        on left: 221
        on right: 6
    optional_public_or_private_function <b> (267)
        on left: 222 223 224
        on right: 227
    function_declaration_header <pFuncDecl> (268)
        on left: 225
        on right: 227 509 511
    function_declaration <pFuncDecl> (269)
        on left: 227
        on right: 221
    $@6 (270)
        on left: 226
        on right: 227
    expression_block_finally <pExpression> (271)
        on left: 228 231
        on right: 234
    $@7 (272)
        on left: 229
        on right: 231
    $@8 (273)
        on left: 230
        on right: 231
    expression_block <pExpression> (274)
        on left: 234
        on right: 66 67 82 85 86 88 90 227 286 318 334 475 511
    $@9 (275)
        on left: 232
        on right: 234
    $@10 (276)
        on left: 233
        on right: 234
    expr_call_pipe <pExpression> (277)
        on left: 235
        on right: 471
    expression_any <pExpression> (278)
        on left: 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254
        on right: 256
    expressions <pExpression> (279)
        on left: 255 256 257
        on right: 231 234 256 257 335
    optional_expr_list <pExpression> (280)
        on left: 258 259
        on right: 683 685 810
    optional_expr_map_tuple_list <pExpression> (281)
        on left: 260 261
        on right: 819 820
    type_declaration_no_options_list <pTypeDeclList> (282)
        on left: 262 263
        on right: 263 685
    name_in_namespace <s> (283)
        on left: 264 265 266
        on right: 40 115 313 314 315 362 363 366 384 385 386 387 388 392 599 653 683 685
    expression_delete <pExpression> (284)
        on left: 267 268
        on right: 238
    new_type_declaration <pTypeDecl> (285)
        on left: 271 272
        on right: 273 274 275 276 277
    $@11 (286)
        on left: 269
        on right: 271
    $@12 (287)
        on left: 270
        on right: 271
    expr_new <pExpression> (288)
        on left: 273 274 275 276 277 278
        on right: 464
    expression_break <pExpression> (289)
        on left: 279
        on right: 75 245
    expression_continue <pExpression> (290)
        on left: 280
        on right: 76 246
    expression_return <pExpression> (291)
        on left: 281 282 283
        on right: 73 247
    expression_yield <pExpression> (292)
        on left: 284 285
        on right: 74 248
    expression_try_catch <pExpression> (293)
        on left: 286
        on right: 251
    kwd_let_var_or_nothing <b> (294)
        on left: 287 288 289
        on right: 512
    kwd_let <b> (295)
        on left: 290 291
        on right: 298 299 300 566 568
    optional_in_scope <b> (296)
        on left: 292 293
        on right: 298 299 300
    tuple_expansion <pNameList> (297)
        on left: 294 295
        on right: 295 296 297
    tuple_expansion_variable_declaration <pVarDecl> (298)
        on left: 296 297
        on right: 299
    expression_let <pExpression> (299)
        on left: 298 299 300
        on right: 239
    expr_cast <pExpression> (300)
        on left: 303 306 309
        on right: 463
    $@13 (301)
        on left: 301
        on right: 303
    $@14 (302)
        on left: 302
        on right: 303
    $@15 (303)
        on left: 304
        on right: 306
    $@16 (304)
        on left: 305
        on right: 306
    $@17 (305)
        on left: 307
        on right: 309
    $@18 (306)
        on left: 308
        on right: 309
    expr_type_decl <pExpression> (307)
        on left: 312
        on right: 462
    $@19 (308)
        on left: 310
        on right: 312
    $@20 (309)
        on left: 311
        on right: 312
    expr_type_info <pExpression> (310)
        on left: 313 314 315
        on right: 461
    expr_list <pExpression> (311)
        on left: 316 317
        on right: 85 259 275 317 363 365 378 380 388 390 431 483 793 797 807 811 814 825 826 827
    block_or_simple_block <pExpression> (312)
        on left: 318 319 320
        on right: 333
    block_or_lambda <i> (313)
        on left: 321 322 323
        on right: 333 334
    capture_entry <pCapt> (314)
        on left: 324 325 326 327 328
        on right: 329 330
    capture_list <pCaptList> (315)
        on left: 329 330
        on right: 330 332
    optional_capture_list <pCaptList> (316)
        on left: 331 332
        on right: 333 334 473 474 475
    expr_full_block <pExpression> (317)
        on left: 333
        on right: 467
    expr_full_block_assumed_piped <pExpression> (318)
        on left: 334 335
        on right: 235
    expr_numeric_const <pExpression> (319)
        on left: 336 337 338 339 340 341 342
        on right: 393
    expr_assign <pExpression> (320)
        on left: 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361
        on right: 237
    expr_named_call <pExpression> (321)
        on left: 362 363
        on right: 466
    expr_method_call <pExpression> (322)
        on left: 364 365
        on right: 465
    func_addr_name <pExpression> (323)
        on left: 366 367
        on right: 368 371 374
    func_addr_expr <pExpression> (324)
        on left: 368 371 374
        on right: 438
    $@21 (325)
        on left: 369
        on right: 371
    $@22 (326)
        on left: 370
        on right: 371
    $@23 (327)
        on left: 372
        on right: 374
    $@24 (328)
        on left: 373
        on right: 374
    expr_field <pExpression> (329)
        on left: 375 376 377 378 379 380 383
        on right: 399
    $@25 (330)
        on left: 381
        on right: 383
    $@26 (331)
        on left: 382
        on right: 383
    expr_call <pExpression> (332)
        on left: 384 385 386 387 388 389 390
        on right: 235 439
    expr <pExpression> (333)
        on left: 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 448 449 450 451 454 455 456 459 460 461 462 463 464 465 466 467 468 469 470 471 472
        on right
    $@27 (334)
        on left: 446
        on right: 448
    $@28 (335)
        on left: 447
        on right: 448
    $@29 (336)
        on left: 452
        on right: 454
    $@30 (337)
        on left: 453
        on right: 454
    $@31 (338)
        on left: 457
        on right: 459
    $@32 (339)
        on left: 458
        on right: 459
    expr_generator <pExpression> (340)
        on left: 473 474 475
        on right: 443
    expr_mtag <pExpression> (341)
        on left: 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491
        on right: 400
    optional_field_annotation <aaList> (342)
        on left: 492 493
        on right: 504 512 565 568
    optional_override <i> (343)
        on left: 494 495 496
        on right: 504 511
    optional_constant <b> (344)
        on left: 497 498
        on right: 509 511
    optional_public_or_private_member_variable <b> (345)
        on left: 499 500 501
        on right: 504 509 511
    optional_static_member_variable <b> (346)
        on left: 502 503
        on right: 504 511
    structure_variable_declaration <pVarDecl> (347)
        on left: 504
        on right: 507
    struct_variable_declaration_list <pVarDeclList> (348)
        on left: 505 507 509 511
        on right: 507 509 511 609
    $@33 (349)
        on left: 506
        on right: 507
    $@34 (350)
        on left: 508
        on right: 509
    $@35 (351)
        on left: 510
        on right: 511
    function_argument_declaration <pVarDecl> (352)
        on left: 512 513
        on right: 514 515
    function_argument_list <pVarDeclList> (353)
        on left: 514 515
        on right: 133 515
    tuple_type <pVarDecl> (354)
        on left: 516 517
        on right: 518 519 521 522
    tuple_type_list <pVarDeclList> (355)
        on left: 518 519
        on right: 519 734
    tuple_alias_type_list <pVarDeclList> (356)
        on left: 520 521 522
        on right: 522 745
    variant_type <pVarDecl> (357)
        on left: 523
        on right: 524 525 527 528
    variant_type_list <pVarDeclList> (358)
        on left: 524 525
        on right: 525 737
    variant_alias_type_list <pVarDeclList> (359)
        on left: 526 527 528
        on right: 528 750
    copy_or_move <b> (360)
        on left: 529 530
        on right: 534 535 761 763 765 767
    variable_declaration <pVarDecl> (361)
        on left: 531 532 533 534 535
        on right: 504 512
    copy_or_move_or_clone <i> (362)
        on left: 536 537 538
        on right: 296 297 552 553 555 556
    optional_ref <b> (363)
        on left: 539 540
        on right: 297 553 556
    let_variable_name_with_pos_list <pNameWithPosList> (364)
        on left: 541 542 543 544 545
        on right: 544 545 551 552 553
    global_let_variable_name_with_pos_list <pNameWithPosList> (365)
        on left: 546 547
        on right: 547 554 555 556
    variable_declaration_list <pVarDeclList> (366)
        on left: 548 549 550
        on right: 300 549 550
    let_variable_declaration <pVarDecl> (367)
        on left: 551 552 553
        on right: 298 550 565
    global_let_variable_declaration <pVarDecl> (368)
        on left: 554 555 556
        on right: 568
    optional_shared <b> (369)
        on left: 557 558
        on right: 26 566 568
    optional_public_or_private_variable <b> (370)
        on left: 559 560 561
        on right: 566 568
    global_variable_declaration_list <pVarDeclList> (371)
        on left: 562 563 565
        on right: 563 565 566
    $@36 (372)
        on left: 564
        on right: 565
    global_let (373)
        on left: 566 568
        on right: 5
    $@37 (374)
        on left: 567
        on right: 568
    enum_expression <pEnumPair> (375)
        on left: 569 570
        on right: 574 575
    commas (376)
        on left: 571 572
        on right: 572 575 589 661
    enum_list <pEnum> (377)
        on left: 573 574 575
        on right: 575 597
    optional_public_or_private_alias <b> (378)
        on left: 576 577 578
        on right: 580 745 750 755
    single_alias (379)
        on left: 580
        on right: 581
    $@38 (380)
        on left: 579
        on right: 580
    alias_declaration (381)
        on left: 581
        on right: 10
    optional_public_or_private_enum <b> (382)
        on left: 582 583 584
        on right: 597
    enum_name <pEnum> (383)
        on left: 585
        on right: 597
    optional_enum_basic_type_declaration <type> (384)
        on left: 586 587
        on right: 597
    optional_commas (385)
        on left: 588 589
        on right: 597 755
    emit_commas (386)
        on left: 590 591
        on right: 591 593
    optional_emit_commas (387)
        on left: 592 593
        on right: 597 755
    enum_declaration (388)
        on left: 597
        on right: 4
    $@39 (389)
        on left: 594
        on right: 597
    $@40 (390)
        on left: 595
        on right: 597
    $@41 (391)
        on left: 596
        on right: 597
    optional_structure_parent <s> (392)
        on left: 598 599
        on right: 602
    optional_sealed <b> (393)
        on left: 600 601
        on right: 602
    structure_name <pStructure> (394)
        on left: 602
        on right: 612
    class_or_struct <b> (395)
        on left: 603 604
        on right: 612
    optional_public_or_private_structure <b> (396)
        on left: 605 606 607
        on right: 612
    optional_struct_variable_declaration_list <pVarDeclList> (397)
        on left: 608 609
        on right: 612
    structure_declaration (398)
        on left: 612
        on right: 3
    $@42 (399)
        on left: 610
        on right: 612
    $@43 (400)
        on left: 611
        on right: 612
    variable_name_with_pos_list <pNameWithPosList> (401)
        on left: 613 614 615 616 617
        on right: 85 531 532 533 534 535 616 617 825 826 827
    basic_type_declaration <type> (402)
        on left: 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644
        on right: 379 380 389 390 449 455 460 470 675
    enum_basic_type_declaration <type> (403)
        on left: 645 646 647 648 649 650 651 652
        on right: 587
    structure_type_declaration <pTypeDecl> (404)
        on left: 653
        on right: 272 678
    auto_type_declaration <pTypeDecl> (405)
        on left: 654 655 656
        on right: 676
    bitfield_bits <pNameList> (406)
        on left: 657 658
        on right: 658 664
    bitfield_alias_bits <pNameList> (407)
        on left: 659 660 661
        on right: 661 755
    bitfield_type_declaration <pTypeDecl> (408)
        on left: 664
        on right: 677
    $@44 (409)
        on left: 662
        on right: 664
    $@45 (410)
        on left: 663
        on right: 664
    c_or_s (411)
        on left: 665 666
        on right: 263 315 519 525 668 820
    table_type_pair <aTypePair> (412)
        on left: 667 668
        on right: 707
    dim_list <pTypeDecl> (413)
        on left: 669 670 671 672
        on right: 671 672 674
    type_declaration_no_options <pTypeDecl> (414)
        on left: 673 674
        on right: 296 303 306 309 371 448 473 474 475 551 552 554 555 738 739 781 784 787 790 796 800 803 806 810 814 819 820
    type_declaration_no_options_no_dim <pTypeDecl> (415)
        on left: 675 676 677 678 681 682 683 685 686 687 688 689 690 691 692 693 694 695 696 697 700 701 704 707 710 711 714 717 718 721 724 725 728 731 734 737
        on right: 673 674 686 687 688 689 690 691 692 693 694 695 696 697 701
    $@46 (416)
        on left: 679
        on right: 681
    $@47 (417)
        on left: 680
        on right: 681
    $@48 (418)
        on left: 684
        on right: 685
    $@49 (419)
        on left: 698
        on right: 700
    $@50 (420)
        on left: 699
        on right: 700
    $@51 (421)
        on left: 702
        on right: 704
    $@52 (422)
        on left: 703
        on right: 704
    $@53 (423)
        on left: 705
        on right: 707
    $@54 (424)
        on left: 706
        on right: 707
    $@55 (425)
        on left: 708
        on right: 710
    $@56 (426)
        on left: 709
        on right: 710
    $@57 (427)
        on left: 712
        on right: 714
    $@58 (428)
        on left: 713
        on right: 714
    $@59 (429)
        on left: 715
        on right: 717
    $@60 (430)
        on left: 716
        on right: 717
    $@61 (431)
        on left: 719
        on right: 721
    $@62 (432)
        on left: 720
        on right: 721
    $@63 (433)
        on left: 722
        on right: 724
    $@64 (434)
        on left: 723
        on right: 724
    $@65 (435)
        on left: 726
        on right: 728
    $@66 (436)
        on left: 727
        on right: 728
    $@67 (437)
        on left: 729
        on right: 731
    $@68 (438)
        on left: 730
        on right: 731
    $@69 (439)
        on left: 732
        on right: 734
    $@70 (440)
        on left: 733
        on right: 734
    $@71 (441)
        on left: 735
        on right: 737
    $@72 (442)
        on left: 736
        on right: 737
    type_declaration <pTypeDecl> (443)
        on left: 738 739 740
        on right: 135 262 263 271 312 454 459 516 517 523 533 534 580 667 668 681 700 704 710 714 721 728 739 740
    tuple_alias_declaration (444)
        on left: 745
        on right: 12
    $@73 (445)
        on left: 741
        on right: 745
    $@74 (446)
        on left: 742
        on right: 745
    $@75 (447)
        on left: 743
        on right: 745
    $@76 (448)
        on left: 744
        on right: 745
    variant_alias_declaration (449)
        on left: 750
        on right: 11
    $@77 (450)
        on left: 746
        on right: 750
    $@78 (451)
        on left: 747
        on right: 750
    $@79 (452)
        on left: 748
        on right: 750
    $@80 (453)
        on left: 749
        on right: 750
    bitfield_alias_declaration (454)
        on left: 755
        on right: 13
    $@81 (455)
        on left: 751
        on right: 755
    $@82 (456)
        on left: 752
        on right: 755
    $@83 (457)
        on left: 753
        on right: 755
    $@84 (458)
        on left: 754
        on right: 755
    make_decl <pExpression> (459)
        on left: 756 757 758 759 760
        on right: 278 396
    make_struct_fields <pMakeStruct> (460)
        on left: 761 762 763 764 765 766 767 768
        on right: 362 363 763 764 767 768 769 770 771 772 773
    make_variant_dim <pExpression> (461)
        on left: 769
        on right: 787 806
    make_struct_single <pExpression> (462)
        on left: 770
        on right: 276 277 386 387
    make_struct_dim_list <pExpression> (463)
        on left: 771 772
        on right: 772 774
    make_struct_dim_decl <pExpression> (464)
        on left: 773 774
        on right: 775
    optional_make_struct_dim_decl <pExpression> (465)
        on left: 775 776
        on right: 781 784 796 800 803
    use_initializer <b> (466)
        on left: 777 778
        on right: 274 781 784 790 796 800 803
    make_struct_decl <pExpression> (467)
        on left: 781 784 787 790
        on right: 756
    $@85 (468)
        on left: 779
        on right: 781
    $@86 (469)
        on left: 780
        on right: 781
    $@87 (470)
        on left: 782
        on right: 784
    $@88 (471)
        on left: 783
        on right: 784
    $@89 (472)
        on left: 785
        on right: 787
    $@90 (473)
        on left: 786
        on right: 787
    $@91 (474)
        on left: 788
        on right: 790
    $@92 (475)
        on left: 789
        on right: 790
    make_map_tuple <pExpression> (476)
        on left: 791 792
        on right: 815 816 827
    make_tuple_call <pExpression> (477)
        on left: 793 796
        on right: 760
    $@93 (478)
        on left: 794
        on right: 796
    $@94 (479)
        on left: 795
        on right: 796
    make_dim_decl <pExpression> (480)
        on left: 797 800 803 806 807 810 811 814
        on right: 757
    $@95 (481)
        on left: 798
        on right: 800
    $@96 (482)
        on left: 799
        on right: 800
    $@97 (483)
        on left: 801
        on right: 803
    $@98 (484)
        on left: 802
        on right: 803
    $@99 (485)
        on left: 804
        on right: 806
    $@100 (486)
        on left: 805
        on right: 806
    $@101 (487)
        on left: 808
        on right: 810
    $@102 (488)
        on left: 809
        on right: 810
    $@103 (489)
        on left: 812
        on right: 814
    $@104 (490)
        on left: 813
        on right: 814
    expr_map_tuple_list <pExpression> (491)
        on left: 815 816
        on right: 261 816 817 818
    make_table_decl <pExpression> (492)
        on left: 817 818 819 820
        on right: 758
    array_comprehension_where <pExpression> (493)
        on left: 821 822
        on right: 825 826 827
    optional_comma <b> (494)
        on left: 823 824
        on right: 259 261 431 774 793 797 807 811 814 817 818
    array_comprehension <pExpression> (495)
        on left: 825 826 827
        on right: 759


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration ';'
    9        | program . options_declaration ';'
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 129 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  290 kwd_let: "let" .

    $default  reduce using rule 290 (kwd_let)


State 4

   41 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   51 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   42 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  581 alias_declaration: "typedef" . single_alias ';'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 576 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  291 kwd_let: "var" .

    $default  reduce using rule 291 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  755 bitfield_alias_declaration: "bitfield" . $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 751 ($@81)

    $@81  go to state 52


State 11

  745 tuple_alias_declaration: "tuple" . $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 741 ($@73)

    $@73  go to state 53


State 12

  750 variant_alias_declaration: "variant" . $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 746 ($@77)

    $@77  go to state 54


State 13

   40 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 14

  130 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   20 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 68


State 19

    9 program: program options_declaration . ';'

    ';'  shift, and go to state 69


State 20

    8 program: program require_declaration . ';'

    ';'  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  221 global_function_declaration: optional_annotation_list . "def" function_declaration
  597 enum_declaration: optional_annotation_list . "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'
  612 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  566 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  568           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 557 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

  101 annotation_argument_name: "type" .

    $default  reduce using rule 101 (annotation_argument_name)


State 33

  102 annotation_argument_name: "in" .

    $default  reduce using rule 102 (annotation_argument_name)


State 34

  100 annotation_argument_name: "name" .

    $default  reduce using rule 100 (annotation_argument_name)


State 35

  103 annotation_argument: annotation_argument_name . '=' string_constant
  104                    | annotation_argument_name . '=' "name"
  105                    | annotation_argument_name . '=' "integer constant"
  106                    | annotation_argument_name . '=' "floating point constant"
  107                    | annotation_argument_name . '=' "true"
  108                    | annotation_argument_name . '=' "false"
  109                    | annotation_argument_name .
  110                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 109 (annotation_argument)


State 36

  111 annotation_argument_list: annotation_argument .

    $default  reduce using rule 111 (annotation_argument_list)


State 37

   41 options_declaration: "options" annotation_argument_list .
  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 41 (options_declaration)


State 38

   54 expect_error: "integer constant" .
   55             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 54 (expect_error)


State 39

   51 expect_declaration: "expect" expect_list .
   53 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 51 (expect_declaration)


State 40

   52 expect_list: expect_error .

    $default  reduce using rule 52 (expect_list)


State 41

   43 require_module_name: "name" .

    $default  reduce using rule 43 (require_module_name)


State 42

   44 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 82


State 43

   45 require_module_name: require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"
   47 require_module: require_module_name . is_public_module
   48               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 87


State 44

   42 require_declaration: "require" require_module .

    $default  reduce using rule 42 (require_declaration)


State 45

  578 optional_public_or_private_alias: "public" .

    $default  reduce using rule 578 (optional_public_or_private_alias)


State 46

  577 optional_public_or_private_alias: "private" .

    $default  reduce using rule 577 (optional_public_or_private_alias)


State 47

  580 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 88


State 48

  581 alias_declaration: "typedef" single_alias . ';'

    ';'  shift, and go to state 89


State 49

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 50

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 51

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 557 (optional_shared)

    optional_shared  go to state 90


State 52

  755 bitfield_alias_declaration: "bitfield" $@81 . optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 576 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91


State 53

  745 tuple_alias_declaration: "tuple" $@73 . optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 576 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 54

  750 variant_alias_declaration: "variant" $@77 . optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 576 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 55

  266 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 94


State 56

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"

    "::"  shift, and go to state 95

    $default  reduce using rule 264 (name_in_namespace)


State 57

   40 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 39 ($@1)

    $@1  go to state 96


State 58

  116 annotation_declaration_name: "require" .

    $default  reduce using rule 116 (annotation_declaration_name)


State 59

  117 annotation_declaration_name: "private" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 60

  126 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 61

  121 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 62

  125 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 99
    name_in_namespace             go to state 67


State 63

  118 annotation_declaration_basic: annotation_declaration_name .
  119                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 100

    $default  reduce using rule 118 (annotation_declaration_basic)


State 64

  120 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 120 (annotation_declaration)


State 65

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  127 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 127 (annotation_list)


State 66

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 104
    ']'  shift, and go to state 105


State 67

  115 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 115 (annotation_declaration_name)


State 68

   20 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 20 (top_level_reader_macro)


State 69

    9 program: program options_declaration ';' .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration ';' .

    $default  reduce using rule 8 (program)


State 71

  604 class_or_struct: "struct" .

    $default  reduce using rule 604 (class_or_struct)


State 72

  603 class_or_struct: "class" .

    $default  reduce using rule 603 (class_or_struct)


State 73

  221 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 222 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 108
    function_declaration                 go to state 109


State 74

  597 enum_declaration: optional_annotation_list "enum" . $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 594 ($@39)

    $@39  go to state 110


State 75

  612 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 605 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 76

  558 optional_shared: "shared" .

    $default  reduce using rule 558 (optional_shared)


State 77

  566 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  568           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 559 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 78

  103 annotation_argument: annotation_argument_name '=' . string_constant
  104                    | annotation_argument_name '=' . "name"
  105                    | annotation_argument_name '=' . "integer constant"
  106                    | annotation_argument_name '=' . "floating point constant"
  107                    | annotation_argument_name '=' . "true"
  108                    | annotation_argument_name '=' . "false"
  110                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 79

  112 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 125


State 80

   55 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 81

   53 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 127


State 82

   44 require_module_name: '%' require_module_name .
   45                    | require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"

    '.'  shift, and go to state 86

    $default  reduce using rule 44 (require_module_name)


State 83

   48 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 84

   50 is_public_module: "public" .

    $default  reduce using rule 50 (is_public_module)


State 85

   46 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 129


State 86

   45 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 130


State 87

   47 require_module: require_module_name is_public_module .

    $default  reduce using rule 47 (require_module)


State 88

  580 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 579 ($@38)

    $@38  go to state 131


State 89

  581 alias_declaration: "typedef" single_alias ';' .

    $default  reduce using rule 581 (alias_declaration)


State 90

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 132
    "private"  shift, and go to state 133

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 134


State 91

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias . "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    "name"  shift, and go to state 135


State 92

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias . "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    "name"  shift, and go to state 136


State 93

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias . "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 137


State 94

  266 name_in_namespace: "::" "name" .

    $default  reduce using rule 266 (name_in_namespace)


State 95

  265 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 138


State 96

   40 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 139

    reader_character_sequence  go to state 140


State 97

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  126                       | "|>" annotation_declaration .

    $default  reduce using rule 126 (annotation_declaration)


State 98

  121 annotation_declaration: '!' annotation_declaration .
  122                       | annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 121 (annotation_declaration)


State 99

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  125                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103
    ')'   shift, and go to state 141


State 100

  119 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 142


State 101

  122 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 102

  123 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 103

  124 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 104

  128 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 105

  130 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 130 (optional_annotation_list)


State 106

  224 optional_public_or_private_function: "public" .

    $default  reduce using rule 224 (optional_public_or_private_function)


State 107

  223 optional_public_or_private_function: "private" .

    $default  reduce using rule 223 (optional_public_or_private_function)


State 108

  227 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 226 ($@6)

    $@6  go to state 147


State 109

  221 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 221 (global_function_declaration)


State 110

  597 enum_declaration: optional_annotation_list "enum" $@39 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "public"   shift, and go to state 148
    "private"  shift, and go to state 149

    $default  reduce using rule 582 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 150


State 111

  607 optional_public_or_private_structure: "public" .

    $default  reduce using rule 607 (optional_public_or_private_structure)


State 112

  606 optional_public_or_private_structure: "private" .

    $default  reduce using rule 606 (optional_public_or_private_structure)


State 113

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@42 structure_name $@43 optional_struct_variable_declaration_list

    $default  reduce using rule 610 ($@42)

    $@42  go to state 151


State 114

  561 optional_public_or_private_variable: "public" .

    $default  reduce using rule 561 (optional_public_or_private_variable)


State 115

  560 optional_public_or_private_variable: "private" .

    $default  reduce using rule 560 (optional_public_or_private_variable)


State 116

  566 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  568           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 152

    $default  reduce using rule 567 ($@37)

    $@37  go to state 153


State 117

  107 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 107 (annotation_argument)


State 118

  108 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 108 (annotation_argument)


State 119

  105 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 105 (annotation_argument)


State 120

  106 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 106 (annotation_argument)


State 121

  104 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 104 (annotation_argument)


State 122

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 156

    character_sequence  go to state 157


State 123

  110 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 163
    annotation_argument_value       go to state 164
    annotation_argument_value_list  go to state 165


State 124

  103 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 103 (annotation_argument)


State 125

  112 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 112 (annotation_argument_list)


State 126

   55 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 55 (expect_error)


State 127

   53 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 53 (expect_list)


State 128

   48 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 166


State 129

   46 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 46 (require_module_name)


State 130

   45 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 45 (require_module_name)


State 131

  580 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 167


State 132

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 133

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 134

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 135

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" . optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    "emitted ,"  shift, and go to state 168

    $default  reduce using rule 592 (optional_emit_commas)

    emit_commas           go to state 169
    optional_emit_commas  go to state 170


State 136

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" . optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 173


State 137

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" . optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 174


State 138

  265 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 265 (name_in_namespace)


State 139

   37 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 37 (reader_character_sequence)


State 140

   38 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 175

    $default  reduce using rule 40 (expr_reader)


State 141

  125 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 125 (annotation_declaration)


State 142

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 176


State 143

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration .
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 122 (annotation_declaration)


State 144

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration .
  124                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 101
    "^^"  shift, and go to state 103

    $default  reduce using rule 123 (annotation_declaration)


State 145

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 101

    $default  reduce using rule 124 (annotation_declaration)


State 146

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  128 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 128 (annotation_list)


State 147

  227 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 207


State 148

  584 optional_public_or_private_enum: "public" .

    $default  reduce using rule 584 (optional_public_or_private_enum)


State 149

  583 optional_public_or_private_enum: "private" .

    $default  reduce using rule 583 (optional_public_or_private_enum)


State 150

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 208

    enum_name  go to state 209


State 151

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 . structure_name $@43 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 210

    $default  reduce using rule 600 (optional_sealed)

    optional_sealed  go to state 211
    structure_name   go to state 212


State 152

  566 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 562 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 213


State 153

  568 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 214

    $default  reduce using rule 492 (optional_field_annotation)

    metadata_argument_list     go to state 215
    optional_field_annotation  go to state 216


State 154

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 155

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 156

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 157

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 217
    STRING_CHARACTER_ESC  shift, and go to state 218
    "end of the string"   shift, and go to state 219


State 158

   96 annotation_argument_value: "true" .

    $default  reduce using rule 96 (annotation_argument_value)


State 159

   97 annotation_argument_value: "false" .

    $default  reduce using rule 97 (annotation_argument_value)


State 160

   94 annotation_argument_value: "integer constant" .

    $default  reduce using rule 94 (annotation_argument_value)


State 161

   95 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 95 (annotation_argument_value)


State 162

   93 annotation_argument_value: "name" .

    $default  reduce using rule 93 (annotation_argument_value)


State 163

   92 annotation_argument_value: string_constant .

    $default  reduce using rule 92 (annotation_argument_value)


State 164

   98 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 98 (annotation_argument_value_list)


State 165

   99 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 220
    ')'  shift, and go to state 221


State 166

   48 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 48 (require_module)


State 167

  580 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 270


State 168

  590 emit_commas: "emitted ," .

    $default  reduce using rule 590 (emit_commas)


State 169

  591 emit_commas: emit_commas . "emitted ,"
  593 optional_emit_commas: emit_commas .

    "emitted ,"  shift, and go to state 271

    $default  reduce using rule 593 (optional_emit_commas)


State 170

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas . $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 752 ($@82)

    $@82  go to state 272


State 171

   61 emit_semis: "emitted ;" .

    $default  reduce using rule 61 (emit_semis)


State 172

   62 emit_semis: emit_semis . "emitted ;"
   64 optional_emit_semis: emit_semis .

    "emitted ;"  shift, and go to state 273

    $default  reduce using rule 64 (optional_emit_semis)


State 173

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis . $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 742 ($@74)

    $@74  go to state 274


State 174

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis . $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 747 ($@78)

    $@78  go to state 275


State 175

   38 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 176

  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 119 (annotation_declaration_basic)


State 177

  137 function_name: "operator" . '!'
  138              | "operator" . '~'
  139              | "operator" . "+="
  140              | "operator" . "-="
  141              | "operator" . "*="
  142              | "operator" . "/="
  143              | "operator" . "%="
  144              | "operator" . "&="
  145              | "operator" . "|="
  146              | "operator" . "^="
  147              | "operator" . "&&="
  148              | "operator" . "||="
  149              | "operator" . "^^="
  150              | "operator" . "&&"
  151              | "operator" . "||"
  152              | "operator" . "^^"
  153              | "operator" . '+'
  154              | "operator" . '-'
  155              | "operator" . '*'
  156              | "operator" . '/'
  157              | "operator" . '%'
  158              | "operator" . '<'
  159              | "operator" . '>'
  160              | "operator" . ".."
  161              | "operator" . "=="
  162              | "operator" . "!="
  163              | "operator" . "<="
  164              | "operator" . ">="
  165              | "operator" . '&'
  166              | "operator" . '|'
  167              | "operator" . '^'
  170              | "operator" . "++"
  171              | "operator" . "--"
  172              | "operator" . "<<"
  173              | "operator" . ">>"
  174              | "operator" . "<<="
  175              | "operator" . ">>="
  176              | "operator" . "<<<"
  177              | "operator" . ">>>"
  178              | "operator" . "<<<="
  179              | "operator" . ">>>="
  180              | "operator" . '[' ']'
  181              | "operator" . "?[" ']'
  182              | "operator" . '.'
  183              | "operator" . "?."
  184              | "operator" . '.' "name"
  185              | "operator" . '.' "name" ":="
  186              | "operator" . "?." "name"
  187              | "operator" . ":="
  188              | "operator" . "delete"
  189              | "operator" . "??"
  190              | "operator" . "is"
  191              | "operator" . "as"
  192              | "operator" . "is" "name"
  193              | "operator" . "as" "name"
  194              | "operator" . '?' "as"
  195              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 276
    "as"      shift, and go to state 277
    "delete"  shift, and go to state 278
    "+="      shift, and go to state 279
    "-="      shift, and go to state 280
    "/="      shift, and go to state 281
    "*="      shift, and go to state 282
    "%="      shift, and go to state 283
    "&="      shift, and go to state 284
    "|="      shift, and go to state 285
    "^="      shift, and go to state 286
    "<<"      shift, and go to state 287
    ">>"      shift, and go to state 288
    "++"      shift, and go to state 289
    "--"      shift, and go to state 290
    "<="      shift, and go to state 291
    "<<="     shift, and go to state 292
    ">>="     shift, and go to state 293
    ">="      shift, and go to state 294
    "=="      shift, and go to state 295
    "!="      shift, and go to state 296
    "??"      shift, and go to state 297
    "?."      shift, and go to state 298
    "?["      shift, and go to state 299
    ":="      shift, and go to state 300
    "<<<"     shift, and go to state 301
    ">>>"     shift, and go to state 302
    "<<<="    shift, and go to state 303
    ">>>="    shift, and go to state 304
    "&&"      shift, and go to state 305
    "||"      shift, and go to state 306
    "^^"      shift, and go to state 307
    "&&="     shift, and go to state 308
    "||="     shift, and go to state 309
    "^^="     shift, and go to state 310
    ".."      shift, and go to state 311
    '?'       shift, and go to state 312
    '|'       shift, and go to state 313
    '^'       shift, and go to state 314
    '&'       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    '-'       shift, and go to state 318
    '+'       shift, and go to state 319
    '*'       shift, and go to state 320
    '/'       shift, and go to state 321
    '%'       shift, and go to state 322
    '~'       shift, and go to state 323
    '!'       shift, and go to state 324
    '.'       shift, and go to state 325
    '['       shift, and go to state 326


State 178

  196 function_name: "bool" .

    $default  reduce using rule 196 (function_name)


State 179

  197 function_name: "string" .

    $default  reduce using rule 197 (function_name)


State 180

  198 function_name: "int" .

    $default  reduce using rule 198 (function_name)


State 181

  199 function_name: "int2" .

    $default  reduce using rule 199 (function_name)


State 182

  200 function_name: "int3" .

    $default  reduce using rule 200 (function_name)


State 183

  201 function_name: "int4" .

    $default  reduce using rule 201 (function_name)


State 184

  202 function_name: "uint" .

    $default  reduce using rule 202 (function_name)


State 185

  203 function_name: "uint2" .

    $default  reduce using rule 203 (function_name)


State 186

  204 function_name: "uint3" .

    $default  reduce using rule 204 (function_name)


State 187

  205 function_name: "uint4" .

    $default  reduce using rule 205 (function_name)


State 188

  206 function_name: "float" .

    $default  reduce using rule 206 (function_name)


State 189

  207 function_name: "float2" .

    $default  reduce using rule 207 (function_name)


State 190

  208 function_name: "float3" .

    $default  reduce using rule 208 (function_name)


State 191

  209 function_name: "float4" .

    $default  reduce using rule 209 (function_name)


State 192

  210 function_name: "range" .

    $default  reduce using rule 210 (function_name)


State 193

  211 function_name: "urange" .

    $default  reduce using rule 211 (function_name)


State 194

  212 function_name: "range64" .

    $default  reduce using rule 212 (function_name)


State 195

  213 function_name: "urange64" .

    $default  reduce using rule 213 (function_name)


State 196

  214 function_name: "int64" .

    $default  reduce using rule 214 (function_name)


State 197

  215 function_name: "uint64" .

    $default  reduce using rule 215 (function_name)


State 198

  216 function_name: "double" .

    $default  reduce using rule 216 (function_name)


State 199

  217 function_name: "int8" .

    $default  reduce using rule 217 (function_name)


State 200

  218 function_name: "uint8" .

    $default  reduce using rule 218 (function_name)


State 201

  219 function_name: "int16" .

    $default  reduce using rule 219 (function_name)


State 202

  220 function_name: "uint16" .

    $default  reduce using rule 220 (function_name)


State 203

  168 function_name: "++" . "operator"

    "operator"  shift, and go to state 327


State 204

  169 function_name: "--" . "operator"

    "operator"  shift, and go to state 328


State 205

  136 function_name: "name" .

    $default  reduce using rule 136 (function_name)


State 206

  225 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 330


State 207

  227 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 331
    $@9               go to state 332


State 208

  585 enum_name: "name" .

    $default  reduce using rule 585 (enum_name)


State 209

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    ':'  shift, and go to state 333

    $default  reduce using rule 586 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 334


State 210

  601 optional_sealed: "sealed" .

    $default  reduce using rule 601 (optional_sealed)


State 211

  602 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 335


State 212

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name . $@43 optional_struct_variable_declaration_list

    $default  reduce using rule 611 ($@43)

    $@43  go to state 336


State 213

  563 global_variable_declaration_list: global_variable_declaration_list . ';'
  565                                 | global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  566 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    ';'  shift, and go to state 337
    '}'  shift, and go to state 338

    $default  reduce using rule 564 ($@36)

    $@36  go to state 339


State 214

  113 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 340


State 215

  114 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  493 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 341

    $default  reduce using rule 493 (optional_field_annotation)


State 216

  568 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 342

    global_let_variable_name_with_pos_list  go to state 343
    global_let_variable_declaration         go to state 344


State 217

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 218

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 219

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 220

   99 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 122

    string_constant            go to state 163
    annotation_argument_value  go to state 345


State 221

  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 110 (annotation_argument)


State 222

  681 type_declaration_no_options_no_dim: "type" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 346


State 223

  704 type_declaration_no_options_no_dim: "array" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 347


State 224

  707 type_declaration_no_options_no_dim: "table" . '<' $@53 table_type_pair '>' $@54

    '<'  shift, and go to state 348


State 225

  682 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 349


State 226

  710 type_declaration_no_options_no_dim: "iterator" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 350


State 227

  700 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 351


State 228

  618 basic_type_declaration: "bool" .

    $default  reduce using rule 618 (basic_type_declaration)


State 229

  638 basic_type_declaration: "void" .

    $default  reduce using rule 638 (basic_type_declaration)


State 230

  619 basic_type_declaration: "string" .

    $default  reduce using rule 619 (basic_type_declaration)


State 231

  654 auto_type_declaration: "auto" .
  655                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 352

    $default  reduce using rule 654 (auto_type_declaration)


State 232

  620 basic_type_declaration: "int" .

    $default  reduce using rule 620 (basic_type_declaration)


State 233

  624 basic_type_declaration: "int2" .

    $default  reduce using rule 624 (basic_type_declaration)


State 234

  625 basic_type_declaration: "int3" .

    $default  reduce using rule 625 (basic_type_declaration)


State 235

  626 basic_type_declaration: "int4" .

    $default  reduce using rule 626 (basic_type_declaration)


State 236

  627 basic_type_declaration: "uint" .

    $default  reduce using rule 627 (basic_type_declaration)


State 237

  644 basic_type_declaration: "bitfield" .
  664 bitfield_type_declaration: "bitfield" . '<' $@44 bitfield_bits '>' $@45

    '<'  shift, and go to state 353

    $default  reduce using rule 644 (basic_type_declaration)


State 238

  631 basic_type_declaration: "uint2" .

    $default  reduce using rule 631 (basic_type_declaration)


State 239

  632 basic_type_declaration: "uint3" .

    $default  reduce using rule 632 (basic_type_declaration)


State 240

  633 basic_type_declaration: "uint4" .

    $default  reduce using rule 633 (basic_type_declaration)


State 241

  634 basic_type_declaration: "float" .

    $default  reduce using rule 634 (basic_type_declaration)


State 242

  635 basic_type_declaration: "float2" .

    $default  reduce using rule 635 (basic_type_declaration)


State 243

  636 basic_type_declaration: "float3" .

    $default  reduce using rule 636 (basic_type_declaration)


State 244

  637 basic_type_declaration: "float4" .

    $default  reduce using rule 637 (basic_type_declaration)


State 245

  639 basic_type_declaration: "range" .

    $default  reduce using rule 639 (basic_type_declaration)


State 246

  640 basic_type_declaration: "urange" .

    $default  reduce using rule 640 (basic_type_declaration)


State 247

  641 basic_type_declaration: "range64" .

    $default  reduce using rule 641 (basic_type_declaration)


State 248

  642 basic_type_declaration: "urange64" .

    $default  reduce using rule 642 (basic_type_declaration)


State 249

  711 type_declaration_no_options_no_dim: "block" .
  714                                   | "block" . '<' $@57 type_declaration '>' $@58
  717                                   | "block" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 354

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 250

  623 basic_type_declaration: "int64" .

    $default  reduce using rule 623 (basic_type_declaration)


State 251

  630 basic_type_declaration: "uint64" .

    $default  reduce using rule 630 (basic_type_declaration)


State 252

  643 basic_type_declaration: "double" .

    $default  reduce using rule 643 (basic_type_declaration)


State 253

  718 type_declaration_no_options_no_dim: "function" .
  721                                   | "function" . '<' $@61 type_declaration '>' $@62
  724                                   | "function" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 355

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 254

  725 type_declaration_no_options_no_dim: "lambda" .
  728                                   | "lambda" . '<' $@65 type_declaration '>' $@66
  731                                   | "lambda" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 356

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 255

  621 basic_type_declaration: "int8" .

    $default  reduce using rule 621 (basic_type_declaration)


State 256

  628 basic_type_declaration: "uint8" .

    $default  reduce using rule 628 (basic_type_declaration)


State 257

  622 basic_type_declaration: "int16" .

    $default  reduce using rule 622 (basic_type_declaration)


State 258

  629 basic_type_declaration: "uint16" .

    $default  reduce using rule 629 (basic_type_declaration)


State 259

  734 type_declaration_no_options_no_dim: "tuple" . '<' $@69 tuple_type_list '>' $@70

    '<'  shift, and go to state 357


State 260

  737 type_declaration_no_options_no_dim: "variant" . '<' $@71 variant_type_list '>' $@72

    '<'  shift, and go to state 358


State 261

  656 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 359


State 262

  683 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  685                                   | '$' . name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 360


State 263

  653 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 653 (structure_type_declaration)


State 264

  675 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 265

  678 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 266

  676 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 267

  677 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 268

  738 type_declaration: type_declaration_no_options .

    $default  reduce using rule 738 (type_declaration)


State 269

  673 type_declaration_no_options: type_declaration_no_options_no_dim .
  674                            | type_declaration_no_options_no_dim . dim_list
  686 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  687                                   | type_declaration_no_options_no_dim . "explicit"
  688                                   | type_declaration_no_options_no_dim . "const"
  689                                   | type_declaration_no_options_no_dim . '-' "const"
  690                                   | type_declaration_no_options_no_dim . '&'
  691                                   | type_declaration_no_options_no_dim . '-' '&'
  692                                   | type_declaration_no_options_no_dim . '#'
  693                                   | type_declaration_no_options_no_dim . "implicit"
  694                                   | type_declaration_no_options_no_dim . '-' '#'
  695                                   | type_declaration_no_options_no_dim . "==" "const"
  696                                   | type_declaration_no_options_no_dim . "==" '&'
  697                                   | type_declaration_no_options_no_dim . '?'
  701                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 361
    "implicit"  shift, and go to state 362
    "explicit"  shift, and go to state 363
    "=="        shift, and go to state 364
    "??"        shift, and go to state 365
    '?'         shift, and go to state 366
    '&'         shift, and go to state 367
    '-'         shift, and go to state 368
    '['         shift, and go to state 369
    '#'         shift, and go to state 370

    $default  reduce using rule 673 (type_declaration_no_options)

    dim_list  go to state 371


State 270

  580 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 580 (single_alias)


State 271

  591 emit_commas: emit_commas "emitted ," .

    $default  reduce using rule 591 (emit_commas)


State 272

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 . '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    '{'  shift, and go to state 373


State 273

   62 emit_semis: emit_semis "emitted ;" .

    $default  reduce using rule 62 (emit_semis)


State 274

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 . '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    '{'  shift, and go to state 374


State 275

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 . '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    '{'  shift, and go to state 375


State 276

  190 function_name: "operator" "is" .
  192              | "operator" "is" . "name"

    "name"  shift, and go to state 376

    $default  reduce using rule 190 (function_name)


State 277

  191 function_name: "operator" "as" .
  193              | "operator" "as" . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 191 (function_name)


State 278

  188 function_name: "operator" "delete" .

    $default  reduce using rule 188 (function_name)


State 279

  139 function_name: "operator" "+=" .

    $default  reduce using rule 139 (function_name)


State 280

  140 function_name: "operator" "-=" .

    $default  reduce using rule 140 (function_name)


State 281

  142 function_name: "operator" "/=" .

    $default  reduce using rule 142 (function_name)


State 282

  141 function_name: "operator" "*=" .

    $default  reduce using rule 141 (function_name)


State 283

  143 function_name: "operator" "%=" .

    $default  reduce using rule 143 (function_name)


State 284

  144 function_name: "operator" "&=" .

    $default  reduce using rule 144 (function_name)


State 285

  145 function_name: "operator" "|=" .

    $default  reduce using rule 145 (function_name)


State 286

  146 function_name: "operator" "^=" .

    $default  reduce using rule 146 (function_name)


State 287

  172 function_name: "operator" "<<" .

    $default  reduce using rule 172 (function_name)


State 288

  173 function_name: "operator" ">>" .

    $default  reduce using rule 173 (function_name)


State 289

  170 function_name: "operator" "++" .

    $default  reduce using rule 170 (function_name)


State 290

  171 function_name: "operator" "--" .

    $default  reduce using rule 171 (function_name)


State 291

  163 function_name: "operator" "<=" .

    $default  reduce using rule 163 (function_name)


State 292

  174 function_name: "operator" "<<=" .

    $default  reduce using rule 174 (function_name)


State 293

  175 function_name: "operator" ">>=" .

    $default  reduce using rule 175 (function_name)


State 294

  164 function_name: "operator" ">=" .

    $default  reduce using rule 164 (function_name)


State 295

  161 function_name: "operator" "==" .

    $default  reduce using rule 161 (function_name)


State 296

  162 function_name: "operator" "!=" .

    $default  reduce using rule 162 (function_name)


State 297

  189 function_name: "operator" "??" .

    $default  reduce using rule 189 (function_name)


State 298

  183 function_name: "operator" "?." .
  186              | "operator" "?." . "name"

    "name"  shift, and go to state 378

    $default  reduce using rule 183 (function_name)


State 299

  181 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 379


State 300

  187 function_name: "operator" ":=" .

    $default  reduce using rule 187 (function_name)


State 301

  176 function_name: "operator" "<<<" .

    $default  reduce using rule 176 (function_name)


State 302

  177 function_name: "operator" ">>>" .

    $default  reduce using rule 177 (function_name)


State 303

  178 function_name: "operator" "<<<=" .

    $default  reduce using rule 178 (function_name)


State 304

  179 function_name: "operator" ">>>=" .

    $default  reduce using rule 179 (function_name)


State 305

  150 function_name: "operator" "&&" .

    $default  reduce using rule 150 (function_name)


State 306

  151 function_name: "operator" "||" .

    $default  reduce using rule 151 (function_name)


State 307

  152 function_name: "operator" "^^" .

    $default  reduce using rule 152 (function_name)


State 308

  147 function_name: "operator" "&&=" .

    $default  reduce using rule 147 (function_name)


State 309

  148 function_name: "operator" "||=" .

    $default  reduce using rule 148 (function_name)


State 310

  149 function_name: "operator" "^^=" .

    $default  reduce using rule 149 (function_name)


State 311

  160 function_name: "operator" ".." .

    $default  reduce using rule 160 (function_name)


State 312

  194 function_name: "operator" '?' . "as"
  195              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 380


State 313

  166 function_name: "operator" '|' .

    $default  reduce using rule 166 (function_name)


State 314

  167 function_name: "operator" '^' .

    $default  reduce using rule 167 (function_name)


State 315

  165 function_name: "operator" '&' .

    $default  reduce using rule 165 (function_name)


State 316

  158 function_name: "operator" '<' .

    $default  reduce using rule 158 (function_name)


State 317

  159 function_name: "operator" '>' .

    $default  reduce using rule 159 (function_name)


State 318

  154 function_name: "operator" '-' .

    $default  reduce using rule 154 (function_name)


State 319

  153 function_name: "operator" '+' .

    $default  reduce using rule 153 (function_name)


State 320

  155 function_name: "operator" '*' .

    $default  reduce using rule 155 (function_name)


State 321

  156 function_name: "operator" '/' .

    $default  reduce using rule 156 (function_name)


State 322

  157 function_name: "operator" '%' .

    $default  reduce using rule 157 (function_name)


State 323

  138 function_name: "operator" '~' .

    $default  reduce using rule 138 (function_name)


State 324

  137 function_name: "operator" '!' .

    $default  reduce using rule 137 (function_name)


State 325

  182 function_name: "operator" '.' .
  184              | "operator" '.' . "name"
  185              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 381

    $default  reduce using rule 182 (function_name)


State 326

  180 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 382


State 327

  168 function_name: "++" "operator" .

    $default  reduce using rule 168 (function_name)


State 328

  169 function_name: "--" "operator" .

    $default  reduce using rule 169 (function_name)


State 329

  132 optional_function_argument_list: '(' . ')'
  133                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 383
    ')'   shift, and go to state 384
    '@'   shift, and go to state 214

    $default  reduce using rule 492 (optional_field_annotation)

    metadata_argument_list         go to state 215
    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 386
    function_argument_list         go to state 387


State 330

  225 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 389


State 331

  227 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 227 (function_declaration)


State 332

  234 expression_block: $@9 . '{' expressions $@10 '}' expression_block_finally

    '{'  shift, and go to state 390


State 333

  587 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 391
    "uint"    shift, and go to state 392
    "int64"   shift, and go to state 393
    "uint64"  shift, and go to state 394
    "int8"    shift, and go to state 395
    "uint8"   shift, and go to state 396
    "int16"   shift, and go to state 397
    "uint16"  shift, and go to state 398

    enum_basic_type_declaration  go to state 399


State 334

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "emitted ,"  shift, and go to state 168

    $default  reduce using rule 592 (optional_emit_commas)

    emit_commas           go to state 169
    optional_emit_commas  go to state 400


State 335

  602 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 401

    $default  reduce using rule 598 (optional_structure_parent)

    optional_structure_parent  go to state 402


State 336

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 403

    $default  reduce using rule 608 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 404


State 337

  563 global_variable_declaration_list: global_variable_declaration_list ';' .

    $default  reduce using rule 563 (global_variable_declaration_list)


State 338

  566 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 566 (global_let)


State 339

  565 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 214

    $default  reduce using rule 492 (optional_field_annotation)

    metadata_argument_list     go to state 215
    optional_field_annotation  go to state 405


State 340

  113 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 113 (metadata_argument_list)


State 341

  114 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 406


State 342

  546 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 546 (global_let_variable_name_with_pos_list)


State 343

  547 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  554 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  555                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  556                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 407
    ':'  shift, and go to state 408
    '&'  shift, and go to state 409

    $default  reduce using rule 539 (optional_ref)

    optional_ref  go to state 410


State 344

  568 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 568 (global_let)


State 345

   99 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 99 (annotation_argument_value_list)


State 346

  681 type_declaration_no_options_no_dim: "type" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 679 ($@46)

    $@46  go to state 411


State 347

  704 type_declaration_no_options_no_dim: "array" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 702 ($@51)

    $@51  go to state 412


State 348

  707 type_declaration_no_options_no_dim: "table" '<' . $@53 table_type_pair '>' $@54

    $default  reduce using rule 705 ($@53)

    $@53  go to state 413


State 349

  682 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 479
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 350

  710 type_declaration_no_options_no_dim: "iterator" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 708 ($@55)

    $@55  go to state 489


State 351

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 698 ($@49)

    $@49  go to state 490


State 352

  655 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 491


State 353

  664 bitfield_type_declaration: "bitfield" '<' . $@44 bitfield_bits '>' $@45

    $default  reduce using rule 662 ($@44)

    $@44  go to state 492


State 354

  714 type_declaration_no_options_no_dim: "block" '<' . $@57 type_declaration '>' $@58
  717                                   | "block" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 715 ($@59)
    '>'       reduce using rule 715 ($@59)
    '('       reduce using rule 715 ($@59)
    $default  reduce using rule 712 ($@57)

    $@57  go to state 493
    $@59  go to state 494


State 355

  721 type_declaration_no_options_no_dim: "function" '<' . $@61 type_declaration '>' $@62
  724                                   | "function" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 722 ($@63)
    '>'       reduce using rule 722 ($@63)
    '('       reduce using rule 722 ($@63)
    $default  reduce using rule 719 ($@61)

    $@61  go to state 495
    $@63  go to state 496


State 356

  728 type_declaration_no_options_no_dim: "lambda" '<' . $@65 type_declaration '>' $@66
  731                                   | "lambda" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 729 ($@67)
    '>'       reduce using rule 729 ($@67)
    '('       reduce using rule 729 ($@67)
    $default  reduce using rule 726 ($@65)

    $@65  go to state 497
    $@67  go to state 498


State 357

  734 type_declaration_no_options_no_dim: "tuple" '<' . $@69 tuple_type_list '>' $@70

    $default  reduce using rule 732 ($@69)

    $@69  go to state 499


State 358

  737 type_declaration_no_options_no_dim: "variant" '<' . $@71 variant_type_list '>' $@72

    $default  reduce using rule 735 ($@71)

    $@71  go to state 500


State 359

  656 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 501
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 360

  683 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  685                                   | '$' name_in_namespace . '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 502
    '('  shift, and go to state 503


State 361

  688 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 362

  693 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 693 (type_declaration_no_options_no_dim)


State 363

  687 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 364

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  696                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 504
    '&'      shift, and go to state 505


State 365

  701 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 366

  697 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 367

  690 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 368

  686 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  689                                   | type_declaration_no_options_no_dim '-' . "const"
  691                                   | type_declaration_no_options_no_dim '-' . '&'
  694                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 506
    '&'      shift, and go to state 507
    '['      shift, and go to state 508
    '#'      shift, and go to state 509


State 369

  669 dim_list: '[' . expr ']'
  670         | '[' . ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    ']'                               shift, and go to state 510
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 511
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 370

  692 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 692 (type_declaration_no_options_no_dim)


State 371

  671 dim_list: dim_list . '[' expr ']'
  672         | dim_list . '[' ']'
  674 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 512

    $default  reduce using rule 674 (type_declaration_no_options)


State 372

  739 type_declaration: type_declaration '|' . type_declaration_no_options
  740                 | type_declaration '|' . '#'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262
    '#'          shift, and go to state 513

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 514
    type_declaration_no_options_no_dim  go to state 269


State 373

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' . $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 753 ($@83)

    $@83  go to state 515


State 374

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' . $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 743 ($@75)

    $@75  go to state 516


State 375

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' . $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 748 ($@79)

    $@79  go to state 517


State 376

  192 function_name: "operator" "is" "name" .

    $default  reduce using rule 192 (function_name)


State 377

  193 function_name: "operator" "as" "name" .

    $default  reduce using rule 193 (function_name)


State 378

  186 function_name: "operator" "?." "name" .

    $default  reduce using rule 186 (function_name)


State 379

  181 function_name: "operator" "?[" ']' .

    $default  reduce using rule 181 (function_name)


State 380

  194 function_name: "operator" '?' "as" .
  195              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 518

    $default  reduce using rule 194 (function_name)


State 381

  184 function_name: "operator" '.' "name" .
  185              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 519

    $default  reduce using rule 184 (function_name)


State 382

  180 function_name: "operator" '[' ']' .

    $default  reduce using rule 180 (function_name)


State 383

  513 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 520


State 384

  132 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 132 (optional_function_argument_list)


State 385

  512 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 521
    "var"  shift, and go to state 522

    $default  reduce using rule 289 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 523


State 386

  514 function_argument_list: function_argument_declaration .

    $default  reduce using rule 514 (function_argument_list)


State 387

  133 optional_function_argument_list: '(' function_argument_list . ')'
  515 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 524
    ';'  shift, and go to state 525


State 388

  135 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 526


State 389

  225 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 225 (function_declaration_header)


State 390

  234 expression_block: $@9 '{' . expressions $@10 '}' expression_block_finally

    $default  reduce using rule 255 (expressions)

    expressions  go to state 527


State 391

  645 enum_basic_type_declaration: "int" .

    $default  reduce using rule 645 (enum_basic_type_declaration)


State 392

  648 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 393

  651 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 651 (enum_basic_type_declaration)


State 394

  652 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 652 (enum_basic_type_declaration)


State 395

  646 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 646 (enum_basic_type_declaration)


State 396

  649 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 397

  647 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 647 (enum_basic_type_declaration)


State 398

  650 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 399

  587 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 587 (optional_enum_basic_type_declaration)


State 400

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@40 enum_list optional_commas $@41 '}'

    '{'  shift, and go to state 528


State 401

  599 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 529


State 402

  602 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 602 (structure_name)


State 403

  609 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 505 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 530


State 404

  612 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list .

    $default  reduce using rule 612 (structure_declaration)


State 405

  565 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532

    let_variable_name_with_pos_list  go to state 533
    let_variable_declaration         go to state 534


State 406

  114 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 114 (metadata_argument_list)


State 407

  547 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 535


State 408

  554 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  555                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 536
    type_declaration_no_options_no_dim  go to state 269


State 409

  540 optional_ref: '&' .

    $default  reduce using rule 540 (optional_ref)


State 410

  556 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 540


State 411

  681 type_declaration_no_options_no_dim: "type" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 541


State 412

  704 type_declaration_no_options_no_dim: "array" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 542


State 413

  707 type_declaration_no_options_no_dim: "table" '<' $@53 . table_type_pair '>' $@54

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    table_type_pair                     go to state 543
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 544


State 414

  781 make_struct_decl: "struct" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 545


State 415

  784 make_struct_decl: "class" . '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 546


State 416

  397 expr: "true" .

    $default  reduce using rule 397 (expr)


State 417

  398 expr: "false" .

    $default  reduce using rule 398 (expr)


State 418

  273 expr_new: "new" . new_type_declaration
  274         | "new" . new_type_declaration '(' use_initializer ')'
  275         | "new" . new_type_declaration '(' expr_list ')'
  276         | "new" . new_type_declaration '(' make_struct_single ')'
  277         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  278         | "new" . make_decl

    "struct"       shift, and go to state 414
    "class"        shift, and go to state 415
    "array"        shift, and go to state 421
    "table"        shift, and go to state 423
    "fixed_array"  shift, and go to state 430
    "default"      shift, and go to state 431
    "tuple"        shift, and go to state 433
    "variant"      shift, and go to state 434
    "::"           shift, and go to state 55
    "name"         shift, and go to state 56
    '<'            shift, and go to state 547
    '['            shift, and go to state 458
    '{'            shift, and go to state 462

    name_in_namespace           go to state 263
    new_type_declaration        go to state 548
    structure_type_declaration  go to state 549
    make_decl                   go to state 550
    make_struct_decl            go to state 484
    make_tuple_call             go to state 485
    make_dim_decl               go to state 486
    make_table_decl             go to state 487
    array_comprehension         go to state 488


State 419

  313 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  314               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  315               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 551


State 420

  312 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 552


State 421

  800 make_dim_decl: "array" . "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'
  803              | "array" . "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'
  806              | "array" . "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'
  807              | "array" . '(' expr_list optional_comma ')'
  810              | "array" . '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    "struct"   shift, and go to state 553
    "tuple"    shift, and go to state 554
    "variant"  shift, and go to state 555
    '<'        shift, and go to state 556
    '('        shift, and go to state 557


State 422

  391 expr: "null" .

    $default  reduce using rule 391 (expr)


State 423

  818 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  819                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  820                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 558
    '('  shift, and go to state 559


State 424

  441 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 560


State 425

  303 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 561


State 426

  306 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 562


State 427

  442 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 563


State 428

  309 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 564


State 429

  472 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 565


State 430

  811 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  814              | "fixed_array" . '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 566
    '('  shift, and go to state 567


State 431

  790 make_struct_decl: "default" . '<' $@91 type_declaration_no_options '>' $@92 use_initializer

    '<'  shift, and go to state 568


State 432

  644 basic_type_declaration: "bitfield" .

    $default  reduce using rule 644 (basic_type_declaration)


State 433

  793 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  796                | "tuple" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 569
    '('  shift, and go to state 570


State 434

  787 make_struct_decl: "variant" . '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    '<'  shift, and go to state 571


State 435

  473 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  474               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  475               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 572


State 436

  427 expr: "++" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 573
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 437

  428 expr: "--" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 574
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 438

  476 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 575


State 439

  477 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 576


State 440

  478 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 577


State 441

  479 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 578


State 442

  480 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 579


State 443

  482 expr_mtag: "$c" . '(' expr ')' '(' ')'
  483          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 580


State 444

  481 expr_mtag: "..." .

    $default  reduce using rule 481 (expr_mtag)


State 445

  336 expr_numeric_const: "integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 446

  338 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 447

  337 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 448

  339 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 449

  340 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 450

  341 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 451

  342 expr_numeric_const: "double constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 452

   36 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 33 (string_builder_body)

    string_builder_body  go to state 581


State 453

  404 expr: '-' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 582
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 454

  403 expr: '+' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 583
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 455

  440 expr: '*' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 584
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 456

  402 expr: '~' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 585
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 457

  401 expr: '!' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 586
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 458

  797 make_dim_decl: '[' . expr_list optional_comma ']'
  825 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  826                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 459

  431 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 591
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 460

  321 block_or_lambda: '$' .

    $default  reduce using rule 321 (block_or_lambda)


State 461

  322 block_or_lambda: '@' .
  323                | '@' . '@'
  368 func_addr_expr: '@' . '@' func_addr_name
  371               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  374               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  491 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 592

    $default  reduce using rule 322 (block_or_lambda)


State 462

  817 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  827 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 593
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 595
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 596
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 463

  395 expr: string_builder .

    $default  reduce using rule 395 (expr)


State 464

  394 expr: expr_reader .

    $default  reduce using rule 394 (expr)


State 465

  471 expr: expr_call_pipe .

    $default  reduce using rule 471 (expr)


State 466

  362 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  363                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  384 expr_call: name_in_namespace . '(' ')'
  385          | name_in_namespace . '(' "uninitialized" ')'
  386          | name_in_namespace . '(' make_struct_single ')'
  387          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  388          | name_in_namespace . '(' expr_list ')'
  392 expr: name_in_namespace .

    '('  shift, and go to state 597

    $default  reduce using rule 392 (expr)


State 467

  464 expr: expr_new .

    $default  reduce using rule 464 (expr)


State 468

  463 expr: expr_cast .

    $default  reduce using rule 463 (expr)


State 469

  462 expr: expr_type_decl .

    $default  reduce using rule 462 (expr)


State 470

  461 expr: expr_type_info .

    $default  reduce using rule 461 (expr)


State 471

  333 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 598


State 472

  467 expr: expr_full_block .

    $default  reduce using rule 467 (expr)


State 473

  393 expr: expr_numeric_const .

    $default  reduce using rule 393 (expr)


State 474

  466 expr: expr_named_call .

    $default  reduce using rule 466 (expr)


State 475

  465 expr: expr_method_call .

    $default  reduce using rule 465 (expr)


State 476

  438 expr: func_addr_expr .

    $default  reduce using rule 438 (expr)


State 477

  399 expr: expr_field .

    $default  reduce using rule 399 (expr)


State 478

  235 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  439 expr: expr_call .

    '$'  shift, and go to state 460
    '@'  shift, and go to state 599
    '{'  shift, and go to state 600

    $default  reduce using rule 439 (expr)

    block_or_lambda                go to state 601
    expr_full_block_assumed_piped  go to state 602


State 479

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  682 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 638


State 480

  443 expr: expr_generator .

    $default  reduce using rule 443 (expr)


State 481

  400 expr: expr_mtag .

    $default  reduce using rule 400 (expr)


State 482

  389 expr_call: basic_type_declaration . '(' ')'
  390          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 639


State 483

  396 expr: make_decl .

    $default  reduce using rule 396 (expr)


State 484

  756 make_decl: make_struct_decl .

    $default  reduce using rule 756 (make_decl)


State 485

  760 make_decl: make_tuple_call .

    $default  reduce using rule 760 (make_decl)


State 486

  757 make_decl: make_dim_decl .

    $default  reduce using rule 757 (make_decl)


State 487

  758 make_decl: make_table_decl .

    $default  reduce using rule 758 (make_decl)


State 488

  759 make_decl: array_comprehension .

    $default  reduce using rule 759 (make_decl)


State 489

  710 type_declaration_no_options_no_dim: "iterator" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 640


State 490

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 641


State 491

  655 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 642


State 492

  664 bitfield_type_declaration: "bitfield" '<' $@44 . bitfield_bits '>' $@45

    "name"  shift, and go to state 643

    bitfield_bits  go to state 644


State 493

  714 type_declaration_no_options_no_dim: "block" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 645


State 494

  717 type_declaration_no_options_no_dim: "block" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 646


State 495

  721 type_declaration_no_options_no_dim: "function" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 647


State 496

  724 type_declaration_no_options_no_dim: "function" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 648


State 497

  728 type_declaration_no_options_no_dim: "lambda" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 649


State 498

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 650


State 499

  734 type_declaration_no_options_no_dim: "tuple" '<' $@69 . tuple_type_list '>' $@70

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    tuple_type                          go to state 652
    tuple_type_list                     go to state 653
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 500

  737 type_declaration_no_options_no_dim: "variant" '<' $@71 . variant_type_list '>' $@72

    "name"  shift, and go to state 655

    variant_type       go to state 656
    variant_type_list  go to state 657


State 501

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  656 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 658


State 502

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 684 ($@48)

    $@48  go to state 659


State 503

  683 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 258 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 660
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 504

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 505

  696 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 506

  689 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 507

  691 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 508

  686 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 662


State 509

  694 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 510

  670 dim_list: '[' ']' .

    $default  reduce using rule 670 (dim_list)


State 511

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  669 dim_list: '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 663


State 512

  671 dim_list: dim_list '[' . expr ']'
  672         | dim_list '[' . ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    ']'                               shift, and go to state 664
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 665
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 513

  740 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 740 (type_declaration)


State 514

  739 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 739 (type_declaration)


State 515

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 . bitfield_alias_bits optional_commas $@84 '}'

    "name"  shift, and go to state 666

    $default  reduce using rule 659 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 667


State 516

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 . tuple_alias_type_list optional_semis $@76 '}'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    $default  reduce using rule 520 (tuple_alias_type_list)

    name_in_namespace                   go to state 263
    tuple_type                          go to state 668
    tuple_alias_type_list               go to state 669
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 517

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 . variant_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 655

    $default  reduce using rule 526 (variant_alias_type_list)

    variant_type             go to state 670
    variant_alias_type_list  go to state 671


State 518

  195 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 195 (function_name)


State 519

  185 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 185 (function_name)


State 520

  513 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 672
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 521

  287 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 287 (kwd_let_var_or_nothing)


State 522

  288 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 288 (kwd_let_var_or_nothing)


State 523

  512 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 675
    variable_name_with_pos_list  go to state 676


State 524

  133 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 133 (optional_function_argument_list)


State 525

  515 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 383
    '@'   shift, and go to state 214

    $default  reduce using rule 492 (optional_field_annotation)

    metadata_argument_list         go to state 215
    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 677


State 526

  135 optional_function_type: ':' type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 135 (optional_function_type)


State 527

  234 expression_block: $@9 '{' expressions . $@10 '}' expression_block_finally
  256 expressions: expressions . expression_any
  257            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 462

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)
    '}'          reduce using rule 233 ($@10)

    SEMICOLON                         go to state 692
    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    $@10                              go to state 707
    expr_call_pipe                    go to state 465
    expression_any                    go to state 708
    name_in_namespace                 go to state 466
    expression_delete                 go to state 709
    expr_new                          go to state 467
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 717
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 718
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 528

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 595 ($@40)

    $@40  go to state 719


State 529

  599 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 599 (optional_structure_parent)


State 530

  507 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  509                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  511                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  609 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 14
    '}'  shift, and go to state 720

    "def"     reduce using rule 129 (optional_annotation_list)
    $default  reduce using rule 506 ($@33)

    optional_annotation_list  go to state 721
    $@33                      go to state 722


State 531

  542 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 723


State 532

  541 let_variable_name_with_pos_list: "name" .
  543                                | "name" . "aka" "name"

    "aka"  shift, and go to state 724

    $default  reduce using rule 541 (let_variable_name_with_pos_list)


State 533

  544 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  545                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  551 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  552                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  553                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 725
    ':'  shift, and go to state 726
    '&'  shift, and go to state 409

    $default  reduce using rule 539 (optional_ref)

    optional_ref  go to state 727


State 534

  565 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 565 (global_variable_declaration_list)


State 535

  547 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 547 (global_let_variable_name_with_pos_list)


State 536

  554 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  555                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539
    ';'   shift, and go to state 728

    copy_or_move_or_clone  go to state 729


State 537

  537 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 537 (copy_or_move_or_clone)


State 538

  538 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 538 (copy_or_move_or_clone)


State 539

  536 copy_or_move_or_clone: '=' .

    $default  reduce using rule 536 (copy_or_move_or_clone)


State 540

  556 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 730
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 541

  681 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration . '>' $@47
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 731


State 542

  704 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration . '>' $@52
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 732


State 543

  707 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair . '>' $@54

    '>'  shift, and go to state 733


State 544

  667 table_type_pair: type_declaration .
  668                | type_declaration . c_or_s type_declaration
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '|'          shift, and go to state 372
    ';'          shift, and go to state 691

    $default  reduce using rule 667 (table_type_pair)

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 738


State 545

  781 make_struct_decl: "struct" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 779 ($@85)

    $@85  go to state 739


State 546

  784 make_struct_decl: "class" '<' . $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 782 ($@87)

    $@87  go to state 740


State 547

  271 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 269 ($@11)

    $@11  go to state 741


State 548

  273 expr_new: "new" new_type_declaration .
  274         | "new" new_type_declaration . '(' use_initializer ')'
  275         | "new" new_type_declaration . '(' expr_list ')'
  276         | "new" new_type_declaration . '(' make_struct_single ')'
  277         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 742

    $default  reduce using rule 273 (expr_new)


State 549

  272 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 272 (new_type_declaration)


State 550

  278 expr_new: "new" make_decl .

    $default  reduce using rule 278 (expr_new)


State 551

  313 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  314               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  315               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 743
    '('  shift, and go to state 744


State 552

  312 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 310 ($@19)

    $@19  go to state 745


State 553

  800 make_dim_decl: "array" "struct" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 746


State 554

  803 make_dim_decl: "array" "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 747


State 555

  806 make_dim_decl: "array" "variant" . '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    '<'  shift, and go to state 748


State 556

  810 make_dim_decl: "array" '<' . $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    $default  reduce using rule 808 ($@101)

    $@101  go to state 749


State 557

  807 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 750
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 558

  819 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  820                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 751
    type_declaration_no_options_no_dim  go to state 269


State 559

  818 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 595
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 752
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 560

  441 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 753
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 561

  303 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 301 ($@13)

    $@13  go to state 754


State 562

  306 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 304 ($@15)

    $@15  go to state 755


State 563

  442 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 756
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 564

  309 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 307 ($@17)

    $@17  go to state 757


State 565

  472 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 758
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 566

  814 make_dim_decl: "fixed_array" '<' . $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    $default  reduce using rule 812 ($@103)

    $@103  go to state 759


State 567

  811 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 760
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 568

  790 make_struct_decl: "default" '<' . $@91 type_declaration_no_options '>' $@92 use_initializer

    $default  reduce using rule 788 ($@91)

    $@91  go to state 761


State 569

  796 make_tuple_call: "tuple" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 794 ($@93)

    $@93  go to state 762


State 570

  793 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 763
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 571

  787 make_struct_decl: "variant" '<' . $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    $default  reduce using rule 785 ($@89)

    $@89  go to state 764


State 572

  473 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  474               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  475               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 765
    type_declaration_no_options_no_dim  go to state 269


State 573

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  427     | "++" expr .
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 427 (expr)


State 574

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  428     | "--" expr .
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 428 (expr)


State 575

  476 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 766
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 576

  477 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 767
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 577

  478 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 768
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 578

  479 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 769
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 579

  480 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 770
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 580

  482 expr_mtag: "$c" '(' . expr ')' '(' ')'
  483          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 771
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 581

   34 string_builder_body: string_builder_body . character_sequence
   35                    | string_builder_body . "{" expr "}"
   36 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 772
    "{"                   shift, and go to state 773

    character_sequence  go to state 774


State 582

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  404 expr: '-' expr .
  405     | expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 404 (expr)


State 583

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  403 expr: '+' expr .
  405     | expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 403 (expr)


State 584

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  440     | '*' expr .
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 440 (expr)


State 585

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  402 expr: '~' expr .
  405     | expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 402 (expr)


State 586

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  401 expr: '!' expr .
  405     | expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 401 (expr)


State 587

  825 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 775


State 588

  826 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 776


State 589

  317 expr_list: expr_list . ',' expr
  797 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 778


State 590

  316 expr_list: expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 316 (expr_list)


State 591

  317 expr_list: expr_list . ',' expr
  431 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 779


State 592

  323 block_or_lambda: '@' '@' .
  368 func_addr_expr: '@' '@' . func_addr_name
  371               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  374               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  491 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "$c"    shift, and go to state 781
    "name"  shift, and go to state 56
    '<'     shift, and go to state 782

    $default  reduce using rule 323 (block_or_lambda)

    name_in_namespace  go to state 783
    func_addr_name     go to state 784


State 593

  827 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 785


State 594

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  791 make_map_tuple: expr . "=>" expr
  792               | expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "=>"   shift, and go to state 786
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 792 (make_map_tuple)


State 595

  815 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 815 (expr_map_tuple_list)


State 596

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  817 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 787

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 788


State 597

  362 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  363                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  384 expr_call: name_in_namespace '(' . ')'
  385          | name_in_namespace '(' . "uninitialized" ')'
  386          | name_in_namespace '(' . make_struct_single ')'
  387          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  388          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "uninitialized"                   shift, and go to state 789
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 792
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 793
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 794
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 795
    make_struct_single      go to state 796
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 598

  333 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 798


State 599

  322 block_or_lambda: '@' .
  323                | '@' . '@'

    '@'  shift, and go to state 799

    $default  reduce using rule 322 (block_or_lambda)


State 600

  335 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 255 (expressions)

    expressions  go to state 800


State 601

  334 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 801


State 602

  235 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 235 (expr_call_pipe)


State 603

  448 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr "is" . basic_type_declaration
  450     | expr "is" . "name"
  490 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 802
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 803
    "name"      shift, and go to state 804

    basic_type_declaration  go to state 805


State 604

  451 expr: expr "as" . "name"
  454     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  455     | expr "as" . basic_type_declaration
  488 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 806
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 807
    "name"      shift, and go to state 808

    basic_type_declaration  go to state 809


State 605

  405 expr: expr "<<" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 810
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 606

  406 expr: expr ">>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 811
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 607

  429 expr: expr "++" .

    $default  reduce using rule 429 (expr)


State 608

  430 expr: expr "--" .

    $default  reduce using rule 430 (expr)


State 609

  418 expr: expr "<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 812
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 610

  419 expr: expr ">=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 813
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 611

  416 expr: expr "==" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 814
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 612

  417 expr: expr "!=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 815
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 613

  364 expr_method_call: expr "->" . "name" '(' ')'
  365                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 816


State 614

  444 expr: expr "??" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 817
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 615

  436 expr: expr "?." . "name"
  485 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 818
    "name"  shift, and go to state 819


State 616

  434 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 820
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 617

  468 expr: expr "<|" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 821
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 618

  469 expr: expr "|>" . expr
  470     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 822
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 823
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 619

  407 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 824
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 620

  408 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 825
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 621

  423 expr: expr "&&" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 826
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 622

  424 expr: expr "||" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 827
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 623

  425 expr: expr "^^" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 828
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 624

  426 expr: expr ".." . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 829
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 625

  445 expr: expr '?' . expr ':' expr
  456     | expr '?' . "as" "name"
  459     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr '?' . "as" basic_type_declaration
  489 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "as"                              shift, and go to state 830
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 831
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 626

  421 expr: expr '|' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 832
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 627

  422 expr: expr '^' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 833
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 628

  420 expr: expr '&' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 834
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 629

  414 expr: expr '<' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 835
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 630

  415 expr: expr '>' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 836
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 631

  410 expr: expr '-' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 837
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 632

  409 expr: expr '+' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 838
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 633

  411 expr: expr '*' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 839
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 634

  412 expr: expr '/' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 840
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 635

  413 expr: expr '%' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 841
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 636

  375 expr_field: expr '.' . "name"
  376           | expr '.' . '.' "name"
  377           | expr '.' . "name" '(' ')'
  378           | expr '.' . "name" '(' expr_list ')'
  379           | expr '.' . basic_type_declaration '(' ')'
  380           | expr '.' . basic_type_declaration '(' expr_list ')'
  383           | expr '.' . $@25 error $@26
  433 expr: expr '.' . '[' expr ']'
  435     | expr '.' . "?[" expr ']'
  437     | expr '.' . "?." "name"
  484 expr_mtag: expr '.' . "$f" '(' expr ')'
  486          | expr '.' . '.' "$f" '(' expr ')'
  487          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "?."        shift, and go to state 842
    "?["        shift, and go to state 843
    "$f"        shift, and go to state 844
    "name"      shift, and go to state 845
    '.'         shift, and go to state 846
    '['         shift, and go to state 847

    $default  reduce using rule 381 ($@25)

    $@25                    go to state 848
    basic_type_declaration  go to state 849


State 637

  432 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 850
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 638

  682 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 639

  389 expr_call: basic_type_declaration '(' . ')'
  390          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 851
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 852
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 640

  710 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration . '>' $@56
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 853


State 641

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration . '>' $@50
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 854


State 642

  655 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 655 (auto_type_declaration)


State 643

  657 bitfield_bits: "name" .

    $default  reduce using rule 657 (bitfield_bits)


State 644

  658 bitfield_bits: bitfield_bits . ';' "name"
  664 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits . '>' $@45

    '>'  shift, and go to state 855
    ';'  shift, and go to state 856


State 645

  714 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration . '>' $@58
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 857


State 646

  717 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 858


State 647

  721 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration . '>' $@62
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 859


State 648

  724 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 860


State 649

  728 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration . '>' $@66
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 861


State 650

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 862


State 651

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  517 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 95
    ':'   shift, and go to state 863

    $default  reduce using rule 264 (name_in_namespace)


State 652

  518 tuple_type_list: tuple_type .

    $default  reduce using rule 518 (tuple_type_list)


State 653

  519 tuple_type_list: tuple_type_list . c_or_s tuple_type
  734 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list . '>' $@70

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 864
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 865


State 654

  516 tuple_type: type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 516 (tuple_type)


State 655

  523 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 866


State 656

  524 variant_type_list: variant_type .

    $default  reduce using rule 524 (variant_type_list)


State 657

  525 variant_type_list: variant_type_list . c_or_s variant_type
  737 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list . '>' $@72

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 867
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 868


State 658

  656 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 656 (auto_type_declaration)


State 659

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    type_declaration_no_options_list    go to state 869
    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 870


State 660

  683 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 871


State 661

  259 optional_expr_list: expr_list . optional_comma
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 872


State 662

  686 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 686 (type_declaration_no_options_no_dim)


State 663

  669 dim_list: '[' expr ']' .

    $default  reduce using rule 669 (dim_list)


State 664

  672 dim_list: dim_list '[' ']' .

    $default  reduce using rule 672 (dim_list)


State 665

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  671 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 873


State 666

  660 bitfield_alias_bits: "name" .

    $default  reduce using rule 660 (bitfield_alias_bits)


State 667

  661 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits . optional_commas $@84 '}'

    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 588 (optional_commas)

    COMMA            go to state 874
    commas           go to state 875
    optional_commas  go to state 876


State 668

  521 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 521 (tuple_alias_type_list)


State 669

  522 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list . optional_semis $@76 '}'

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 877
    semis           go to state 878
    optional_semis  go to state 879


State 670

  527 variant_alias_type_list: variant_type .

    $default  reduce using rule 527 (variant_alias_type_list)


State 671

  528 variant_alias_type_list: variant_alias_type_list . semis variant_type
  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list . optional_semis $@80 '}'

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 877
    semis           go to state 880
    optional_semis  go to state 881


State 672

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  513 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 882


State 673

  614 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 883


State 674

  613 variable_name_with_pos_list: "name" .
  615                            | "name" . "aka" "name"

    "aka"  shift, and go to state 884

    $default  reduce using rule 613 (variable_name_with_pos_list)


State 675

  512 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 512 (function_argument_declaration)


State 676

  531 variable_declaration: variable_name_with_pos_list .
  532                     | variable_name_with_pos_list . '&'
  533                     | variable_name_with_pos_list . ':' type_declaration
  534                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  535                     | variable_name_with_pos_list . copy_or_move expr
  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 885
    ','   shift, and go to state 886
    '='   shift, and go to state 887
    ':'   shift, and go to state 888
    '&'   shift, and go to state 889

    $default  reduce using rule 531 (variable_declaration)

    copy_or_move  go to state 890


State 677

  515 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 515 (function_argument_list)


State 678

  257 expressions: expressions error .

    $default  reduce using rule 257 (expressions)


State 679

  281 expression_return: "return" .
  282                  | "return" . expr
  283                  | "return" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 891
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 281 (expression_return)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 892
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 680

  279 expression_break: "break" .

    $default  reduce using rule 279 (expression_break)


State 681

  286 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 893
    $@9               go to state 332


State 682

  267 expression_delete: "delete" . expr
  268                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "explicit"                        shift, and go to state 894
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 895
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 683

   91 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 896


State 684

  280 expression_continue: "continue" .

    $default  reduce using rule 280 (expression_continue)


State 685

  254 expression_any: "pass" . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 897


State 686

   56 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 898


State 687

   57 expression_goto: "goto" . "label" "integer constant"
   58                | "goto" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 899
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 900
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 688

   86 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  472 expr: "unsafe" . '(' expr ')'

    "emitted ;"  shift, and go to state 171
    '('          shift, and go to state 565

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 901


State 689

  284 expression_yield: "yield" . expr
  285                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 902
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 903
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 690

   19 SEMICOLON: "emitted ;" .

    $default  reduce using rule 19 (SEMICOLON)


State 691

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 692

  236 expression_any: SEMICOLON .

    $default  reduce using rule 236 (expression_any)


State 693

  252 expression_any: expression_label . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 904


State 694

  253 expression_any: expression_goto . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 905


State 695

   83 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 906


State 696

  249 expression_any: expression_if_then_else .

    $default  reduce using rule 249 (expression_any)


State 697

   82 expression_if_then_else: $@2 . if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else

    "if"         shift, and go to state 907
    "static_if"  shift, and go to state 908

    if_or_static_if  go to state 909


State 698

  250 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 250 (expression_any)


State 699

  244 expression_any: expression_for_loop .

    $default  reduce using rule 244 (expression_any)


State 700

   85 expression_for_loop: $@3 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 910


State 701

  241 expression_any: expression_unsafe .

    $default  reduce using rule 241 (expression_any)


State 702

  240 expression_any: expression_while_loop .

    $default  reduce using rule 240 (expression_any)


State 703

   88 expression_while_loop: $@4 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 911


State 704

  242 expression_any: expression_with .

    $default  reduce using rule 242 (expression_any)


State 705

   90 expression_with: $@5 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 912


State 706

  243 expression_any: expression_with_alias . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 913


State 707

  234 expression_block: $@9 '{' expressions $@10 . '}' expression_block_finally

    '}'  shift, and go to state 914


State 708

  256 expressions: expressions expression_any .

    $default  reduce using rule 256 (expressions)


State 709

  238 expression_any: expression_delete . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 915


State 710

   75 expression_if_one_liner: expression_break .
  245 expression_any: expression_break . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 75 (expression_if_one_liner)

    SEMICOLON  go to state 916


State 711

   76 expression_if_one_liner: expression_continue .
  246 expression_any: expression_continue . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 76 (expression_if_one_liner)

    SEMICOLON  go to state 917


State 712

   73 expression_if_one_liner: expression_return .
  247 expression_any: expression_return . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 73 (expression_if_one_liner)

    SEMICOLON  go to state 918


State 713

   74 expression_if_one_liner: expression_yield .
  248 expression_any: expression_yield . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 74 (expression_if_one_liner)

    SEMICOLON  go to state 919


State 714

  251 expression_any: expression_try_catch .

    $default  reduce using rule 251 (expression_any)


State 715

  298 expression_let: kwd_let . optional_in_scope let_variable_declaration
  299               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  300               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 920

    $default  reduce using rule 293 (optional_in_scope)

    optional_in_scope  go to state 921


State 716

  239 expression_any: expression_let .

    $default  reduce using rule 239 (expression_any)


State 717

  237 expression_any: expr_assign . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 922


State 718

   72 expression_if_one_liner: expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 603
    "as"    shift, and go to state 604
    "+="    shift, and go to state 923
    "-="    shift, and go to state 924
    "/="    shift, and go to state 925
    "*="    shift, and go to state 926
    "%="    shift, and go to state 927
    "&="    shift, and go to state 928
    "|="    shift, and go to state 929
    "^="    shift, and go to state 930
    "<<"    shift, and go to state 605
    ">>"    shift, and go to state 606
    "++"    shift, and go to state 607
    "--"    shift, and go to state 608
    "<="    shift, and go to state 609
    "<<="   shift, and go to state 931
    ">>="   shift, and go to state 932
    ">="    shift, and go to state 610
    "=="    shift, and go to state 611
    "!="    shift, and go to state 612
    "->"    shift, and go to state 613
    "<-"    shift, and go to state 933
    "??"    shift, and go to state 614
    "?."    shift, and go to state 615
    "?["    shift, and go to state 616
    "<|"    shift, and go to state 617
    "|>"    shift, and go to state 618
    ":="    shift, and go to state 934
    "<<<"   shift, and go to state 619
    ">>>"   shift, and go to state 620
    "<<<="  shift, and go to state 935
    ">>>="  shift, and go to state 936
    "&&"    shift, and go to state 621
    "||"    shift, and go to state 622
    "^^"    shift, and go to state 623
    "&&="   shift, and go to state 937
    "||="   shift, and go to state 938
    "^^="   shift, and go to state 939
    ".."    shift, and go to state 624
    '='     shift, and go to state 940
    '?'     shift, and go to state 625
    '|'     shift, and go to state 626
    '^'     shift, and go to state 627
    '&'     shift, and go to state 628
    '<'     shift, and go to state 629
    '>'     shift, and go to state 630
    '-'     shift, and go to state 631
    '+'     shift, and go to state 632
    '*'     shift, and go to state 633
    '/'     shift, and go to state 634
    '%'     shift, and go to state 635
    '.'     shift, and go to state 636
    '['     shift, and go to state 637

    "if"      reduce using rule 72 (expression_if_one_liner)
    $default  reduce using rule 343 (expr_assign)


State 719

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 . enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 941

    $default  reduce using rule 573 (enum_list)

    enum_expression  go to state 942
    enum_list        go to state 943


State 720

  609 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 609 (optional_struct_variable_declaration_list)


State 721

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  511                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 944


State 722

  507 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    '@'  shift, and go to state 214

    $default  reduce using rule 492 (optional_field_annotation)

    metadata_argument_list          go to state 215
    optional_field_annotation       go to state 945
    structure_variable_declaration  go to state 946


State 723

  542 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 947
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 724

  543 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 948


State 725

  544 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  545                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 949


State 726

  551 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  552                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 950
    type_declaration_no_options_no_dim  go to state 269


State 727

  553 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 951


State 728

  554 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 554 (global_let_variable_declaration)


State 729

  555 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 952
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 730

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  556 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 953


State 731

  681 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 680 ($@47)

    $@47  go to state 954


State 732

  704 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 703 ($@52)

    $@52  go to state 955


State 733

  707 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' . $@54

    $default  reduce using rule 706 ($@54)

    $@54  go to state 956


State 734

   17 COMMA: "emitted ," .

    $default  reduce using rule 17 (COMMA)


State 735

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 736

  665 c_or_s: COMMA .

    $default  reduce using rule 665 (c_or_s)


State 737

  666 c_or_s: SEMICOLON .

    $default  reduce using rule 666 (c_or_s)


State 738

  668 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 957


State 739

  781 make_struct_decl: "struct" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 958
    type_declaration_no_options_no_dim  go to state 269


State 740

  784 make_struct_decl: "class" '<' $@87 . type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 959
    type_declaration_no_options_no_dim  go to state 269


State 741

  271 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 960


State 742

  274 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  275         | "new" new_type_declaration '(' . expr_list ')'
  276         | "new" new_type_declaration '(' . make_struct_single ')'
  277         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "uninitialized"                   shift, and go to state 961
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 777 (use_initializer)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 962
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 795
    make_struct_single      go to state 963
    use_initializer         go to state 964
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 743

  314 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  315               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 965


State 744

  313 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 966
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 745

  312 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 967


State 746

  800 make_dim_decl: "array" "struct" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 798 ($@95)

    $@95  go to state 968


State 747

  803 make_dim_decl: "array" "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 801 ($@97)

    $@97  go to state 969


State 748

  806 make_dim_decl: "array" "variant" '<' . $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    $default  reduce using rule 804 ($@99)

    $@99  go to state 970


State 749

  810 make_dim_decl: "array" '<' $@101 . type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 971
    type_declaration_no_options_no_dim  go to state 269


State 750

  317 expr_list: expr_list . ',' expr
  807 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 972


State 751

  819 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  820                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 973
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 974


State 752

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  818 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 787

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 975


State 753

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  441     | "deref" '(' expr . ')'
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 976


State 754

  303 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 269


State 755

  306 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 978
    type_declaration_no_options_no_dim  go to state 269


State 756

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  442     | "addr" '(' expr . ')'
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 979


State 757

  309 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 269


State 758

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  472     | "unsafe" '(' expr . ')'
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 981


State 759

  814 make_dim_decl: "fixed_array" '<' $@103 . type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 982
    type_declaration_no_options_no_dim  go to state 269


State 760

  317 expr_list: expr_list . ',' expr
  811 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 983


State 761

  790 make_struct_decl: "default" '<' $@91 . type_declaration_no_options '>' $@92 use_initializer

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 984
    type_declaration_no_options_no_dim  go to state 269


State 762

  796 make_tuple_call: "tuple" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 269


State 763

  317 expr_list: expr_list . ',' expr
  793 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 986


State 764

  787 make_struct_decl: "variant" '<' $@89 . type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 987
    type_declaration_no_options_no_dim  go to state 269


State 765

  473 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  474               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  475               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block

    '>'  shift, and go to state 988


State 766

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  476 expr_mtag: "$$" '(' expr . ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 989


State 767

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  477 expr_mtag: "$i" '(' expr . ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 990


State 768

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  478 expr_mtag: "$v" '(' expr . ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 991


State 769

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  479 expr_mtag: "$b" '(' expr . ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 992


State 770

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  480 expr_mtag: "$a" '(' expr . ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 993


State 771

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  482 expr_mtag: "$c" '(' expr . ')' '(' ')'
  483          | "$c" '(' expr . ')' '(' expr_list ')'
  484          | expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 994


State 772

   36 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 36 (string_builder)


State 773

   35 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 995
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 774

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   34 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 217
    STRING_CHARACTER_ESC  shift, and go to state 218

    $default  reduce using rule 34 (string_builder_body)


State 775

  825 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 996


State 776

  826 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 997


State 777

  317 expr_list: expr_list ',' . expr
  824 optional_comma: ',' .

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 824 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 998
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 778

  797 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 999


State 779

  431 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1000


State 780

  367 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1001


State 781

  491 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1002


State 782

  371 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  374               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 372 ($@23)
    '>'       reduce using rule 372 ($@23)
    '('       reduce using rule 372 ($@23)
    $default  reduce using rule 369 ($@21)

    $@21  go to state 1003
    $@23  go to state 1004


State 783

  366 func_addr_name: name_in_namespace .

    $default  reduce using rule 366 (func_addr_name)


State 784

  368 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 368 (func_addr_expr)


State 785

  827 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1005


State 786

  791 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1006
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 787

  816 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  824 optional_comma: ',' .

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 824 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1007
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 788

  817 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1008


State 789

  385 expr_call: name_in_namespace '(' "uninitialized" . ')'
  387          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    ')'     shift, and go to state 1010

    make_struct_fields  go to state 795
    make_struct_single  go to state 1011


State 790

  765 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  766                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1012


State 791

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  761 make_struct_fields: "name" . copy_or_move expr
  762                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1013
    "::"  shift, and go to state 95
    '='   shift, and go to state 887

    $default  reduce using rule 264 (name_in_namespace)

    copy_or_move  go to state 1014


State 792

  362 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  797 make_dim_decl: '[' . expr_list optional_comma ']'
  825 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  826                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1015
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 793

  384 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 384 (expr_call)


State 794

  317 expr_list: expr_list . ',' expr
  363 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  388 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1017


State 795

  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  770 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 770 (make_struct_single)


State 796

  386 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1019


State 797

  332 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1020


State 798

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1021


State 799

  323 block_or_lambda: '@' '@' .

    $default  reduce using rule 323 (block_or_lambda)


State 800

  256 expressions: expressions . expression_any
  257            | expressions . error
  335 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 462
    '}'                               shift, and go to state 1022

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)

    SEMICOLON                         go to state 692
    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    expr_call_pipe                    go to state 465
    expression_any                    go to state 708
    name_in_namespace                 go to state 466
    expression_delete                 go to state 709
    expr_new                          go to state 467
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 717
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 718
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 801

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 1023


State 802

  448 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1024


State 803

  490 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1025


State 804

  450 expr: expr "is" "name" .

    $default  reduce using rule 450 (expr)


State 805

  449 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 449 (expr)


State 806

  454 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1026


State 807

  488 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1027


State 808

  451 expr: expr "as" "name" .

    $default  reduce using rule 451 (expr)


State 809

  455 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 455 (expr)


State 810

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  405     | expr "<<" expr .
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 405 (expr)


State 811

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  406     | expr ">>" expr .
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 406 (expr)


State 812

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  418     | expr "<=" expr .
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 418 (expr)


State 813

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  419     | expr ">=" expr .
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 419 (expr)


State 814

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  416     | expr "==" expr .
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 416 (expr)


State 815

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  417     | expr "!=" expr .
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 417 (expr)


State 816

  364 expr_method_call: expr "->" "name" . '(' ')'
  365                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1028


State 817

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  444     | expr "??" expr .
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 444 (expr)


State 818

  485 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1029


State 819

  436 expr: expr "?." "name" .

    $default  reduce using rule 436 (expr)


State 820

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  434     | expr "?[" expr . ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1030


State 821

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  468     | expr "<|" expr .
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 468 (expr)


State 822

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  469     | expr "|>" expr .
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 469 (expr)


State 823

  389 expr_call: basic_type_declaration . '(' ')'
  390          | basic_type_declaration . '(' expr_list ')'
  470 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 639

    $default  reduce using rule 470 (expr)


State 824

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  407     | expr "<<<" expr .
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 407 (expr)


State 825

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  408     | expr ">>>" expr .
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 408 (expr)


State 826

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  423     | expr "&&" expr .
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 423 (expr)


State 827

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  424     | expr "||" expr .
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "^^"   shift, and go to state 623
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 424 (expr)


State 828

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  425     | expr "^^" expr .
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 425 (expr)


State 829

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  426     | expr ".." expr .
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 426 (expr)


State 830

  456 expr: expr '?' "as" . "name"
  459     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  460     | expr '?' "as" . basic_type_declaration
  489 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1031
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 1032
    "name"      shift, and go to state 1033

    basic_type_declaration  go to state 1034


State 831

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  445     | expr '?' expr . ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    ':'    shift, and go to state 1035
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 832

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  421     | expr '|' expr .
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 421 (expr)


State 833

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  422     | expr '^' expr .
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 422 (expr)


State 834

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  420     | expr '&' expr .
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 420 (expr)


State 835

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  414     | expr '<' expr .
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 414 (expr)


State 836

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  415     | expr '>' expr .
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 415 (expr)


State 837

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  410     | expr '-' expr .
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 410 (expr)


State 838

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  409     | expr '+' expr .
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 409 (expr)


State 839

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  411     | expr '*' expr .
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 411 (expr)


State 840

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  412     | expr '/' expr .
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 412 (expr)


State 841

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  413     | expr '%' expr .
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 413 (expr)


State 842

  437 expr: expr '.' "?." . "name"
  487 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1036
    "name"  shift, and go to state 1037


State 843

  435 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1038
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 844

  484 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1039


State 845

  375 expr_field: expr '.' "name" .
  377           | expr '.' "name" . '(' ')'
  378           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1040

    $default  reduce using rule 375 (expr_field)


State 846

  376 expr_field: expr '.' '.' . "name"
  486 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1041
    "name"  shift, and go to state 1042


State 847

  433 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1043
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 848

  383 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1044


State 849

  379 expr_field: expr '.' basic_type_declaration . '(' ')'
  380           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1045


State 850

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  432     | expr '[' expr . ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1046


State 851

  389 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 389 (expr_call)


State 852

  317 expr_list: expr_list . ',' expr
  390 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1048


State 853

  710 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 709 ($@56)

    $@56  go to state 1049


State 854

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 699 ($@50)

    $@50  go to state 1050


State 855

  664 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' . $@45

    $default  reduce using rule 663 ($@45)

    $@45  go to state 1051


State 856

  658 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1052


State 857

  714 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 713 ($@58)

    $@58  go to state 1053


State 858

  717 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1054


State 859

  721 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 720 ($@62)

    $@62  go to state 1055


State 860

  724 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1056


State 861

  728 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 727 ($@66)

    $@66  go to state 1057


State 862

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1058


State 863

  517 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1059


State 864

  734 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' . $@70

    $default  reduce using rule 733 ($@70)

    $@70  go to state 1060


State 865

  519 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    tuple_type                          go to state 1061
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 866

  523 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1062


State 867

  737 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' . $@72

    $default  reduce using rule 736 ($@72)

    $@72  go to state 1063


State 868

  525 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 655

    variant_type  go to state 1064


State 869

  263 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 1065
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 1066


State 870

  262 type_declaration_no_options_list: type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 262 (type_declaration_no_options_list)


State 871

  683 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 872

  259 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 259 (optional_expr_list)


State 873

  671 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 671 (dim_list)


State 874

  571 commas: COMMA .

    $default  reduce using rule 571 (commas)


State 875

  572 commas: commas . COMMA
  589 optional_commas: commas .
  661 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"       shift, and go to state 1067
    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 589 (optional_commas)

    COMMA  go to state 1068


State 876

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas . $@84 '}'

    $default  reduce using rule 754 ($@84)

    $@84  go to state 1069


State 877

   77 semis: SEMICOLON .

    $default  reduce using rule 77 (semis)


State 878

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  522 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    "emitted ;"  shift, and go to state 690
    '$'          shift, and go to state 262
    ';'          shift, and go to state 691

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON                           go to state 1070
    name_in_namespace                   go to state 263
    tuple_type                          go to state 1071
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 879

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis . $@76 '}'

    $default  reduce using rule 744 ($@76)

    $@76  go to state 1072


State 880

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  528 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"       shift, and go to state 655
    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON     go to state 1070
    variant_type  go to state 1073


State 881

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis . $@80 '}'

    $default  reduce using rule 749 ($@80)

    $@80  go to state 1074


State 882

  513 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 513 (function_argument_declaration)


State 883

  614 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1075
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 884

  615 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1076


State 885

  530 copy_or_move: "<-" .

    $default  reduce using rule 530 (copy_or_move)


State 886

  616 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  617                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1077


State 887

  529 copy_or_move: '=' .

    $default  reduce using rule 529 (copy_or_move)


State 888

  533 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  534                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1078


State 889

  532 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 532 (variable_declaration)


State 890

  535 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1079
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 891

  283 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1080
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 892

  282 expression_return: "return" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 282 (expression_return)


State 893

  286 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1081


State 894

  268 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1082
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 895

  267 expression_delete: "delete" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 267 (expression_delete)


State 896

   91 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1083


State 897

  254 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 898

   56 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1084


State 899

   57 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1085


State 900

   58 expression_goto: "goto" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 58 (expression_goto)


State 901

   86 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1086
    $@9               go to state 332


State 902

  285 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1087
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 903

  284 expression_yield: "yield" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 284 (expression_yield)


State 904

  252 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 252 (expression_any)


State 905

  253 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 253 (expression_any)


State 906

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1088


State 907

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 908

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 909

   82 expression_if_then_else: $@2 if_or_static_if . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1089


State 910

   85 expression_for_loop: $@3 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1090


State 911

   88 expression_while_loop: $@4 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1091


State 912

   90 expression_with: $@5 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1092


State 913

  243 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 243 (expression_any)


State 914

  234 expression_block: $@9 '{' expressions $@10 '}' . expression_block_finally

    "finally"  shift, and go to state 1093

    $default  reduce using rule 228 (expression_block_finally)

    expression_block_finally  go to state 1094


State 915

  238 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 238 (expression_any)


State 916

  245 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 245 (expression_any)


State 917

  246 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 246 (expression_any)


State 918

  247 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 247 (expression_any)


State 919

  248 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 248 (expression_any)


State 920

  292 optional_in_scope: "inscope" .

    $default  reduce using rule 292 (optional_in_scope)


State 921

  298 expression_let: kwd_let optional_in_scope . let_variable_declaration
  299               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  300               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532
    '('     shift, and go to state 1095
    '{'     shift, and go to state 1096

    tuple_expansion_variable_declaration  go to state 1097
    let_variable_name_with_pos_list       go to state 533
    let_variable_declaration              go to state 1098


State 922

  237 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 237 (expression_any)


State 923

  353 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1099
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 924

  354 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1100
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 925

  356 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1101
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 926

  355 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1102
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 927

  357 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1103
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 928

  347 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1104
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 929

  348 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1105
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 930

  349 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1106
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 931

  358 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1107
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 932

  359 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1108
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 933

  345 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1109
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 934

  346 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1110
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 935

  360 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1111
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 936

  361 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1112
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 937

  350 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1113
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 938

  351 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1114
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 939

  352 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1115
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 940

  344 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1116
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 941

  569 enum_expression: "name" .
  570                | "name" . '=' expr

    '='  shift, and go to state 1117

    $default  reduce using rule 569 (enum_expression)


State 942

  574 enum_list: enum_expression .

    $default  reduce using rule 574 (enum_list)


State 943

  575 enum_list: enum_list . commas enum_expression
  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list . optional_commas $@41 '}'

    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 588 (optional_commas)

    COMMA            go to state 874
    commas           go to state 1118
    optional_commas  go to state 1119


State 944

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  511                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1120
    "private"  shift, and go to state 1121

    $default  reduce using rule 499 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1122


State 945

  504 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1123

    $default  reduce using rule 502 (optional_static_member_variable)

    optional_static_member_variable  go to state 1124


State 946

  507 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1125


State 947

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  542 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1126


State 948

  543 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 543 (let_variable_name_with_pos_list)


State 949

  544 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  545                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1127

    $default  reduce using rule 544 (let_variable_name_with_pos_list)


State 950

  551 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  552                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"         shift, and go to state 537
    ":="         shift, and go to state 538
    "emitted ;"  shift, and go to state 690
    '='          shift, and go to state 539
    ';'          shift, and go to state 691

    SEMICOLON              go to state 1128
    copy_or_move_or_clone  go to state 1129


State 951

  553 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1130
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 952

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  555 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1131


State 953

  556 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 556 (global_let_variable_declaration)


State 954

  681 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 681 (type_declaration_no_options_no_dim)


State 955

  704 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 956

  707 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' $@54 .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 957

  668 table_type_pair: type_declaration c_or_s type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 668 (table_type_pair)


State 958

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1132


State 959

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options . '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1133


State 960

  271 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1134


State 961

  277 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  778 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009

    $default  reduce using rule 778 (use_initializer)

    make_struct_fields  go to state 795
    make_struct_single  go to state 1135


State 962

  275 expr_new: "new" new_type_declaration '(' expr_list . ')'
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1136


State 963

  276 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1137


State 964

  274 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1138


State 965

  314 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  315               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 1139
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 1140


State 966

  313 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1141


State 967

  312 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1142


State 968

  800 make_dim_decl: "array" "struct" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1143
    type_declaration_no_options_no_dim  go to state 269


State 969

  803 make_dim_decl: "array" "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1144
    type_declaration_no_options_no_dim  go to state 269


State 970

  806 make_dim_decl: "array" "variant" '<' $@99 . type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1145
    type_declaration_no_options_no_dim  go to state 269


State 971

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options . '>' $@102 '(' optional_expr_list ')'

    '>'  shift, and go to state 1146


State 972

  807 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 973

  819 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1148


State 974

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1149
    type_declaration_no_options_no_dim  go to state 269


State 975

  818 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1150


State 976

  441 expr: "deref" '(' expr ')' .

    $default  reduce using rule 441 (expr)


State 977

  303 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr

    '>'  shift, and go to state 1151


State 978

  306 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr

    '>'  shift, and go to state 1152


State 979

  442 expr: "addr" '(' expr ')' .

    $default  reduce using rule 442 (expr)


State 980

  309 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr

    '>'  shift, and go to state 1153


State 981

  472 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 472 (expr)


State 982

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options . '>' $@104 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1154


State 983

  811 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1155


State 984

  790 make_struct_decl: "default" '<' $@91 type_declaration_no_options . '>' $@92 use_initializer

    '>'  shift, and go to state 1156


State 985

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1157


State 986

  793 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1158


State 987

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options . '>' $@90 '(' make_variant_dim ')'

    '>'  shift, and go to state 1159


State 988

  473 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  474               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  475               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 331 (optional_capture_list)

    optional_capture_list  go to state 1160


State 989

  476 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 990

  477 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 991

  478 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 992

  479 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 993

  480 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 994

  482 expr_mtag: "$c" '(' expr ')' . '(' ')'
  483          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1161


State 995

   35 string_builder_body: string_builder_body "{" expr . "}"
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    "}"    shift, and go to state 1162
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 996

  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1163
    ','   shift, and go to state 886


State 997

  826 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1164


State 998

  317 expr_list: expr_list ',' expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 317 (expr_list)


State 999

  797 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 797 (make_dim_decl)


State 1000

  431 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 431 (expr)


State 1001

  367 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1165
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1002

  491 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1166
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1003

  371 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1167
    type_declaration_no_options_no_dim  go to state 269


State 1004

  374 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1168


State 1005

  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1169
    ','   shift, and go to state 886


State 1006

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  791 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 791 (make_map_tuple)


State 1007

  816 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 816 (expr_map_tuple_list)


State 1008

  817 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 817 (make_table_decl)


State 1009

  761 make_struct_fields: "name" . copy_or_move expr
  762                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1013
    '='   shift, and go to state 887

    copy_or_move  go to state 1014


State 1010

  385 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 385 (expr_call)


State 1011

  387 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1170


State 1012

  765 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  766                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1171
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1013

  762 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1172
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1014

  761 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1173
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1015

  362 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1018
    ']'  shift, and go to state 1174


State 1016

  317 expr_list: expr_list ',' . expr
  363 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 1175
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 998
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1017

  388 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 388 (expr_call)


State 1018

  763 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  764                   | make_struct_fields ',' . "name" ":=" expr
  767                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1176
    "name"  shift, and go to state 1177


State 1019

  386 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 386 (expr_call)


State 1020

  332 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1178
    ":="    shift, and go to state 1179
    "name"  shift, and go to state 1180
    '='     shift, and go to state 1181
    '&'     shift, and go to state 1182

    capture_entry  go to state 1183
    capture_list   go to state 1184


State 1021

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1185


State 1022

  335 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 335 (expr_full_block_assumed_piped)


State 1023

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 329

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1186


State 1024

  448 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 446 ($@27)

    $@27  go to state 1187


State 1025

  490 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1188
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1026

  454 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 452 ($@29)

    $@29  go to state 1189


State 1027

  488 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1190
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1028

  364 expr_method_call: expr "->" "name" '(' . ')'
  365                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1191
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1192
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1029

  485 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1193
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1030

  434 expr: expr "?[" expr ']' .

    $default  reduce using rule 434 (expr)


State 1031

  459 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1194


State 1032

  489 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1195


State 1033

  456 expr: expr '?' "as" "name" .

    $default  reduce using rule 456 (expr)


State 1034

  460 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 460 (expr)


State 1035

  445 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1196
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1036

  487 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1197


State 1037

  437 expr: expr '.' "?." "name" .

    $default  reduce using rule 437 (expr)


State 1038

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  435     | expr '.' "?[" expr . ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1198


State 1039

  484 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1199
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1040

  377 expr_field: expr '.' "name" '(' . ')'
  378           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1200
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1201
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1041

  486 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1202


State 1042

  376 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 376 (expr_field)


State 1043

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  433     | expr '.' '[' expr . ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1203


State 1044

  383 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 382 ($@26)

    $@26  go to state 1204


State 1045

  379 expr_field: expr '.' basic_type_declaration '(' . ')'
  380           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1205
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1206
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1046

  432 expr: expr '[' expr ']' .

    $default  reduce using rule 432 (expr)


State 1047

  317 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 998
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1048

  390 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 390 (expr_call)


State 1049

  710 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 1050

  700 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 1051

  664 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' $@45 .

    $default  reduce using rule 664 (bitfield_type_declaration)


State 1052

  658 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 658 (bitfield_bits)


State 1053

  714 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 1054

  717 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 716 ($@60)

    $@60  go to state 1207


State 1055

  721 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 1056

  724 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 723 ($@64)

    $@64  go to state 1208


State 1057

  728 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 1058

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 730 ($@68)

    $@68  go to state 1209


State 1059

  517 tuple_type: "name" ':' type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 517 (tuple_type)


State 1060

  734 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' $@70 .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 1061

  519 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 519 (tuple_type_list)


State 1062

  523 variant_type: "name" ':' type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 523 (variant_type)


State 1063

  737 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' $@72 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1064

  525 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 525 (variant_type_list)


State 1065

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1210


State 1066

  263 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1211


State 1067

  661 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 661 (bitfield_alias_bits)


State 1068

  572 commas: commas COMMA .

    $default  reduce using rule 572 (commas)


State 1069

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 . '}'

    '}'  shift, and go to state 1212


State 1070

   78 semis: semis SEMICOLON .

    $default  reduce using rule 78 (semis)


State 1071

  522 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 522 (tuple_alias_type_list)


State 1072

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 . '}'

    '}'  shift, and go to state 1213


State 1073

  528 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 528 (variant_alias_type_list)


State 1074

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 . '}'

    '}'  shift, and go to state 1214


State 1075

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  614 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1215


State 1076

  615 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 615 (variable_name_with_pos_list)


State 1077

  616 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  617                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1216

    $default  reduce using rule 616 (variable_name_with_pos_list)


State 1078

  533 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  534                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 885
    '='   shift, and go to state 887
    '|'   shift, and go to state 372

    $default  reduce using rule 533 (variable_declaration)

    copy_or_move  go to state 1217


State 1079

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  535 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 535 (variable_declaration)


State 1080

  283 expression_return: "return" "<-" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 283 (expression_return)


State 1081

  286 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1218
    $@9               go to state 332


State 1082

  268 expression_delete: "delete" "explicit" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 268 (expression_delete)


State 1083

   91 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1219
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1084

   56 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 56 (expression_label)


State 1085

   57 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 57 (expression_goto)


State 1086

   86 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 86 (expression_unsafe)


State 1087

  285 expression_yield: "yield" "<-" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 285 (expression_yield)


State 1088

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1220
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1089

   82 expression_if_then_else: $@2 if_or_static_if '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1221
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1090

   85 expression_for_loop: $@3 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1222


State 1091

   88 expression_while_loop: $@4 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1223
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1092

   90 expression_with: $@5 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1224
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1093

  231 expression_block_finally: "finally" . $@7 '{' expressions $@8 '}'

    $default  reduce using rule 229 ($@7)

    $@7  go to state 1225


State 1094

  234 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally .

    $default  reduce using rule 234 (expression_block)


State 1095

  296 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  297                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1226

    tuple_expansion  go to state 1227


State 1096

  300 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 548 (variable_declaration_list)

    variable_declaration_list  go to state 1228


State 1097

  299 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 299 (expression_let)


State 1098

  298 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 1099

  353 expr_assign: expr "+=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 353 (expr_assign)


State 1100

  354 expr_assign: expr "-=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 354 (expr_assign)


State 1101

  356 expr_assign: expr "/=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 356 (expr_assign)


State 1102

  355 expr_assign: expr "*=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 355 (expr_assign)


State 1103

  357 expr_assign: expr "%=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 357 (expr_assign)


State 1104

  347 expr_assign: expr "&=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 347 (expr_assign)


State 1105

  348 expr_assign: expr "|=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 348 (expr_assign)


State 1106

  349 expr_assign: expr "^=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 349 (expr_assign)


State 1107

  358 expr_assign: expr "<<=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 358 (expr_assign)


State 1108

  359 expr_assign: expr ">>=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 359 (expr_assign)


State 1109

  345 expr_assign: expr "<-" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 345 (expr_assign)


State 1110

  346 expr_assign: expr ":=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 346 (expr_assign)


State 1111

  360 expr_assign: expr "<<<=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 360 (expr_assign)


State 1112

  361 expr_assign: expr ">>>=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 361 (expr_assign)


State 1113

  350 expr_assign: expr "&&=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 350 (expr_assign)


State 1114

  351 expr_assign: expr "||=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 351 (expr_assign)


State 1115

  352 expr_assign: expr "^^=" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 352 (expr_assign)


State 1116

  344 expr_assign: expr '=' expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 344 (expr_assign)


State 1117

  570 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1229
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1118

  572 commas: commas . COMMA
  575 enum_list: enum_list commas . enum_expression
  589 optional_commas: commas .

    "name"       shift, and go to state 941
    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 589 (optional_commas)

    COMMA            go to state 1068
    enum_expression  go to state 1230


State 1119

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas . $@41 '}'

    $default  reduce using rule 596 ($@41)

    $@41  go to state 1231


State 1120

  500 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 500 (optional_public_or_private_member_variable)


State 1121

  501 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 501 (optional_public_or_private_member_variable)


State 1122

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  511                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1232
    "static"    shift, and go to state 1123

    $default  reduce using rule 502 (optional_static_member_variable)

    optional_static_member_variable  go to state 1233


State 1123

  503 optional_static_member_variable: "static" .

    $default  reduce using rule 503 (optional_static_member_variable)


State 1124

  504 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1234
    "sealed"    shift, and go to state 1235

    $default  reduce using rule 494 (optional_override)

    optional_override  go to state 1236


State 1125

  507 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 507 (struct_variable_declaration_list)


State 1126

  542 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 542 (let_variable_name_with_pos_list)


State 1127

  545 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1237


State 1128

  551 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 551 (let_variable_declaration)


State 1129

  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1238
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1130

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  553 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1239


State 1131

  555 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 555 (global_let_variable_declaration)


State 1132

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 780 ($@86)

    $@86  go to state 1240


State 1133

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' . $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 783 ($@88)

    $@88  go to state 1241


State 1134

  271 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 270 ($@12)

    $@12  go to state 1242


State 1135

  277 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1243


State 1136

  275 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 275 (expr_new)


State 1137

  276 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 276 (expr_new)


State 1138

  274 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 274 (expr_new)


State 1139

  314 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1244


State 1140

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1245


State 1141

  313 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1142

  312 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 311 ($@20)

    $@20  go to state 1246


State 1143

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1247


State 1144

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1248


State 1145

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options . '>' $@100 '(' make_variant_dim ')'

    '>'  shift, and go to state 1249


State 1146

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' . $@102 '(' optional_expr_list ')'

    $default  reduce using rule 809 ($@102)

    $@102  go to state 1250


State 1147

  807 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 807 (make_dim_decl)


State 1148

  819 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 463
    expr_reader                   go to state 464
    expr_call_pipe                go to state 465
    optional_expr_map_tuple_list  go to state 1251
    name_in_namespace             go to state 466
    expr_new                      go to state 467
    expr_cast                     go to state 468
    expr_type_decl                go to state 469
    expr_type_info                go to state 470
    block_or_lambda               go to state 471
    expr_full_block               go to state 472
    expr_numeric_const            go to state 473
    expr_named_call               go to state 474
    expr_method_call              go to state 475
    func_addr_expr                go to state 476
    expr_field                    go to state 477
    expr_call                     go to state 478
    expr                          go to state 594
    expr_generator                go to state 480
    expr_mtag                     go to state 481
    basic_type_declaration        go to state 482
    make_decl                     go to state 483
    make_struct_decl              go to state 484
    make_map_tuple                go to state 595
    make_tuple_call               go to state 485
    make_dim_decl                 go to state 486
    expr_map_tuple_list           go to state 1252
    make_table_decl               go to state 487
    array_comprehension           go to state 488


State 1149

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1253


State 1150

  818 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 818 (make_table_decl)


State 1151

  303 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 302 ($@14)

    $@14  go to state 1254


State 1152

  306 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 305 ($@16)

    $@16  go to state 1255


State 1153

  309 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 308 ($@18)

    $@18  go to state 1256


State 1154

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' . $@104 '(' expr_list optional_comma ')'

    $default  reduce using rule 813 ($@104)

    $@104  go to state 1257


State 1155

  811 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 811 (make_dim_decl)


State 1156

  790 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' . $@92 use_initializer

    $default  reduce using rule 789 ($@92)

    $@92  go to state 1258


State 1157

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 795 ($@94)

    $@94  go to state 1259


State 1158

  793 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 793 (make_tuple_call)


State 1159

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' . $@90 '(' make_variant_dim ')'

    $default  reduce using rule 786 ($@90)

    $@90  go to state 1260


State 1160

  473 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  474               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  475               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171
    '('          shift, and go to state 1261

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1262


State 1161

  482 expr_mtag: "$c" '(' expr ')' '(' . ')'
  483          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1263
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1264
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1162

   35 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 35 (string_builder_body)


State 1163

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1265
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1164

  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1266
    ','   shift, and go to state 886


State 1165

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  367 func_addr_name: "$i" '(' expr . ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1267


State 1166

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  491          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1268


State 1167

  371 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name

    '>'  shift, and go to state 1269


State 1168

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1270


State 1169

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1271
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1170

  387 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 387 (expr_call)


State 1171

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  765 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  766                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1272


State 1172

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  762 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 762 (make_struct_fields)


State 1173

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 761 (make_struct_fields)


State 1174

  362 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1273


State 1175

  363 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  797 make_dim_decl: '[' . expr_list optional_comma ']'
  825 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  826                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1274
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1176

  767 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  768                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1275


State 1177

  763 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  764                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1276
    '='   shift, and go to state 887

    copy_or_move  go to state 1277


State 1178

  326 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1278


State 1179

  327 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1279


State 1180

  328 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1280


State 1181

  325 capture_entry: '=' . "name"

    "name"  shift, and go to state 1281


State 1182

  324 capture_entry: '&' . "name"

    "name"  shift, and go to state 1282


State 1183

  329 capture_list: capture_entry .

    $default  reduce using rule 329 (capture_list)


State 1184

  330 capture_list: capture_list . ',' capture_entry
  332 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1283
    ')'  shift, and go to state 1284


State 1185

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1285


State 1186

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 388

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1286


State 1187

  448 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1287
    type_declaration_no_options_no_dim  go to state 269


State 1188

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  490          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1288


State 1189

  454 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1289


State 1190

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  488          | expr "as" "$f" '(' expr . ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1290


State 1191

  364 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 364 (expr_method_call)


State 1192

  317 expr_list: expr_list . ',' expr
  365 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1291


State 1193

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  485          | expr "?." "$f" '(' expr . ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1292


State 1194

  459 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 457 ($@31)

    $@31  go to state 1293


State 1195

  489 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1294
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1196

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  445     | expr '?' expr ':' expr .
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 445 (expr)


State 1197

  487 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1295
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1198

  435 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 435 (expr)


State 1199

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  484          | expr '.' "$f" '(' expr . ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1296


State 1200

  377 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 377 (expr_field)


State 1201

  317 expr_list: expr_list . ',' expr
  378 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1297


State 1202

  486 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1298
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1203

  433 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 433 (expr)


State 1204

  383 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 383 (expr_field)


State 1205

  379 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 379 (expr_field)


State 1206

  317 expr_list: expr_list . ',' expr
  380 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1299


State 1207

  717 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 1208

  724 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 1209

  731 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 1210

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 258 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 1300
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1211

  263 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 263 (type_declaration_no_options_list)


State 1212

  755 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_emit_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}' .

    $default  reduce using rule 755 (bitfield_alias_declaration)


State 1213

  745 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_emit_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}' .

    $default  reduce using rule 745 (tuple_alias_declaration)


State 1214

  750 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_emit_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}' .

    $default  reduce using rule 750 (variant_alias_declaration)


State 1215

  614 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 614 (variable_name_with_pos_list)


State 1216

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1301


State 1217

  534 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1302
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1218

  286 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 286 (expression_try_catch)


State 1219

   91 expression_with_alias: "assume" "name" '=' expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 91 (expression_with_alias)


State 1220

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1303


State 1221

   82 expression_if_then_else: $@2 if_or_static_if '(' expr . ')' optional_emit_semis expression_block expression_else
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1304


State 1222

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  616 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  617                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1305
    ','   shift, and go to state 886


State 1223

   88 expression_while_loop: $@4 "while" '(' expr . ')' optional_emit_semis expression_block
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1306


State 1224

   90 expression_with: $@5 "with" '(' expr . ')' optional_emit_semis expression_block
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1307


State 1225

  231 expression_block_finally: "finally" $@7 . '{' expressions $@8 '}'

    '{'  shift, and go to state 1308


State 1226

  294 tuple_expansion: "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1227

  295 tuple_expansion: tuple_expansion . ',' "name"
  296 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  297                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1309
    ')'  shift, and go to state 1310


State 1228

  300 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  549 variable_declaration_list: variable_declaration_list . ';'
  550                          | variable_declaration_list . let_variable_declaration

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532
    ';'     shift, and go to state 1311
    '}'     shift, and go to state 1312

    let_variable_name_with_pos_list  go to state 533
    let_variable_declaration         go to state 1313


State 1229

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  570 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 570 (enum_expression)


State 1230

  575 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 575 (enum_list)


State 1231

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 . '}'

    '}'  shift, and go to state 1314


State 1232

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1315

    $default  reduce using rule 497 (optional_constant)

    optional_constant  go to state 1316


State 1233

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1234
    "sealed"    shift, and go to state 1235

    $default  reduce using rule 494 (optional_override)

    optional_override  go to state 1317


State 1234

  495 optional_override: "override" .

    $default  reduce using rule 495 (optional_override)


State 1235

  496 optional_override: "sealed" .

    $default  reduce using rule 496 (optional_override)


State 1236

  504 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1120
    "private"  shift, and go to state 1121

    $default  reduce using rule 499 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1318


State 1237

  545 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 545 (let_variable_name_with_pos_list)


State 1238

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1319


State 1239

  553 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 553 (let_variable_declaration)


State 1240

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1320


State 1241

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1321


State 1242

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 271 (new_type_declaration)


State 1243

  277 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 277 (expr_new)


State 1244

  314 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1322
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1245

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1323


State 1246

  312 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 312 (expr_type_decl)


State 1247

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 799 ($@96)

    $@96  go to state 1324


State 1248

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 802 ($@98)

    $@98  go to state 1325


State 1249

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' . $@100 '(' make_variant_dim ')'

    $default  reduce using rule 805 ($@100)

    $@100  go to state 1326


State 1250

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 . '(' optional_expr_list ')'

    '('  shift, and go to state 1327


State 1251

  819 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1328


State 1252

  261 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 787

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 1329


State 1253

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1330


State 1254

  303 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1331
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1255

  306 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1332
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1256

  309 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1333
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1257

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1334


State 1258

  790 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 . use_initializer

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1336


State 1259

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1337


State 1260

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 . '(' make_variant_dim ')'

    '('  shift, and go to state 1338


State 1261

  473 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  474               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1339
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1340
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1262

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1341
    $@9               go to state 332


State 1263

  482 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1264

  317 expr_list: expr_list . ',' expr
  483 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1342


State 1265

  317 expr_list: expr_list . ',' expr
  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1343


State 1266

  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1344
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1267

  367 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 367 (func_addr_name)


State 1268

  491 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1269

  371 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 370 ($@22)

    $@22  go to state 1345


State 1270

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1346


State 1271

  317 expr_list: expr_list . ',' expr
  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1347


State 1272

  765 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  766                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1348
    '='   shift, and go to state 887

    copy_or_move  go to state 1349


State 1273

  362 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 362 (expr_named_call)


State 1274

  363 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1018
    ']'  shift, and go to state 1350


State 1275

  767 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  768                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1351
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1276

  764 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1352
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1277

  763 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1353
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1278

  326 capture_entry: "<-" "name" .

    $default  reduce using rule 326 (capture_entry)


State 1279

  327 capture_entry: ":=" "name" .

    $default  reduce using rule 327 (capture_entry)


State 1280

  328 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1354


State 1281

  325 capture_entry: '=' "name" .

    $default  reduce using rule 325 (capture_entry)


State 1282

  324 capture_entry: '&' "name" .

    $default  reduce using rule 324 (capture_entry)


State 1283

  330 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1178
    ":="    shift, and go to state 1179
    "name"  shift, and go to state 1180
    '='     shift, and go to state 1181
    '&'     shift, and go to state 1182

    capture_entry  go to state 1355


State 1284

  332 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 332 (optional_capture_list)


State 1285

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1356

    $default  reduce using rule 232 ($@9)

    expression_block       go to state 1357
    $@9                    go to state 332
    block_or_simple_block  go to state 1358


State 1286

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1359


State 1287

  448 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28

    '>'  shift, and go to state 1360


State 1288

  490 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1289

  454 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1361


State 1290

  488 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 1291

  365 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 365 (expr_method_call)


State 1292

  485 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 485 (expr_mtag)


State 1293

  459 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1362


State 1294

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  489          | expr '?' "as" "$f" '(' expr . ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1363


State 1295

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  487          | expr '.' "?." "$f" '(' expr . ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1364


State 1296

  484 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 484 (expr_mtag)


State 1297

  378 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 378 (expr_field)


State 1298

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  486          | expr '.' '.' "$f" '(' expr . ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1365


State 1299

  380 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 380 (expr_field)


State 1300

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1366


State 1301

  617 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 1302

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  534 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 534 (variable_declaration)


State 1303

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1367

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1368


State 1304

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' . optional_emit_semis expression_block expression_else

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1369


State 1305

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1370
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1306

   88 expression_while_loop: $@4 "while" '(' expr ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1371


State 1307

   90 expression_with: $@5 "with" '(' expr ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1372


State 1308

  231 expression_block_finally: "finally" $@7 '{' . expressions $@8 '}'

    $default  reduce using rule 255 (expressions)

    expressions  go to state 1373


State 1309

  295 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1374


State 1310

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  297                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1375
    '&'  shift, and go to state 409

    $default  reduce using rule 539 (optional_ref)

    optional_ref  go to state 1376


State 1311

  549 variable_declaration_list: variable_declaration_list ';' .

    $default  reduce using rule 549 (variable_declaration_list)


State 1312

  300 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 300 (expression_let)


State 1313

  550 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 550 (variable_declaration_list)


State 1314

  597 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}' .

    $default  reduce using rule 597 (enum_declaration)


State 1315

  498 optional_constant: "const" .

    $default  reduce using rule 498 (optional_constant)


State 1316

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 508 ($@34)

    $@34  go to state 1377


State 1317

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1315

    $default  reduce using rule 497 (optional_constant)

    optional_constant  go to state 1378


State 1318

  504 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 1379
    variable_name_with_pos_list  go to state 676


State 1319

  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 552 (let_variable_declaration)


State 1320

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1380


State 1321

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1381


State 1322

  314 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1382


State 1323

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1383


State 1324

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1384


State 1325

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1385


State 1326

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 . '(' make_variant_dim ')'

    '('  shift, and go to state 1386


State 1327

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 258 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 1387
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1328

  819 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 819 (make_table_decl)


State 1329

  261 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 261 (optional_expr_map_tuple_list)


State 1330

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 260 (optional_expr_map_tuple_list)

    string_builder                go to state 463
    expr_reader                   go to state 464
    expr_call_pipe                go to state 465
    optional_expr_map_tuple_list  go to state 1388
    name_in_namespace             go to state 466
    expr_new                      go to state 467
    expr_cast                     go to state 468
    expr_type_decl                go to state 469
    expr_type_info                go to state 470
    block_or_lambda               go to state 471
    expr_full_block               go to state 472
    expr_numeric_const            go to state 473
    expr_named_call               go to state 474
    expr_method_call              go to state 475
    func_addr_expr                go to state 476
    expr_field                    go to state 477
    expr_call                     go to state 478
    expr                          go to state 594
    expr_generator                go to state 480
    expr_mtag                     go to state 481
    basic_type_declaration        go to state 482
    make_decl                     go to state 483
    make_struct_decl              go to state 484
    make_map_tuple                go to state 595
    make_tuple_call               go to state 485
    make_dim_decl                 go to state 486
    expr_map_tuple_list           go to state 1252
    make_table_decl               go to state 487
    array_comprehension           go to state 488


State 1331

  303 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 303 (expr_cast)


State 1332

  306 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 306 (expr_cast)


State 1333

  309 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 309 (expr_cast)


State 1334

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1389
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1335

  778 use_initializer: "uninitialized" .

    $default  reduce using rule 778 (use_initializer)


State 1336

  790 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 use_initializer .

    $default  reduce using rule 790 (make_struct_decl)


State 1337

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1390


State 1338

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009

    make_struct_fields  go to state 1391
    make_variant_dim    go to state 1392


State 1339

  473 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 473 (expr_generator)


State 1340

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  474 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1393


State 1341

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 475 (expr_generator)


State 1342

  483 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 483 (expr_mtag)


State 1343

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1394


State 1344

  317 expr_list: expr_list . ',' expr
  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1395


State 1345

  371 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "name"  shift, and go to state 56

    name_in_namespace  go to state 783
    func_addr_name     go to state 1396


State 1346

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 373 ($@24)

    $@24  go to state 1397


State 1347

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1398


State 1348

  766 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1399
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1349

  765 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1400
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1350

  363 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1401


State 1351

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  768                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1402


State 1352

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  764 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 764 (make_struct_fields)


State 1353

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  763 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 763 (make_struct_fields)


State 1354

  328 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1403


State 1355

  330 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 330 (capture_list)


State 1356

  319 block_or_simple_block: "=>" . expr
  320                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 1404
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1405
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1357

  318 block_or_simple_block: expression_block .

    $default  reduce using rule 318 (block_or_simple_block)


State 1358

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 333 (expr_full_block)


State 1359

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1406
    $@9               go to state 332


State 1360

  448 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 447 ($@28)

    $@28  go to state 1407


State 1361

  454 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 453 ($@30)

    $@30  go to state 1408


State 1362

  459 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  739 type_declaration: type_declaration . '|' type_declaration_no_options
  740                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1409


State 1363

  489 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1364

  487 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 1365

  486 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 486 (expr_mtag)


State 1366

  685 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 1367

   71 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder           go to state 463
    expr_reader              go to state 464
    expression_if_one_liner  go to state 1410
    expr_call_pipe           go to state 465
    name_in_namespace        go to state 466
    expr_new                 go to state 467
    expression_break         go to state 1411
    expression_continue      go to state 1412
    expression_return        go to state 1413
    expression_yield         go to state 1414
    expr_cast                go to state 468
    expr_type_decl           go to state 469
    expr_type_info           go to state 470
    block_or_lambda          go to state 471
    expr_full_block          go to state 472
    expr_numeric_const       go to state 473
    expr_named_call          go to state 474
    expr_method_call         go to state 475
    func_addr_expr           go to state 476
    expr_field               go to state 477
    expr_call                go to state 478
    expr                     go to state 1415
    expr_generator           go to state 480
    expr_mtag                go to state 481
    basic_type_declaration   go to state 482
    make_decl                go to state 483
    make_struct_decl         go to state 484
    make_tuple_call          go to state 485
    make_dim_decl            go to state 486
    make_table_decl          go to state 487
    array_comprehension      go to state 488


State 1368

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1416


State 1369

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1417
    $@9               go to state 332


State 1370

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1047
    ')'  shift, and go to state 1418


State 1371

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1419
    $@9               go to state 332


State 1372

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1420
    $@9               go to state 332


State 1373

  231 expression_block_finally: "finally" $@7 '{' expressions . $@8 '}'
  256 expressions: expressions . expression_any
  257            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 462

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)
    '}'          reduce using rule 230 ($@8)

    SEMICOLON                         go to state 692
    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    $@8                               go to state 1421
    expr_call_pipe                    go to state 465
    expression_any                    go to state 708
    name_in_namespace                 go to state 466
    expression_delete                 go to state 709
    expr_new                          go to state 467
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 717
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 718
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 1374

  295 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1375

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1422
    type_declaration_no_options_no_dim  go to state 269


State 1376

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1423


State 1377

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1424


State 1378

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 510 ($@35)

    $@35  go to state 1425


State 1379

  504 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 504 (structure_variable_declaration)


State 1380

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    '('     shift, and go to state 1426

    $default  reduce using rule 776 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1427
    make_struct_dim_list           go to state 1428
    make_struct_dim_decl           go to state 1429
    optional_make_struct_dim_decl  go to state 1430


State 1381

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    '('     shift, and go to state 1426

    $default  reduce using rule 776 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1427
    make_struct_dim_list           go to state 1428
    make_struct_dim_decl           go to state 1429
    optional_make_struct_dim_decl  go to state 1431


State 1382

  314 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1383

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1432
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1384

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1433


State 1385

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1335

    $default  reduce using rule 777 (use_initializer)

    use_initializer  go to state 1434


State 1386

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009

    make_struct_fields  go to state 1391
    make_variant_dim    go to state 1435


State 1387

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1436


State 1388

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1437


State 1389

  317 expr_list: expr_list . ',' expr
  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 1438


State 1390

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    '('     shift, and go to state 1426

    $default  reduce using rule 776 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1427
    make_struct_dim_list           go to state 1428
    make_struct_dim_decl           go to state 1429
    optional_make_struct_dim_decl  go to state 1439


State 1391

  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  769 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 769 (make_variant_dim)


State 1392

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1440


State 1393

  474 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 474 (expr_generator)


State 1394

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1441
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1395

  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1442


State 1396

  371 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 371 (func_addr_expr)


State 1397

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "name"  shift, and go to state 56

    name_in_namespace  go to state 783
    func_addr_name     go to state 1443


State 1398

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1444
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1399

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  766 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 766 (make_struct_fields)


State 1400

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  765 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 765 (make_struct_fields)


State 1401

  363 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 363 (expr_named_call)


State 1402

  767 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  768                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1445
    '='   shift, and go to state 887

    copy_or_move  go to state 1446


State 1403

  328 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 328 (capture_entry)


State 1404

  320 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1447
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1405

  319 block_or_simple_block: "=>" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 319 (block_or_simple_block)


State 1406

  334 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 334 (expr_full_block_assumed_piped)


State 1407

  448 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 448 (expr)


State 1408

  454 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 454 (expr)


State 1409

  459 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 458 ($@32)

    $@32  go to state 1448


State 1410

   71 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 71 (expression_else_one_liner)


State 1411

   75 expression_if_one_liner: expression_break .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1412

   76 expression_if_one_liner: expression_continue .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1413

   73 expression_if_one_liner: expression_return .

    $default  reduce using rule 73 (expression_if_one_liner)


State 1414

   74 expression_if_one_liner: expression_yield .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1415

   72 expression_if_one_liner: expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 72 (expression_if_one_liner)


State 1416

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 83 (expression_if_then_else_oneliner)


State 1417

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1449
    "elif"         shift, and go to state 1450
    "static_elif"  shift, and go to state 1451

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1452
    expression_else      go to state 1453


State 1418

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1454


State 1419

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 1420

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 90 (expression_with)


State 1421

  231 expression_block_finally: "finally" $@7 '{' expressions $@8 . '}'

    '}'  shift, and go to state 1455


State 1422

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1456


State 1423

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1457
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1424

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1458


State 1425

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1459


State 1426

  771 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009

    make_struct_fields  go to state 1460


State 1427

  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  773 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1018

    $default  reduce using rule 773 (make_struct_dim_decl)


State 1428

  772 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  774 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1461

    $default  reduce using rule 823 (optional_comma)

    optional_comma  go to state 1462


State 1429

  775 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 775 (optional_make_struct_dim_decl)


State 1430

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1463


State 1431

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1464


State 1432

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1465


State 1433

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    '('     shift, and go to state 1426

    $default  reduce using rule 776 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1427
    make_struct_dim_list           go to state 1428
    make_struct_dim_decl           go to state 1429
    optional_make_struct_dim_decl  go to state 1466


State 1434

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009
    '('     shift, and go to state 1426

    $default  reduce using rule 776 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1427
    make_struct_dim_list           go to state 1428
    make_struct_dim_decl           go to state 1429
    optional_make_struct_dim_decl  go to state 1467


State 1435

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1468


State 1436

  810 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')' .

    $default  reduce using rule 810 (make_dim_decl)


State 1437

  820 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 820 (make_table_decl)


State 1438

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1469


State 1439

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1470


State 1440

  787 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')' .

    $default  reduce using rule 787 (make_struct_decl)


State 1441

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1471

    $default  reduce using rule 821 (array_comprehension_where)

    array_comprehension_where  go to state 1472


State 1442

  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1473
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1443

  374 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 374 (func_addr_expr)


State 1444

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1471

    $default  reduce using rule 821 (array_comprehension_where)

    array_comprehension_where  go to state 1474


State 1445

  768 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1475
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1446

  767 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1476
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1447

  320 block_or_simple_block: "=>" "<-" expr .
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 320 (block_or_simple_block)


State 1448

  459 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 459 (expr)


State 1449

   66 expression_else: "else" . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1477


State 1450

   59 elif_or_static_elif: "elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1451

   60 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 60 (elif_or_static_elif)


State 1452

   67 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1478


State 1453

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1454

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1479
    $@9               go to state 332


State 1455

  231 expression_block_finally: "finally" $@7 '{' expressions $@8 '}' .

    $default  reduce using rule 231 (expression_block_finally)


State 1456

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1480
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1457

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1481


State 1458

  509 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 509 (struct_variable_declaration_list)


State 1459

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1482
    $@9               go to state 332


State 1460

  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  771 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1483


State 1461

  772 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  824 optional_comma: ',' .

    '('  shift, and go to state 1484

    $default  reduce using rule 824 (optional_comma)


State 1462

  774 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 774 (make_struct_dim_decl)


State 1463

  781 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 781 (make_struct_decl)


State 1464

  784 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 784 (make_struct_decl)


State 1465

  315 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 315 (expr_type_info)


State 1466

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1485


State 1467

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1486


State 1468

  806 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')' .

    $default  reduce using rule 806 (make_dim_decl)


State 1469

  814 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')' .

    $default  reduce using rule 814 (make_dim_decl)


State 1470

  796 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 796 (make_tuple_call)


State 1471

  822 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1487


State 1472

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1488


State 1473

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1471

    $default  reduce using rule 821 (array_comprehension_where)

    array_comprehension_where  go to state 1489


State 1474

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1490


State 1475

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 768 (make_struct_fields)


State 1476

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 767 (make_struct_fields)


State 1477

   66 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1491
    $@9               go to state 332


State 1478

   67 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1492
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1479

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 85 (expression_for_loop)


State 1480

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1493


State 1481

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1482

  511 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 511 (struct_variable_declaration_list)


State 1483

  771 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 771 (make_struct_dim_list)


State 1484

  772 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1009

    make_struct_fields  go to state 1494


State 1485

  800 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 800 (make_dim_decl)


State 1486

  803 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 803 (make_dim_decl)


State 1487

  822 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1495
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1488

  825 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 825 (array_comprehension)


State 1489

  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1496


State 1490

  827 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 827 (array_comprehension)


State 1491

   66 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 66 (expression_else)


State 1492

   67 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1497


State 1493

  296 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)


State 1494

  763 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  764                   | make_struct_fields . ',' "name" ":=" expr
  767                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  768                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  772 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1498


State 1495

  364 expr_method_call: expr . "->" "name" '(' ')'
  365                 | expr . "->" "name" '(' expr_list ')'
  375 expr_field: expr . '.' "name"
  376           | expr . '.' '.' "name"
  377           | expr . '.' "name" '(' ')'
  378           | expr . '.' "name" '(' expr_list ')'
  379           | expr . '.' basic_type_declaration '(' ')'
  380           | expr . '.' basic_type_declaration '(' expr_list ')'
  383           | expr . '.' $@25 error $@26
  405 expr: expr . "<<" expr
  406     | expr . ">>" expr
  407     | expr . "<<<" expr
  408     | expr . ">>>" expr
  409     | expr . '+' expr
  410     | expr . '-' expr
  411     | expr . '*' expr
  412     | expr . '/' expr
  413     | expr . '%' expr
  414     | expr . '<' expr
  415     | expr . '>' expr
  416     | expr . "==" expr
  417     | expr . "!=" expr
  418     | expr . "<=" expr
  419     | expr . ">=" expr
  420     | expr . '&' expr
  421     | expr . '|' expr
  422     | expr . '^' expr
  423     | expr . "&&" expr
  424     | expr . "||" expr
  425     | expr . "^^" expr
  426     | expr . ".." expr
  429     | expr . "++"
  430     | expr . "--"
  432     | expr . '[' expr ']'
  433     | expr . '.' '[' expr ']'
  434     | expr . "?[" expr ']'
  435     | expr . '.' "?[" expr ']'
  436     | expr . "?." "name"
  437     | expr . '.' "?." "name"
  444     | expr . "??" expr
  445     | expr . '?' expr ':' expr
  448     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  449     | expr . "is" basic_type_declaration
  450     | expr . "is" "name"
  451     | expr . "as" "name"
  454     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  455     | expr . "as" basic_type_declaration
  456     | expr . '?' "as" "name"
  459     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  460     | expr . '?' "as" basic_type_declaration
  468     | expr . "<|" expr
  469     | expr . "|>" expr
  470     | expr . "|>" basic_type_declaration
  484 expr_mtag: expr . '.' "$f" '(' expr ')'
  485          | expr . "?." "$f" '(' expr ')'
  486          | expr . '.' '.' "$f" '(' expr ')'
  487          | expr . '.' "?." "$f" '(' expr ')'
  488          | expr . "as" "$f" '(' expr ')'
  489          | expr . '?' "as" "$f" '(' expr ')'
  490          | expr . "is" "$f" '(' expr ')'
  822 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 822 (array_comprehension_where)


State 1496

  826 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 826 (array_comprehension)


State 1497

   67 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1499


State 1498

  772 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 772 (make_struct_dim_list)


State 1499

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 232 ($@9)

    expression_block  go to state 1500
    $@9               go to state 332


State 1500

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1449
    "elif"         shift, and go to state 1450
    "static_elif"  shift, and go to state 1451

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1452
    expression_else      go to state 1501


State 1501

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 67 (expression_else)
